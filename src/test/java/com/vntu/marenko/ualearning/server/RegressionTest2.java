package com.vntu.marenko.ualearning.server;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType2 = createPostRequestToPostMapper1.getBType();
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        post3.setText("");
        java.lang.String str6 = post3.toString();
        post3.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest9 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest9.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        createPostRequestToPostMapper1.mapBtoA(post3, createPostRequest9, mappingContext12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.String str17 = post14.toString();
        java.lang.Integer int18 = post14.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str20 = createPostRequest19.getUsername();
        java.lang.String str21 = createPostRequest19.toString();
        ma.glasnost.orika.MappingContext mappingContext22 = null;
        createPostRequestToPostMapper1.mapBtoA(post14, createPostRequest19, mappingContext22);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest19, post26, mappingContext37);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper39 = null;
        ma.glasnost.orika.Mapper[] mapperArray41 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray42 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray41;
        objMapperArray42[0] = objMapper39;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper0.setUsedMappers(objMapperArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str17, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str21, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNotNull(mapperArray41);
        org.junit.Assert.assertNotNull(objMapperArray42);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag0.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        tag0.setName("User(login=null, password=null, name=null, surname=null, age=10, institution=null, email=null, rating=0)");
        java.lang.Integer int5 = tag0.getId();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto6 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto6.setId((int) (byte) 100);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto9 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto9.setInstitution("");
        java.lang.String str12 = userDto9.getInstitution();
        userDto9.setAge((int) (byte) 10);
        boolean boolean15 = postDto6.equals((java.lang.Object) (byte) 10);
        postDto6.setText("SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)");
        boolean boolean18 = tag0.equals((java.lang.Object) postDto6);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating(0);
        java.lang.String str3 = userDto0.getLogin();
        int int4 = userDto0.getAge();
        userDto0.setEmail("AnswerDto(id=0, text=Tag(id=null, name=null))");
        java.lang.String str7 = userDto0.getInstitution();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType4 = resultToDescriptionMapper1.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper6 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean7 = createPostRequestToPostMapper6.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        createPostRequestToPostMapper6.setMapperFacade(mapperFacade21);
        resultToDescriptionMapper1.setMapperFacade(mapperFacade21);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository26 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper27 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository24, testRepository25, answerRepository26);
        ma.glasnost.orika.MapperFacade mapperFacade28 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType30 = submitResultRequestToDomainMapper27.getAType();
        com.vntu.marenko.ualearning.server.model.Result result31 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int32 = result31.getId();
        com.vntu.marenko.ualearning.server.model.Test test33 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int34 = test33.getId();
        java.lang.Integer int35 = test33.getId();
        result31.setTest(test33);
        java.lang.Integer int37 = result31.getId();
        com.vntu.marenko.ualearning.server.model.Test test38 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int39 = test38.getId();
        java.lang.Integer int40 = test38.getId();
        test38.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int43 = test38.getCompletedCounter();
        java.lang.Integer int44 = test38.getCompletedCounter();
        result31.setTest(test38);
        com.vntu.marenko.ualearning.server.model.User user46 = result31.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest47 = null;
        ma.glasnost.orika.MappingContext mappingContext48 = null;
        submitResultRequestToDomainMapper27.mapBtoA(result31, submitResultRequest47, mappingContext48);
        com.vntu.marenko.ualearning.server.model.User user50 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str51 = user50.getEmail();
        java.lang.String str52 = user50.getSurname();
        result31.setUser(user50);
        result31.setId((java.lang.Integer) 0);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription56 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription56.setId((java.lang.Integer) 0);
        resultDescription56.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto61 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto61.setId(1);
        java.lang.String str64 = tagDto61.getName();
        java.lang.String str65 = tagDto61.getName();
        boolean boolean66 = resultDescription56.equals((java.lang.Object) str65);
        resultDescription56.setId((java.lang.Integer) 52);
        ma.glasnost.orika.MappingContext mappingContext69 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.mapAtoB(result31, resultDescription56, mappingContext69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNotNull(resultDescriptionType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertNotNull(submitResultRequestType30);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(user46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        java.lang.String str2 = answer0.getText();
        boolean boolean3 = answer0.isCorrect();
        answer0.setCorrect(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository8);
        boolean boolean10 = userRequest0.equals((java.lang.Object) postServiceImpl9);
        userRequest0.setAge((int) (byte) 1);
        userRequest0.setAge((int) (short) 100);
        java.lang.String str15 = userRequest0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=100, institution=null, email=UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0))" + "'", str15, "UserRequest(login=null, password=null, name=null, surname=null, age=100, institution=null, email=UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0))");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto21 = resultDto0.getUser();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto22 = resultDto0.getTest();
        com.vntu.marenko.ualearning.server.model.Answer answer23 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.Integer int24 = answer23.getId();
        com.vntu.marenko.ualearning.server.model.Test test25 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int26 = test25.getId();
        java.lang.Integer int27 = test25.getId();
        test25.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        test25.setId((java.lang.Integer) 1);
        boolean boolean32 = answer23.equals((java.lang.Object) test25);
        java.lang.String str33 = test25.getNameTest();
        java.lang.Integer int34 = test25.getCompletedCounter();
        boolean boolean35 = resultDto0.equals((java.lang.Object) test25);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto36 = resultDto0.getUser();
        resultDto0.setId((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(userDto21);
        org.junit.Assert.assertNull(testDto22);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(userDto36);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription6 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription6.setId((java.lang.Integer) 0);
        resultDescription6.setTestName("hi!");
        java.lang.String str11 = resultDescription6.getTestName();
        boolean boolean12 = resultDto0.equals((java.lang.Object) str11);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto13 = resultDto0.getTest();
        long long14 = resultDto0.getMark();
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(testDto13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.Integer int17 = post14.getId();
        java.util.Date date18 = post14.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = null;
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper10.mapBtoA(post14, createPostRequest19, mappingContext20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType22 = createPostRequestToPostMapper10.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper23 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType24 = createPostRequestToPostMapper23.getBType();
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        post25.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest31 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest31.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        createPostRequestToPostMapper23.mapBtoA(post25, createPostRequest31, mappingContext34);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig36 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper46 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean47 = createPostRequestToPostMapper46.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper48 = null;
        ma.glasnost.orika.MapperFacade mapperFacade49 = mapperConfig36.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper46, postToDtoMapper48);
        com.vntu.marenko.ualearning.server.model.Post post50 = new com.vntu.marenko.ualearning.server.model.Post();
        post50.setText("");
        java.lang.Integer int53 = post50.getId();
        java.util.Date date54 = post50.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest55 = null;
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        createPostRequestToPostMapper46.mapBtoA(post50, createPostRequest55, mappingContext56);
        java.lang.String[] strArray70 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "TagDto(id=0, name=null)", "LoginRequest(login=null, password=null)", "Answer(id=null, text=null, correct=false)", "CreatePostRequest(text=null, username=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=null, username=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        post50.setLikes((java.util.List<java.lang.String>) strList71);
        java.lang.Integer int74 = post50.getId();
        java.lang.Integer int75 = post50.getId();
        ma.glasnost.orika.MappingContext mappingContext76 = null;
        createPostRequestToPostMapper10.mapAtoB(createPostRequest31, post50, mappingContext76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType78 = createPostRequestToPostMapper10.getAType();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(date18);
        org.junit.Assert.assertNotNull(createPostRequestType22);
        org.junit.Assert.assertNotNull(postType24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertNotNull(mapperFacade49);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(date54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(createPostRequestType78);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType16 = submitResultRequestToDomainMapper7.getAType();
        com.vntu.marenko.ualearning.server.model.Result result17 = new com.vntu.marenko.ualearning.server.model.Result();
        result17.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user20 = new com.vntu.marenko.ualearning.server.model.User();
        user20.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test23 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean24 = user20.equals((java.lang.Object) test23);
        user20.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result17.setUser(user20);
        com.vntu.marenko.ualearning.server.model.Question question28 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int29 = question28.getId();
        java.lang.Integer int30 = question28.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer31 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer32 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer32.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray35 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer31, answer32 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList36 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList36, answerArray35);
        question28.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList36);
        result17.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList36);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest40 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest40.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest40.setTestId((int) (byte) 100);
        ma.glasnost.orika.MappingContext mappingContext45 = null;
        submitResultRequestToDomainMapper7.mapBtoA(result17, submitResultRequest40, mappingContext45);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription47 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription47.setId((java.lang.Integer) 0);
        resultDescription47.setMark(1L);
        resultDescription47.setMark((long) 52);
        resultDescription47.setTestId((java.lang.Integer) 1);
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.mapAtoB(result17, resultDescription47, mappingContext56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(submitResultRequestType16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(answerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getName();
        userRequest0.setSurname("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str6 = userRequest0.getSurname();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str6, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setAge((int) '4');
        user0.setName("LoginRequest(login=null, password=null)");
        user0.setLogin("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        java.lang.String str9 = user0.getPassword();
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean9 = answerDto7.equals((java.lang.Object) markComputerImpl8);
        int int10 = answerDto7.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        int int14 = answerDto11.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto15 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto15.setText("hi!");
        java.lang.String str18 = answerDto15.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto6, answerDto7, answerDto11, answerDto15 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList20 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList20, answerDtoArray19);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList20);
        questionDto0.setId((int) (short) -1);
        questionDto0.setText("LoginRequest(login=null, password=hi!)");
        questionDto0.setId((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        java.lang.String[] strArray6 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        postDto0.setLikes((java.util.List<java.lang.String>) strList7);
        java.lang.String str10 = postDto0.getText();
        postDto0.setText("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        java.lang.String str13 = postDto0.getText();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)" + "'", str13, "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList2 = questionDto0.getAnswers();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = questionDto0.getAnswers();
        questionDto0.setId(1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(answerDtoList2);
        org.junit.Assert.assertNull(answerDtoList3);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        post0.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str6 = post0.getUser();
        post0.setUser("CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest14 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest14.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post17 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        createPostRequestToPostMapper10.mapAtoB(createPostRequest14, post17, mappingContext18);
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto20 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = null;
        resultDto20.setTest(testDto21);
        boolean boolean23 = createPostRequest14.equals((java.lang.Object) resultDto20);
        createPostRequest14.setUsername("Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))");
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setInstitution("hi!");
        java.lang.String str6 = user3.toString();
        java.lang.String str7 = user3.getEmail();
        java.lang.String str8 = user3.getEmail();
        boolean boolean9 = questionDto0.equals((java.lang.Object) str8);
        questionDto0.setId(35);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str6, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto16 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        int int17 = postDto16.getId();
        java.lang.String str18 = postDto16.getTimestamp();
        com.vntu.marenko.ualearning.server.model.Post post19 = new com.vntu.marenko.ualearning.server.model.Post();
        post19.setText("");
        java.lang.String str22 = post19.toString();
        java.lang.Integer int23 = post19.getId();
        java.util.Date date24 = null;
        post19.setTimestamp(date24);
        java.lang.String str26 = post19.getText();
        java.util.List<java.lang.String> strList27 = post19.getLikes();
        java.util.List<java.lang.String> strList28 = post19.getLikes();
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        postToDtoMapper0.mapBtoA(postDto16, post19, mappingContext29);
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str22, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        postDto0.setTimestamp("");
        postDto0.setId((int) (byte) 0);
        postDto0.setId((int) (byte) 10);
        postDto0.setTimestamp("Result(id=null, user=null, test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
        postDto0.setText("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        postDto0.setTimestamp("TagDto(id=1, name=Result(id=null, user=null, test=null, submitted=false, answers=null))");
        postDto0.setLogin("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        java.lang.String str16 = postDto0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PostDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), timestamp=TagDto(id=1, name=Result(id=null, user=null, test=null, submitted=false, answers=null)), login=UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1), likes=null)" + "'", str16, "PostDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), timestamp=TagDto(id=1, name=Result(id=null, user=null, test=null, submitted=false, answers=null)), login=UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1), likes=null)");
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        resultDto0.setMark(0L);
        resultDto0.setMark(0L);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto7 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto7.setId(1);
        java.lang.String str10 = tagDto7.getName();
        java.lang.String str11 = tagDto7.toString();
        boolean boolean12 = resultDto0.equals((java.lang.Object) str11);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=1, name=null)" + "'", str11, "TagDto(id=1, name=null)");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer3 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer4 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer4.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray7 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer3, answer4 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList8 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList8, answerArray7);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList8);
        java.lang.Integer int11 = question0.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList12 = question0.getAnswers();
        java.lang.String str13 = question0.toString();
        question0.setId((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(answerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(answerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])" + "'", str13, "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getTestId();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        result7.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test10 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int11 = test10.getId();
        java.lang.Integer int12 = test10.getId();
        test10.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int15 = test10.getCompletedCounter();
        result7.setTest(test10);
        com.vntu.marenko.ualearning.server.model.User user17 = result7.getUser();
        boolean boolean18 = resultDescription0.equals((java.lang.Object) result7);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(user17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getPassword();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        ma.glasnost.orika.MapperFacade mapperFacade3 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto5 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl6 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean7 = answerDto5.equals((java.lang.Object) markComputerImpl6);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl8 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade3, userRepository4, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl6);
        boolean boolean9 = loginRequest0.equals((java.lang.Object) resultServiceImpl8);
        loginRequest0.setPassword("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        java.lang.String str12 = loginRequest0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoginRequest(login=null, password=TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)]))" + "'", str12, "LoginRequest(login=null, password=TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)]))");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getPassword();
        userRequest0.setSurname("Question(id=null, text=null, answers=null)");
        userRequest0.setEmail("QuestionDto(id=0, text=null, answers=null)");
        userRequest0.setSurname("TestDto(id=0, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), descriptionTest=CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null), completedCounter=null, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        user0.setEmail("TagDto(id=0, name=null)");
        user0.setInstitution("User(login=null, password=null, name=null, surname=null, age=10, institution=null, email=null, rating=0)");
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setMark((long) (short) 0);
        resultDto0.setMark((long) 35);
        org.junit.Assert.assertNull(answerDtoList3);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription1 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription1.setId((java.lang.Integer) 0);
        resultDescription1.setMark(1L);
        resultDescription1.setMark((long) 52);
        boolean boolean8 = createPostRequest0.equals((java.lang.Object) resultDescription1);
        long long9 = resultDescription1.getMark();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto18 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        int int19 = postDto18.getId();
        postDto18.setId((int) (byte) -1);
        java.lang.String str22 = postDto18.getLogin();
        postDto18.setTimestamp("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        java.lang.Integer int29 = post25.getId();
        java.util.Date date30 = null;
        post25.setTimestamp(date30);
        java.lang.Integer int32 = post25.getId();
        java.lang.Integer int33 = post25.getId();
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        postToDtoMapper0.mapBtoA(postDto18, post25, mappingContext34);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig36 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper46 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean47 = createPostRequestToPostMapper46.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper48 = null;
        ma.glasnost.orika.MapperFacade mapperFacade49 = mapperConfig36.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper46, postToDtoMapper48);
        com.vntu.marenko.ualearning.server.model.Post post50 = new com.vntu.marenko.ualearning.server.model.Post();
        post50.setText("");
        java.lang.Integer int53 = post50.getId();
        java.util.Date date54 = post50.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest55 = null;
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        createPostRequestToPostMapper46.mapBtoA(post50, createPostRequest55, mappingContext56);
        java.lang.String[] strArray70 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "TagDto(id=0, name=null)", "LoginRequest(login=null, password=null)", "Answer(id=null, text=null, correct=false)", "CreatePostRequest(text=null, username=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=null, username=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        post50.setLikes((java.util.List<java.lang.String>) strList71);
        java.util.List<java.lang.String> strList74 = post50.getLikes();
        postDto18.setLikes(strList74);
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertNotNull(mapperFacade49);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(date54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strList74);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        resultDto0.setSubmitted(true);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto25 = resultDto0.getUser();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(userDto25);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList7 = result0.getAnswers();
        boolean boolean8 = result0.isSubmitted();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(answerList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId((int) (byte) 100);
        java.lang.String str3 = postDto0.getText();
        java.lang.String str4 = postDto0.getText();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription6 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription6.setId((java.lang.Integer) 0);
        resultDescription6.setTestName("hi!");
        java.lang.String str11 = resultDescription6.getTestName();
        boolean boolean12 = resultDto0.equals((java.lang.Object) str11);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto13 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto13.setInstitution("");
        userDto13.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto13.setLogin("Tag(id=null, name=null)");
        userDto13.setInstitution("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        java.lang.String str22 = userDto13.getInstitution();
        resultDto0.setUser(userDto13);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository25 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl26 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository24, tagRepository25);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType33 = submitResultRequestToDomainMapper30.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade34);
        com.vntu.marenko.ualearning.server.model.User user36 = new com.vntu.marenko.ualearning.server.model.User();
        user36.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository41 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper42 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository39, testRepository40, answerRepository41);
        ma.glasnost.orika.MapperFacade mapperFacade43 = null;
        submitResultRequestToDomainMapper42.setMapperFacade(mapperFacade43);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType45 = submitResultRequestToDomainMapper42.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        submitResultRequestToDomainMapper42.setMapperFacade(mapperFacade46);
        boolean boolean48 = user36.equals((java.lang.Object) submitResultRequestToDomainMapper42);
        com.vntu.marenko.ualearning.server.model.Result result49 = new com.vntu.marenko.ualearning.server.model.Result();
        result49.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user52 = new com.vntu.marenko.ualearning.server.model.User();
        user52.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test55 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean56 = user52.equals((java.lang.Object) test55);
        user52.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result49.setUser(user52);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest60 = null;
        ma.glasnost.orika.MappingContext mappingContext61 = null;
        submitResultRequestToDomainMapper42.mapBtoA(result49, submitResultRequest60, mappingContext61);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest63 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest63.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int66 = submitResultRequest63.getTestId();
        ma.glasnost.orika.MappingContext mappingContext67 = null;
        submitResultRequestToDomainMapper30.mapBtoA(result49, submitResultRequest63, mappingContext67);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository69 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl70 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository69);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper71 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig72 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl73 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository74 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository75 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository76 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper77 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository74, testRepository75, answerRepository76);
        ma.glasnost.orika.MapperFacade mapperFacade78 = null;
        submitResultRequestToDomainMapper77.setMapperFacade(mapperFacade78);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType80 = submitResultRequestToDomainMapper77.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper81 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper82 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean83 = createPostRequestToPostMapper82.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper84 = null;
        ma.glasnost.orika.MapperFacade mapperFacade85 = mapperConfig72.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl73, submitResultRequestToDomainMapper77, resultToDescriptionMapper81, createPostRequestToPostMapper82, postToDtoMapper84);
        postToDtoMapper71.setMapperFacade(mapperFacade85);
        com.vntu.marenko.ualearning.server.controller.UserController userController87 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl70, mapperFacade85);
        boolean boolean88 = submitResultRequest63.equals((java.lang.Object) mapperFacade85);
        com.vntu.marenko.ualearning.server.controller.TestController testController89 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl26, mapperFacade85);
        boolean boolean90 = resultDto0.equals((java.lang.Object) testServiceImpl26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList92 = testServiceImpl26.getTestsWithTag((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)" + "'", str22, "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        org.junit.Assert.assertNotNull(submitResultRequestType33);
        org.junit.Assert.assertNotNull(submitResultRequestType45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(resultType80);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + false + "'", boolean83, false);
        org.junit.Assert.assertNotNull(mapperFacade85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        int int1 = questionDto0.getId();
        java.lang.String str2 = questionDto0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "QuestionDto(id=0, text=null, answers=null)" + "'", str2, "QuestionDto(id=0, text=null, answers=null)");
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.util.Date date3 = null;
        post0.setTimestamp(date3);
        java.lang.String str5 = post0.getUser();
        java.lang.Object obj6 = null;
        boolean boolean7 = post0.equals(obj6);
        java.util.List<java.lang.String> strList8 = post0.getLikes();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = answerDto0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        answerDto0.setText("Tag(id=null, name=null)");
        int int15 = answerDto0.getId();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest16 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str17 = userRequest16.getName();
        java.lang.String str18 = userRequest16.getName();
        java.lang.String str19 = userRequest16.getName();
        boolean boolean20 = answerDto0.equals((java.lang.Object) userRequest16);
        userRequest16.setName("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        userRequest16.setEmail("");
        java.lang.String str25 = userRequest16.getPassword();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository23 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl24 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository23);
        com.vntu.marenko.ualearning.server.controller.PostController postController25 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade20, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl24);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto27 = postController25.getPost((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId(0);
        postDto0.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        postDto0.setText("Result(id=null, user=null, test=null, submitted=false, answers=null)");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto0.setLogin("Tag(id=null, name=null)");
        java.lang.String str7 = userDto0.getLogin();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = resultToDescriptionMapper9.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = resultToDescriptionMapper9.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription12 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription12.setId((java.lang.Integer) 0);
        resultDescription12.setMark(1L);
        java.lang.Integer int17 = resultDescription12.getTestId();
        long long18 = resultDescription12.getMark();
        com.vntu.marenko.ualearning.server.model.Result result19 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int20 = result19.getId();
        com.vntu.marenko.ualearning.server.model.Test test21 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int22 = test21.getId();
        java.lang.Integer int23 = test21.getId();
        result19.setTest(test21);
        boolean boolean25 = result19.isSubmitted();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        resultToDescriptionMapper9.mapBtoA(resultDescription12, result19, mappingContext26);
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription28 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription28.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription28.setId((-1));
        testDescription28.setNameTest("TagDto(id=0, name=null)");
        java.lang.String str35 = testDescription28.toString();
        com.vntu.marenko.ualearning.server.model.Result result36 = new com.vntu.marenko.ualearning.server.model.Result();
        result36.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user39 = new com.vntu.marenko.ualearning.server.model.User();
        user39.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test42 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean43 = user39.equals((java.lang.Object) test42);
        user39.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result36.setUser(user39);
        boolean boolean47 = testDescription28.equals((java.lang.Object) user39);
        result19.setUser(user39);
        boolean boolean49 = userDto0.equals((java.lang.Object) user39);
        long long50 = user39.getRating();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Tag(id=null, name=null)" + "'", str7, "Tag(id=null, name=null)");
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str35, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper33, postToDtoMapper37);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType39 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType40 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.Mapper[] mapperArray42 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray43 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray42;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper18.setUsedMappers(objMapperArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertNotNull(resultType39);
        org.junit.Assert.assertNotNull(resultType40);
        org.junit.Assert.assertNotNull(mapperArray42);
        org.junit.Assert.assertNotNull(objMapperArray43);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        com.vntu.marenko.ualearning.server.model.User user12 = new com.vntu.marenko.ualearning.server.model.User();
        user12.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType21 = submitResultRequestToDomainMapper18.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade22 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade22);
        boolean boolean24 = user12.equals((java.lang.Object) submitResultRequestToDomainMapper18);
        com.vntu.marenko.ualearning.server.model.Result result25 = new com.vntu.marenko.ualearning.server.model.Result();
        result25.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user28 = new com.vntu.marenko.ualearning.server.model.User();
        user28.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test31 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean32 = user28.equals((java.lang.Object) test31);
        user28.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result25.setUser(user28);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = null;
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        submitResultRequestToDomainMapper18.mapBtoA(result25, submitResultRequest36, mappingContext37);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest39 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest39.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int42 = submitResultRequest39.getTestId();
        ma.glasnost.orika.MappingContext mappingContext43 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result25, submitResultRequest39, mappingContext43);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl46 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository45);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.UserController userController63 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl46, mapperFacade61);
        boolean boolean64 = submitResultRequest39.equals((java.lang.Object) mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade61);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList67 = testServiceImpl2.getTestsWithTag((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertNotNull(submitResultRequestType21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int5 = test0.getCompletedCounter();
        java.lang.Integer int6 = test0.getCompletedCounter();
        java.lang.Integer int7 = test0.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question8 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str9 = question8.getText();
        java.lang.Integer int10 = question8.getId();
        boolean boolean11 = test0.equals((java.lang.Object) question8);
        question8.setId((java.lang.Integer) 35);
        com.vntu.marenko.ualearning.server.model.Question question14 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int15 = question14.getId();
        java.lang.Integer int16 = question14.getId();
        question14.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.model.Answer answer19 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str20 = answer19.getText();
        java.lang.String str21 = answer19.getText();
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray22 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer19 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList23 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList23, answerArray22);
        question14.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList23);
        question8.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList23);
        java.lang.String str27 = question8.toString();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(answerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Question(id=35, text=null, answers=[Answer(id=null, text=null, correct=false)])" + "'", str27, "Question(id=35, text=null, answers=[Answer(id=null, text=null, correct=false)])");
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.toString();
        java.lang.String str4 = userRequest0.getName();
        java.lang.String str5 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str3, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 1, 1, 100, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList9 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        submitResultRequest0.setAnswers((java.util.List<java.lang.Integer>) intList9);
        java.lang.String str12 = submitResultRequest0.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SubmitResultRequest(userLogin=ResultDescription(id=null, testId=100, testName=null, mark=0), testId=0, answers=[1, 1, 100, 0, 0])" + "'", str12, "SubmitResultRequest(userLogin=ResultDescription(id=null, testId=100, testName=null, mark=0), testId=0, answers=[1, 1, 100, 0, 0])");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setLogin("TagDto(id=0, name=null)");
        userDto0.setLogin("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=1, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        long long3 = user0.getRating();
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription4 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription4.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription4.setId((-1));
        boolean boolean9 = user0.equals((java.lang.Object) (-1));
        java.lang.String str10 = user0.getPassword();
        user0.setPassword("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        java.lang.String str13 = user0.getInstitution();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        java.lang.String[] strArray6 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        postDto0.setLikes((java.util.List<java.lang.String>) strList7);
        java.lang.String str10 = postDto0.getText();
        postDto0.setText("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        java.util.List<java.lang.String> strList13 = postDto0.getLikes();
        java.util.List<java.lang.String> strList14 = postDto0.getLikes();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getId();
        long long7 = resultDescription0.getMark();
        java.lang.Integer int8 = resultDescription0.getId();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig22 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl23 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository26 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper27 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository24, testRepository25, answerRepository26);
        ma.glasnost.orika.MapperFacade mapperFacade28 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType30 = submitResultRequestToDomainMapper27.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper31 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper32 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean33 = createPostRequestToPostMapper32.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper34 = null;
        ma.glasnost.orika.MapperFacade mapperFacade35 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl23, submitResultRequestToDomainMapper27, resultToDescriptionMapper31, createPostRequestToPostMapper32, postToDtoMapper34);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl36 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository37 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository39 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper40 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository37, testRepository38, answerRepository39);
        ma.glasnost.orika.MapperFacade mapperFacade41 = null;
        submitResultRequestToDomainMapper40.setMapperFacade(mapperFacade41);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType43 = submitResultRequestToDomainMapper40.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper44 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig45 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl46 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository49 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper50 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository47, testRepository48, answerRepository49);
        ma.glasnost.orika.MapperFacade mapperFacade51 = null;
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType53 = submitResultRequestToDomainMapper50.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper54 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper55 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean56 = createPostRequestToPostMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = null;
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig45.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl46, submitResultRequestToDomainMapper50, resultToDescriptionMapper54, createPostRequestToPostMapper55, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper59 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade60 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl36, submitResultRequestToDomainMapper40, resultToDescriptionMapper44, createPostRequestToPostMapper55, postToDtoMapper59);
        com.vntu.marenko.ualearning.server.controller.TestController testController61 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade60);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest62 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str63 = userRequest62.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto64 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto64.setId((int) '#');
        boolean boolean67 = userRequest62.equals((java.lang.Object) '#');
        userRequest62.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository70 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl71 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository70);
        boolean boolean72 = userRequest62.equals((java.lang.Object) postServiceImpl71);
        com.vntu.marenko.ualearning.server.controller.PostController postController73 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade60, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl71);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest74 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto75 = postController73.createPost(createPostRequest74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType30);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(mapperFacade35);
        org.junit.Assert.assertNotNull(resultType43);
        org.junit.Assert.assertNotNull(resultType53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(mapperFacade60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        resultDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto5.setRating((int) (byte) -1);
        userDto5.setLogin("LoginRequest(login=null, password=null)");
        resultDto0.setUser(userDto5);
        resultDto0.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig14 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType22 = submitResultRequestToDomainMapper19.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper23 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean25 = createPostRequestToPostMapper24.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper26 = null;
        ma.glasnost.orika.MapperFacade mapperFacade27 = mapperConfig14.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl15, submitResultRequestToDomainMapper19, resultToDescriptionMapper23, createPostRequestToPostMapper24, postToDtoMapper26);
        postToDtoMapper13.setMapperFacade(mapperFacade27);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = postToDtoMapper13.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType30 = postToDtoMapper13.getBType();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository31 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig32 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl33 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository36 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper37 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository34, testRepository35, answerRepository36);
        ma.glasnost.orika.MapperFacade mapperFacade38 = null;
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade38);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType40 = submitResultRequestToDomainMapper37.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper41 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper42 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean43 = createPostRequestToPostMapper42.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper44 = null;
        ma.glasnost.orika.MapperFacade mapperFacade45 = mapperConfig32.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33, submitResultRequestToDomainMapper37, resultToDescriptionMapper41, createPostRequestToPostMapper42, postToDtoMapper44);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository47 = null;
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository49 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto50 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl51 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean52 = answerDto50.equals((java.lang.Object) markComputerImpl51);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl53 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository47, mapperFacade48, userRepository49, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl51);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl54 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository31, mapperFacade45, userRepository46, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl51);
        postToDtoMapper13.setMapperFacade(mapperFacade45);
        boolean boolean56 = resultDto0.equals((java.lang.Object) postToDtoMapper13);
        resultDto0.setMark((long) ' ');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto59 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto59.setRating((int) (byte) -1);
        int int62 = userDto59.getAge();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto63 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto63.setId(0);
        boolean boolean66 = userDto59.equals((java.lang.Object) 0);
        resultDto0.setUser(userDto59);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList68 = resultDto0.getAnswers();
        org.junit.Assert.assertNotNull(resultType22);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(mapperFacade27);
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertNotNull(postDtoType30);
        org.junit.Assert.assertNotNull(resultType40);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + false + "'", boolean43, false);
        org.junit.Assert.assertNotNull(mapperFacade45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(answerDtoList68);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        long long1 = user0.getRating();
        user0.setLogin("hi!");
        java.lang.Object obj4 = null;
        boolean boolean5 = user0.equals(obj4);
        java.lang.String str6 = user0.getEmail();
        int int7 = user0.getAge();
        user0.setAge((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType19 = postToDtoMapper0.getBType();
        java.lang.Boolean boolean20 = postToDtoMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto21 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str22 = postDto21.getLogin();
        postDto21.setTimestamp("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        java.lang.Integer int29 = post25.getId();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        postToDtoMapper0.mapBtoA(postDto21, post25, mappingContext30);
        postDto21.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository35 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl36 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository34, tagRepository35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig38 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl39 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository42 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper43 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository40, testRepository41, answerRepository42);
        ma.glasnost.orika.MapperFacade mapperFacade44 = null;
        submitResultRequestToDomainMapper43.setMapperFacade(mapperFacade44);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType46 = submitResultRequestToDomainMapper43.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper47 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper48 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean49 = createPostRequestToPostMapper48.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper50 = null;
        ma.glasnost.orika.MapperFacade mapperFacade51 = mapperConfig38.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl39, submitResultRequestToDomainMapper43, resultToDescriptionMapper47, createPostRequestToPostMapper48, postToDtoMapper50);
        postToDtoMapper37.setMapperFacade(mapperFacade51);
        com.vntu.marenko.ualearning.server.controller.TestController testController53 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl36, mapperFacade51);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl55 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository54);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper56 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig57 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl58 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository59 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository60 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository61 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper62 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository59, testRepository60, answerRepository61);
        ma.glasnost.orika.MapperFacade mapperFacade63 = null;
        submitResultRequestToDomainMapper62.setMapperFacade(mapperFacade63);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType65 = submitResultRequestToDomainMapper62.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper66 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper67 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean68 = createPostRequestToPostMapper67.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper69 = null;
        ma.glasnost.orika.MapperFacade mapperFacade70 = mapperConfig57.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl58, submitResultRequestToDomainMapper62, resultToDescriptionMapper66, createPostRequestToPostMapper67, postToDtoMapper69);
        postToDtoMapper56.setMapperFacade(mapperFacade70);
        com.vntu.marenko.ualearning.server.controller.UserController userController72 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl55, mapperFacade70);
        com.vntu.marenko.ualearning.server.controller.TestController testController73 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl36, mapperFacade70);
        boolean boolean74 = postDto21.equals((java.lang.Object) testServiceImpl36);
        java.lang.String str75 = postDto21.getText();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertNotNull(postType18);
        org.junit.Assert.assertNotNull(postDtoType19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(resultType46);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
        org.junit.Assert.assertNotNull(mapperFacade51);
        org.junit.Assert.assertNotNull(resultType65);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
        org.junit.Assert.assertNotNull(mapperFacade70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository78 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl79 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository78);
        com.vntu.marenko.ualearning.server.controller.PostController postController80 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade75, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl79);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto82 = postController80.getPost(100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper33, postToDtoMapper37);
        java.lang.Boolean boolean39 = submitResultRequestToDomainMapper18.favorsExtension();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        result0.setSubmitted(false);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList4 = result0.getAnswers();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList5 = result0.getAnswers();
        com.vntu.marenko.ualearning.server.model.User user6 = result0.getUser();
        result0.setId((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(answerList4);
        org.junit.Assert.assertNull(answerList5);
        org.junit.Assert.assertNull(user6);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int8 = test7.getId();
        java.lang.Integer int9 = test7.getId();
        test7.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int12 = test7.getCompletedCounter();
        java.lang.Integer int13 = test7.getCompletedCounter();
        result0.setTest(test7);
        com.vntu.marenko.ualearning.server.model.User user15 = result0.getUser();
        com.vntu.marenko.ualearning.server.model.Test test16 = result0.getTest();
        boolean boolean17 = result0.isSubmitted();
        result0.setSubmitted(true);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(user15);
        org.junit.Assert.assertNotNull(test16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList44 = postServiceImpl40.getPostsForUser("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper33, postToDtoMapper37);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType39 = postToDtoMapper37.getAType();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto40 = null;
        com.vntu.marenko.ualearning.server.model.Post post41 = new com.vntu.marenko.ualearning.server.model.Post();
        post41.setText("");
        java.lang.String str44 = post41.toString();
        post41.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str47 = post41.getUser();
        java.lang.Integer int48 = post41.getId();
        java.util.Date date49 = null;
        post41.setTimestamp(date49);
        ma.glasnost.orika.MappingContext mappingContext51 = null;
        postToDtoMapper37.mapBtoA(postDto40, post41, mappingContext51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType53 = postToDtoMapper37.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType54 = postToDtoMapper37.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper55 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean56 = createPostRequestToPostMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig57 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl58 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository59 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository60 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository61 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper62 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository59, testRepository60, answerRepository61);
        ma.glasnost.orika.MapperFacade mapperFacade63 = null;
        submitResultRequestToDomainMapper62.setMapperFacade(mapperFacade63);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType65 = submitResultRequestToDomainMapper62.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper66 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper67 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean68 = createPostRequestToPostMapper67.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper69 = null;
        ma.glasnost.orika.MapperFacade mapperFacade70 = mapperConfig57.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl58, submitResultRequestToDomainMapper62, resultToDescriptionMapper66, createPostRequestToPostMapper67, postToDtoMapper69);
        createPostRequestToPostMapper55.setMapperFacade(mapperFacade70);
        postToDtoMapper37.setMapperFacade(mapperFacade70);
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertNotNull(postType39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str44, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str47, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(postType53);
        org.junit.Assert.assertNotNull(postType54);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(resultType65);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
        org.junit.Assert.assertNotNull(mapperFacade70);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        long long1 = user0.getRating();
        user0.setLogin("hi!");
        java.lang.Object obj4 = null;
        boolean boolean5 = user0.equals(obj4);
        java.lang.String str6 = user0.getEmail();
        int int7 = user0.getAge();
        long long8 = user0.getRating();
        java.lang.String str9 = user0.getInstitution();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getId();
        java.lang.String str7 = resultDescription0.toString();
        java.lang.String str8 = resultDescription0.toString();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper9 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType10 = createPostRequestToPostMapper9.getBType();
        com.vntu.marenko.ualearning.server.model.Post post11 = new com.vntu.marenko.ualearning.server.model.Post();
        post11.setText("");
        java.lang.String str14 = post11.toString();
        post11.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest17 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest17.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper9.mapBtoA(post11, createPostRequest17, mappingContext20);
        com.vntu.marenko.ualearning.server.model.Post post22 = new com.vntu.marenko.ualearning.server.model.Post();
        post22.setText("");
        java.lang.String str25 = post22.toString();
        java.lang.Integer int26 = post22.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest27 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str28 = createPostRequest27.getUsername();
        java.lang.String str29 = createPostRequest27.toString();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        createPostRequestToPostMapper9.mapBtoA(post22, createPostRequest27, mappingContext30);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto32 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str33 = postDto32.getLogin();
        java.lang.String[] strArray38 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        postDto32.setLikes((java.util.List<java.lang.String>) strList39);
        post22.setLikes((java.util.List<java.lang.String>) strList39);
        post22.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        boolean boolean45 = resultDescription0.equals((java.lang.Object) post22);
        post22.setText("LoginRequest(login=Result(id=null, user=null, test=null, submitted=false, answers=null), password=null)");
        java.lang.Integer int48 = post22.getId();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str7, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str8, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertNotNull(postType10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str14, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str25, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str29, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(int48);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository19 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository20 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl21 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository19, tagRepository20);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.TestController testController38 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl21, mapperFacade36);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController40 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl21, mapperFacade39);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig41 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl42 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository45 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper46 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository43, testRepository44, answerRepository45);
        ma.glasnost.orika.MapperFacade mapperFacade47 = null;
        submitResultRequestToDomainMapper46.setMapperFacade(mapperFacade47);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType49 = submitResultRequestToDomainMapper46.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper50 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper51 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean52 = createPostRequestToPostMapper51.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper53 = null;
        ma.glasnost.orika.MapperFacade mapperFacade54 = mapperConfig41.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl42, submitResultRequestToDomainMapper46, resultToDescriptionMapper50, createPostRequestToPostMapper51, postToDtoMapper53);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl55 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository56 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository57 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository58 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper59 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository56, testRepository57, answerRepository58);
        ma.glasnost.orika.MapperFacade mapperFacade60 = null;
        submitResultRequestToDomainMapper59.setMapperFacade(mapperFacade60);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType62 = submitResultRequestToDomainMapper59.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper63 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig64 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl65 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository67 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository68 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper69 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository66, testRepository67, answerRepository68);
        ma.glasnost.orika.MapperFacade mapperFacade70 = null;
        submitResultRequestToDomainMapper69.setMapperFacade(mapperFacade70);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType72 = submitResultRequestToDomainMapper69.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper73 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper74 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean75 = createPostRequestToPostMapper74.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper76 = null;
        ma.glasnost.orika.MapperFacade mapperFacade77 = mapperConfig64.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl65, submitResultRequestToDomainMapper69, resultToDescriptionMapper73, createPostRequestToPostMapper74, postToDtoMapper76);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper78 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade79 = mapperConfig41.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl55, submitResultRequestToDomainMapper59, resultToDescriptionMapper63, createPostRequestToPostMapper74, postToDtoMapper78);
        com.vntu.marenko.ualearning.server.controller.TestController testController80 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl21, mapperFacade79);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest81 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str82 = userRequest81.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto83 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto83.setId((int) '#');
        boolean boolean86 = userRequest81.equals((java.lang.Object) '#');
        userRequest81.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository89 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl90 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository89);
        boolean boolean91 = userRequest81.equals((java.lang.Object) postServiceImpl90);
        com.vntu.marenko.ualearning.server.controller.PostController postController92 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade79, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl90);
        com.vntu.marenko.ualearning.server.service.PostService postService93 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController94 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade79, postService93);
        com.vntu.marenko.ualearning.server.controller.UserController userController95 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.User> userList96 = userServiceImpl1.top10();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType49);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + false + "'", boolean52, false);
        org.junit.Assert.assertNotNull(mapperFacade54);
        org.junit.Assert.assertNotNull(resultType62);
        org.junit.Assert.assertNotNull(resultType72);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + false + "'", boolean75, false);
        org.junit.Assert.assertNotNull(mapperFacade77);
        org.junit.Assert.assertNotNull(mapperFacade79);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        java.lang.String str23 = resultDto0.toString();
        boolean boolean24 = resultDto0.isSubmitted();
        com.vntu.marenko.ualearning.server.dto.UserDto userDto25 = resultDto0.getUser();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)" + "'", str23, "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(userDto25);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        java.lang.String str3 = tagDto0.getName();
        tagDto0.setName("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        java.lang.String str6 = tagDto0.toString();
        java.lang.String str7 = tagDto0.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TagDto(id=1, name=Result(id=null, user=null, test=null, submitted=false, answers=null))" + "'", str6, "TagDto(id=1, name=Result(id=null, user=null, test=null, submitted=false, answers=null))");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "TagDto(id=1, name=Result(id=null, user=null, test=null, submitted=false, answers=null))" + "'", str7, "TagDto(id=1, name=Result(id=null, user=null, test=null, submitted=false, answers=null))");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList6 = resultServiceImpl4.getResultsForUser("Post(id=null, text=CreatePostRequest(text=null, username=null), timestamp=null, user=null, likes=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        java.lang.String str2 = loginRequest0.getLogin();
        java.lang.String str3 = loginRequest0.getLogin();
        com.vntu.marenko.ualearning.server.dto.UserShortDto userShortDto4 = new com.vntu.marenko.ualearning.server.dto.UserShortDto();
        boolean boolean5 = loginRequest0.equals((java.lang.Object) userShortDto4);
        java.lang.String str6 = loginRequest0.getPassword();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl20 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository19);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository21 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig39 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl40 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.MapperFacade mapperFacade45 = null;
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade45);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType47 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper48 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper49 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean50 = createPostRequestToPostMapper49.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper51 = null;
        ma.glasnost.orika.MapperFacade mapperFacade52 = mapperConfig39.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl40, submitResultRequestToDomainMapper44, resultToDescriptionMapper48, createPostRequestToPostMapper49, postToDtoMapper51);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl53 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository56 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper57 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository54, testRepository55, answerRepository56);
        ma.glasnost.orika.MapperFacade mapperFacade58 = null;
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade58);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType60 = submitResultRequestToDomainMapper57.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper61 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper76 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade77 = mapperConfig39.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl53, submitResultRequestToDomainMapper57, resultToDescriptionMapper61, createPostRequestToPostMapper72, postToDtoMapper76);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl78 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository21, mapperFacade36, userRepository38, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl53);
        com.vntu.marenko.ualearning.server.controller.UserController userController79 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl20, mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.UserController userController80 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade36);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.User user82 = userServiceImpl1.getUser("Question(id=null, text=Question(id=null, text=null, answers=null), answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType47);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(mapperFacade52);
        org.junit.Assert.assertNotNull(resultType60);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertNotNull(mapperFacade77);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest14 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest14.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post17 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        createPostRequestToPostMapper10.mapAtoB(createPostRequest14, post17, mappingContext18);
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto20 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = null;
        resultDto20.setTest(testDto21);
        boolean boolean23 = createPostRequest14.equals((java.lang.Object) resultDto20);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto24 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto24.setRating((int) (byte) -1);
        java.lang.String str27 = userDto24.toString();
        resultDto20.setUser(userDto24);
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)" + "'", str27, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setNameTest("hi!");
        testDescription0.setId((int) (short) 1);
        testDescription0.setNameTest("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        resultDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto5.setRating((int) (byte) -1);
        userDto5.setLogin("LoginRequest(login=null, password=null)");
        resultDto0.setUser(userDto5);
        resultDto0.setId((int) (short) -1);
        resultDto0.setId((int) (byte) 100);
        java.lang.String str15 = resultDto0.toString();
        java.lang.String str16 = resultDto0.toString();
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ResultDto(id=100, user=UserDto(login=LoginRequest(login=null, password=null), name=null, surname=null, age=0, institution=null, email=null, rating=-1), test=null, submitted=false, answers=null, mark=0)" + "'", str15, "ResultDto(id=100, user=UserDto(login=LoginRequest(login=null, password=null), name=null, surname=null, age=0, institution=null, email=null, rating=-1), test=null, submitted=false, answers=null, mark=0)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ResultDto(id=100, user=UserDto(login=LoginRequest(login=null, password=null), name=null, surname=null, age=0, institution=null, email=null, rating=-1), test=null, submitted=false, answers=null, mark=0)" + "'", str16, "ResultDto(id=100, user=UserDto(login=LoginRequest(login=null, password=null), name=null, surname=null, age=0, institution=null, email=null, rating=-1), test=null, submitted=false, answers=null, mark=0)");
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType4 = resultToDescriptionMapper1.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper6 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean7 = createPostRequestToPostMapper6.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        createPostRequestToPostMapper6.setMapperFacade(mapperFacade21);
        resultToDescriptionMapper1.setMapperFacade(mapperFacade21);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType24 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription25 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription25.setId((java.lang.Integer) 0);
        resultDescription25.setTestId((java.lang.Integer) 0);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType36 = submitResultRequestToDomainMapper33.getAType();
        com.vntu.marenko.ualearning.server.model.Result result37 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int38 = result37.getId();
        com.vntu.marenko.ualearning.server.model.Test test39 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int40 = test39.getId();
        java.lang.Integer int41 = test39.getId();
        result37.setTest(test39);
        java.lang.Integer int43 = result37.getId();
        com.vntu.marenko.ualearning.server.model.Test test44 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int45 = test44.getId();
        java.lang.Integer int46 = test44.getId();
        test44.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int49 = test44.getCompletedCounter();
        java.lang.Integer int50 = test44.getCompletedCounter();
        result37.setTest(test44);
        com.vntu.marenko.ualearning.server.model.User user52 = result37.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest53 = null;
        ma.glasnost.orika.MappingContext mappingContext54 = null;
        submitResultRequestToDomainMapper33.mapBtoA(result37, submitResultRequest53, mappingContext54);
        com.vntu.marenko.ualearning.server.model.User user56 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str57 = user56.getEmail();
        java.lang.String str58 = user56.getSurname();
        result37.setUser(user56);
        result37.setId((java.lang.Integer) 0);
        com.vntu.marenko.ualearning.server.model.User user62 = null;
        result37.setUser(user62);
        ma.glasnost.orika.MappingContext mappingContext64 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription25, result37, mappingContext64);
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNotNull(resultDescriptionType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertNotNull(resultType24);
        org.junit.Assert.assertNotNull(submitResultRequestType36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(user52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType2 = createPostRequestToPostMapper1.getBType();
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        post3.setText("");
        java.lang.String str6 = post3.toString();
        post3.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest9 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest9.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        createPostRequestToPostMapper1.mapBtoA(post3, createPostRequest9, mappingContext12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.String str17 = post14.toString();
        java.lang.Integer int18 = post14.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str20 = createPostRequest19.getUsername();
        java.lang.String str21 = createPostRequest19.toString();
        ma.glasnost.orika.MappingContext mappingContext22 = null;
        createPostRequestToPostMapper1.mapBtoA(post14, createPostRequest19, mappingContext22);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest19, post26, mappingContext37);
        createPostRequest19.setText("Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
        java.lang.String str41 = createPostRequest19.toString();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository44 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper45 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository42, testRepository43, answerRepository44);
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade46);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType48 = submitResultRequestToDomainMapper45.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade49);
        com.vntu.marenko.ualearning.server.model.User user51 = new com.vntu.marenko.ualearning.server.model.User();
        user51.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository56 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper57 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository54, testRepository55, answerRepository56);
        ma.glasnost.orika.MapperFacade mapperFacade58 = null;
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade58);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType60 = submitResultRequestToDomainMapper57.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade61 = null;
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade61);
        boolean boolean63 = user51.equals((java.lang.Object) submitResultRequestToDomainMapper57);
        com.vntu.marenko.ualearning.server.model.Result result64 = new com.vntu.marenko.ualearning.server.model.Result();
        result64.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user67 = new com.vntu.marenko.ualearning.server.model.User();
        user67.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test70 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean71 = user67.equals((java.lang.Object) test70);
        user67.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result64.setUser(user67);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest75 = null;
        ma.glasnost.orika.MappingContext mappingContext76 = null;
        submitResultRequestToDomainMapper57.mapBtoA(result64, submitResultRequest75, mappingContext76);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest78 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest78.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int81 = submitResultRequest78.getTestId();
        ma.glasnost.orika.MappingContext mappingContext82 = null;
        submitResultRequestToDomainMapper45.mapBtoA(result64, submitResultRequest78, mappingContext82);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto84 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto84.setText("hi!");
        java.lang.String str87 = answerDto84.getText();
        boolean boolean88 = submitResultRequest78.equals((java.lang.Object) answerDto84);
        boolean boolean89 = createPostRequest19.equals((java.lang.Object) boolean88);
        java.lang.String str90 = createPostRequest19.getUsername();
        org.junit.Assert.assertNotNull(postType2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str17, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str21, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CreatePostRequest(text=Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)), username=null)" + "'", str41, "CreatePostRequest(text=Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)), username=null)");
        org.junit.Assert.assertNotNull(submitResultRequestType48);
        org.junit.Assert.assertNotNull(submitResultRequestType60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType2 = createPostRequestToPostMapper1.getBType();
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        post3.setText("");
        java.lang.String str6 = post3.toString();
        post3.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest9 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest9.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        createPostRequestToPostMapper1.mapBtoA(post3, createPostRequest9, mappingContext12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.String str17 = post14.toString();
        java.lang.Integer int18 = post14.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str20 = createPostRequest19.getUsername();
        java.lang.String str21 = createPostRequest19.toString();
        ma.glasnost.orika.MappingContext mappingContext22 = null;
        createPostRequestToPostMapper1.mapBtoA(post14, createPostRequest19, mappingContext22);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest19, post26, mappingContext37);
        com.vntu.marenko.ualearning.server.model.User user39 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str40 = user39.getEmail();
        java.lang.String str41 = user39.getSurname();
        user39.setEmail("Answer(id=null, text=null, correct=false)");
        boolean boolean45 = user39.equals((java.lang.Object) (byte) -1);
        boolean boolean46 = createPostRequest19.equals((java.lang.Object) user39);
        java.lang.String str47 = createPostRequest19.getUsername();
        createPostRequest19.setText("SubmitResultRequest(userLogin=null, testId=0, answers=null)");
        org.junit.Assert.assertNotNull(postType2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str17, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str21, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getPassword();
        userRequest0.setLogin("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        java.lang.String str6 = userRequest0.getLogin();
        userRequest0.setName("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        userRequest0.setLogin("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        userRequest0.setInstitution("SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)");
        java.lang.String str13 = userRequest0.getInstitution();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str6, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)" + "'", str13, "SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)");
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setMark(1L);
        resultDescription0.setMark((long) 52);
        java.lang.String str7 = resultDescription0.getTestName();
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.getSurname();
        java.lang.String str2 = userDto0.getInstitution();
        java.lang.String str3 = userDto0.getEmail();
        java.lang.String str4 = userDto0.getInstitution();
        userDto0.setEmail("SubmitResultRequest(userLogin=null, testId=0, answers=null)");
        java.lang.String str7 = userDto0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SubmitResultRequest(userLogin=null, testId=0, answers=null)" + "'", str7, "SubmitResultRequest(userLogin=null, testId=0, answers=null)");
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest0.setTestId((int) (byte) 100);
        submitResultRequest0.setUserLogin("SubmitResultRequest(userLogin=ResultDescription(id=null, testId=100, testName=null, mark=0), testId=0, answers=[1, 1, 100, 0, 0])");
        submitResultRequest0.setUserLogin("UserRequest(login=CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null), password=null, name=ResultDescription(id=0, testId=null, testName=null, mark=1), surname=PostDto(id=0, text=UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null), timestamp=null, login=null, likes=null), age=0, institution=null, email=null)");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId((int) (byte) 100);
        java.lang.String str3 = postDto0.getText();
        postDto0.setLogin("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.lang.String str6 = postDto0.getTimestamp();
        java.lang.String str7 = postDto0.getText();
        com.vntu.marenko.ualearning.server.model.Post post8 = new com.vntu.marenko.ualearning.server.model.Post();
        java.lang.String str9 = post8.getUser();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest10 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str11 = userRequest10.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto12 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto12.setId((int) '#');
        boolean boolean15 = userRequest10.equals((java.lang.Object) '#');
        userRequest10.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository18 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl19 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository18);
        boolean boolean20 = userRequest10.equals((java.lang.Object) postServiceImpl19);
        userRequest10.setAge((int) (byte) 1);
        userRequest10.setAge((int) (byte) 100);
        userRequest10.setLogin("TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))");
        boolean boolean27 = post8.equals((java.lang.Object) "TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig28 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType36 = submitResultRequestToDomainMapper33.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper37 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper38 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean39 = createPostRequestToPostMapper38.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper40 = null;
        ma.glasnost.orika.MapperFacade mapperFacade41 = mapperConfig28.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl29, submitResultRequestToDomainMapper33, resultToDescriptionMapper37, createPostRequestToPostMapper38, postToDtoMapper40);
        com.vntu.marenko.ualearning.server.model.Post post42 = new com.vntu.marenko.ualearning.server.model.Post();
        post42.setText("");
        java.lang.Integer int45 = post42.getId();
        java.util.Date date46 = post42.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = null;
        ma.glasnost.orika.MappingContext mappingContext48 = null;
        createPostRequestToPostMapper38.mapBtoA(post42, createPostRequest47, mappingContext48);
        java.lang.String[] strArray62 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "TagDto(id=0, name=null)", "LoginRequest(login=null, password=null)", "Answer(id=null, text=null, correct=false)", "CreatePostRequest(text=null, username=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=null, username=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        post42.setLikes((java.util.List<java.lang.String>) strList63);
        post8.setLikes((java.util.List<java.lang.String>) strList63);
        postDto0.setLikes((java.util.List<java.lang.String>) strList63);
        postDto0.setText("");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(resultType36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(mapperFacade41);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(date46);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.toString();
        userRequest0.setName("Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
        java.lang.String str6 = userRequest0.getInstitution();
        userRequest0.setInstitution("User(login=null, password=null, name=null, surname=null, age=10, institution=null, email=null, rating=0)");
        userRequest0.setInstitution("Post(id=null, text=Answer(id=null, text=null, correct=false), timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str3, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        java.lang.String str5 = testDescription0.getNameTest();
        boolean boolean7 = testDescription0.equals((java.lang.Object) "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        testDescription0.setNameTest("QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!)])");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str5, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setId((int) (short) 10);
        questionDto0.setText("Question(id=null, text=null, answers=null)");
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList29 = questionDto0.getAnswers();
        java.lang.String str30 = questionDto0.getText();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(answerDtoList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Question(id=null, text=null, answers=null)" + "'", str30, "Question(id=null, text=null, answers=null)");
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        tagDto0.setName("QuestionDto(id=10, text=null, answers=null)");
        java.lang.String str5 = tagDto0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str5, "QuestionDto(id=10, text=null, answers=null)");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = userServiceImpl1.login("LoginRequest(login=null, password=hi!)", "PostDto(id=0, text=UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null), timestamp=null, login=null, likes=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper2 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType3 = createPostRequestToPostMapper2.getBType();
        com.vntu.marenko.ualearning.server.model.Post post4 = new com.vntu.marenko.ualearning.server.model.Post();
        post4.setText("");
        java.lang.String str7 = post4.toString();
        post4.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest10 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest10.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext13 = null;
        createPostRequestToPostMapper2.mapBtoA(post4, createPostRequest10, mappingContext13);
        com.vntu.marenko.ualearning.server.model.Post post15 = new com.vntu.marenko.ualearning.server.model.Post();
        post15.setText("");
        java.lang.String str18 = post15.toString();
        java.lang.Integer int19 = post15.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest20 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str21 = createPostRequest20.getUsername();
        java.lang.String str22 = createPostRequest20.toString();
        ma.glasnost.orika.MappingContext mappingContext23 = null;
        createPostRequestToPostMapper2.mapBtoA(post15, createPostRequest20, mappingContext23);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper25 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType26 = createPostRequestToPostMapper25.getBType();
        com.vntu.marenko.ualearning.server.model.Post post27 = new com.vntu.marenko.ualearning.server.model.Post();
        post27.setText("");
        java.lang.String str30 = post27.toString();
        post27.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest33 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest33.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext36 = null;
        createPostRequestToPostMapper25.mapBtoA(post27, createPostRequest33, mappingContext36);
        ma.glasnost.orika.MappingContext mappingContext38 = null;
        createPostRequestToPostMapper1.mapAtoB(createPostRequest20, post27, mappingContext38);
        boolean boolean40 = answerDto0.equals((java.lang.Object) mappingContext38);
        int int41 = answerDto0.getId();
        answerDto0.setText("SubmitResultRequest(userLogin=null, testId=0, answers=null)");
        org.junit.Assert.assertNotNull(postType3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str7, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str18, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str22, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str30, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        question0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str3 = question0.getText();
        com.vntu.marenko.ualearning.server.model.User user4 = new com.vntu.marenko.ualearning.server.model.User();
        user4.setSurname("");
        java.lang.String str7 = user4.getEmail();
        java.lang.String str8 = user4.getInstitution();
        java.lang.String str9 = user4.getLogin();
        java.lang.String str10 = user4.toString();
        java.lang.String str11 = user4.getLogin();
        java.lang.String str12 = user4.getInstitution();
        boolean boolean13 = question0.equals((java.lang.Object) user4);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str3, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)" + "'", str10, "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getLogin();
        com.vntu.marenko.ualearning.server.model.User user2 = new com.vntu.marenko.ualearning.server.model.User();
        boolean boolean3 = loginRequest0.equals((java.lang.Object) user2);
        boolean boolean5 = loginRequest0.equals((java.lang.Object) (short) 0);
        loginRequest0.setLogin("Answer(id=0, text=null, correct=false)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper33, postToDtoMapper37);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper39 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType40 = createPostRequestToPostMapper39.getBType();
        com.vntu.marenko.ualearning.server.model.Post post41 = new com.vntu.marenko.ualearning.server.model.Post();
        post41.setText("");
        java.lang.String str44 = post41.toString();
        post41.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest47.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        createPostRequestToPostMapper39.mapBtoA(post41, createPostRequest47, mappingContext50);
        com.vntu.marenko.ualearning.server.model.Post post52 = new com.vntu.marenko.ualearning.server.model.Post();
        post52.setText("");
        java.lang.String str55 = post52.toString();
        java.lang.Integer int56 = post52.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest57 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str58 = createPostRequest57.getUsername();
        java.lang.String str59 = createPostRequest57.toString();
        ma.glasnost.orika.MappingContext mappingContext60 = null;
        createPostRequestToPostMapper39.mapBtoA(post52, createPostRequest57, mappingContext60);
        java.lang.String str62 = createPostRequest57.toString();
        com.vntu.marenko.ualearning.server.model.Post post63 = new com.vntu.marenko.ualearning.server.model.Post();
        post63.setText("");
        java.lang.String str66 = post63.toString();
        post63.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext69 = null;
        createPostRequestToPostMapper33.mapAtoB(createPostRequest57, post63, mappingContext69);
        java.lang.String str71 = createPostRequest57.toString();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertNotNull(postType40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str44, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str55, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str59, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str62, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str66, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str71, "CreatePostRequest(text=null, username=null)");
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper2 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType3 = createPostRequestToPostMapper2.getBType();
        com.vntu.marenko.ualearning.server.model.Post post4 = new com.vntu.marenko.ualearning.server.model.Post();
        post4.setText("");
        java.lang.String str7 = post4.toString();
        post4.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest10 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest10.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext13 = null;
        createPostRequestToPostMapper2.mapBtoA(post4, createPostRequest10, mappingContext13);
        com.vntu.marenko.ualearning.server.model.Post post15 = new com.vntu.marenko.ualearning.server.model.Post();
        post15.setText("");
        java.lang.String str18 = post15.toString();
        java.lang.Integer int19 = post15.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest20 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str21 = createPostRequest20.getUsername();
        java.lang.String str22 = createPostRequest20.toString();
        ma.glasnost.orika.MappingContext mappingContext23 = null;
        createPostRequestToPostMapper2.mapBtoA(post15, createPostRequest20, mappingContext23);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper25 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType26 = createPostRequestToPostMapper25.getBType();
        com.vntu.marenko.ualearning.server.model.Post post27 = new com.vntu.marenko.ualearning.server.model.Post();
        post27.setText("");
        java.lang.String str30 = post27.toString();
        post27.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest33 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest33.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext36 = null;
        createPostRequestToPostMapper25.mapBtoA(post27, createPostRequest33, mappingContext36);
        ma.glasnost.orika.MappingContext mappingContext38 = null;
        createPostRequestToPostMapper1.mapAtoB(createPostRequest20, post27, mappingContext38);
        boolean boolean40 = answerDto0.equals((java.lang.Object) mappingContext38);
        answerDto0.setId(35);
        org.junit.Assert.assertNotNull(postType3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str7, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str18, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str22, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str30, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper81 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        com.vntu.marenko.ualearning.server.model.Result result82 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.String str83 = result82.toString();
        boolean boolean84 = result82.isSubmitted();
        java.lang.Integer int85 = result82.getId();
        java.lang.Integer int86 = result82.getId();
        // The following exception was thrown during execution in test generation
        try {
            long long87 = markComputerImpl2.compute(result82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Result(id=null, user=null, test=null, submitted=false, answers=null)" + "'", str83, "Result(id=null, user=null, test=null, submitted=false, answers=null)");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNull(int86);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getPassword();
        userRequest0.setLogin("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        userRequest0.setPassword("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
        userRequest0.setLogin("CreatePostRequest(text=null, username=null)");
        java.lang.String str10 = userRequest0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UserRequest(login=CreatePostRequest(text=null, username=null), password=QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null), name=null, surname=null, age=0, institution=null, email=null)" + "'", str10, "UserRequest(login=CreatePostRequest(text=null, username=null), password=QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null), name=null, surname=null, age=0, institution=null, email=null)");
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper81 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper82 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper83 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig22 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl23 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository26 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper27 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository24, testRepository25, answerRepository26);
        ma.glasnost.orika.MapperFacade mapperFacade28 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType30 = submitResultRequestToDomainMapper27.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper31 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper32 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean33 = createPostRequestToPostMapper32.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper34 = null;
        ma.glasnost.orika.MapperFacade mapperFacade35 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl23, submitResultRequestToDomainMapper27, resultToDescriptionMapper31, createPostRequestToPostMapper32, postToDtoMapper34);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl36 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository37 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository39 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper40 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository37, testRepository38, answerRepository39);
        ma.glasnost.orika.MapperFacade mapperFacade41 = null;
        submitResultRequestToDomainMapper40.setMapperFacade(mapperFacade41);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType43 = submitResultRequestToDomainMapper40.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper44 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig45 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl46 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository49 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper50 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository47, testRepository48, answerRepository49);
        ma.glasnost.orika.MapperFacade mapperFacade51 = null;
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType53 = submitResultRequestToDomainMapper50.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper54 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper55 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean56 = createPostRequestToPostMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = null;
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig45.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl46, submitResultRequestToDomainMapper50, resultToDescriptionMapper54, createPostRequestToPostMapper55, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper59 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade60 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl36, submitResultRequestToDomainMapper40, resultToDescriptionMapper44, createPostRequestToPostMapper55, postToDtoMapper59);
        com.vntu.marenko.ualearning.server.controller.TestController testController61 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade60);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto63 = testController61.getTest((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType30);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(mapperFacade35);
        org.junit.Assert.assertNotNull(resultType43);
        org.junit.Assert.assertNotNull(resultType53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(mapperFacade60);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.util.Date date4 = post0.getTimestamp();
        com.vntu.marenko.ualearning.server.model.Post post5 = new com.vntu.marenko.ualearning.server.model.Post();
        post5.setText("");
        java.lang.Integer int8 = post5.getId();
        post5.setUser("QuestionDto(id=0, text=null, answers=null)");
        boolean boolean11 = post0.equals((java.lang.Object) post5);
        post0.setUser("");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto14 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str15 = postDto14.getLogin();
        java.lang.String[] strArray20 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        postDto14.setLikes((java.util.List<java.lang.String>) strList21);
        post0.setLikes((java.util.List<java.lang.String>) strList21);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        com.vntu.marenko.ualearning.server.model.Test test26 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int27 = test26.getId();
        java.lang.Integer int28 = test26.getId();
        test26.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int31 = test26.getCompletedCounter();
        java.lang.Integer int32 = test26.getCompletedCounter();
        java.lang.Integer int33 = test26.getCompletedCounter();
        java.lang.String str34 = test26.getDescriptionTest();
        test26.setId((java.lang.Integer) 0);
        boolean boolean37 = tagDto25.equals((java.lang.Object) 0);
        com.vntu.marenko.ualearning.server.model.Post post38 = new com.vntu.marenko.ualearning.server.model.Post();
        post38.setText("");
        java.lang.String str41 = post38.toString();
        java.lang.Integer int42 = post38.getId();
        java.lang.String[] strArray67 = new java.lang.String[] { "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "LoginRequest(login=null, password=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))", "", "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)", "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)", "Question(id=null, text=null, answers=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "Result(id=null, user=null, test=null, submitted=false, answers=null)", "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)", "ResultDescription(id=null, testId=100, testName=null, mark=0)", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)", "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)", "Question(id=null, text=null, answers=null)", "CreatePostRequest(text=null, username=null)", "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)", "QuestionDto(id=10, text=null, answers=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        post38.setLikes((java.util.List<java.lang.String>) strList68);
        boolean boolean71 = tagDto25.equals((java.lang.Object) post38);
        java.util.List<java.lang.String> strList72 = post38.getLikes();
        post0.setLikes(strList72);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(date4);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str34, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str41, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strList72);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        java.lang.Boolean boolean81 = createPostRequestToPostMapper56.favorsExtension();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        int int2 = testDto0.getId();
        java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList3 = testDto0.getTags();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(tagDtoList3);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str1 = user0.getEmail();
        java.lang.String str2 = user0.getSurname();
        user0.setEmail("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str5 = user0.getName();
        int int6 = user0.getAge();
        java.lang.String str7 = user0.getLogin();
        java.lang.String str8 = user0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=null, email=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), rating=0)" + "'", str8, "User(login=null, password=null, name=null, surname=null, age=0, institution=null, email=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), rating=0)");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        java.lang.String str6 = userRequest0.getLogin();
        java.lang.String str7 = userRequest0.getName();
        java.lang.String str8 = userRequest0.getInstitution();
        userRequest0.setAge((int) '4');
        java.lang.String str11 = userRequest0.getPassword();
        java.lang.String str12 = userRequest0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=52, institution=null, email=null)" + "'", str12, "UserRequest(login=null, password=null, name=null, surname=null, age=52, institution=null, email=null)");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        result7.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user10 = new com.vntu.marenko.ualearning.server.model.User();
        user10.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean14 = user10.equals((java.lang.Object) test13);
        user10.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result7.setUser(user10);
        com.vntu.marenko.ualearning.server.model.Question question18 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int19 = question18.getId();
        java.lang.Integer int20 = question18.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer21 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer22 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer22.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray25 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer21, answer22 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList26 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList26, answerArray25);
        question18.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        result7.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        result0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        result0.setId((java.lang.Integer) 100);
        java.lang.String str33 = result0.toString();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(answerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Result(id=100, user=null, test=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), submitted=false, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])" + "'", str33, "Result(id=100, user=null, test=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), submitted=false, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        userRequest0.setEmail("AnswerDto(id=0, text=null)");
        userRequest0.setInstitution("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        userRequest0.setPassword("Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
        java.lang.String str8 = userRequest0.getInstitution();
        java.lang.String str9 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str8, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("TagDto(id=0, name=null)");
        java.lang.String str7 = testDescription0.toString();
        com.vntu.marenko.ualearning.server.model.Result result8 = new com.vntu.marenko.ualearning.server.model.Result();
        result8.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user11 = new com.vntu.marenko.ualearning.server.model.User();
        user11.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean15 = user11.equals((java.lang.Object) test14);
        user11.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result8.setUser(user11);
        boolean boolean19 = testDescription0.equals((java.lang.Object) user11);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest20 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        boolean boolean21 = testDescription0.equals((java.lang.Object) createPostRequest20);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto22 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto22.setLogin("TagDto(id=0, name=null)");
        java.lang.String str25 = userDto22.getSurname();
        java.lang.String str26 = userDto22.getName();
        boolean boolean27 = testDescription0.equals((java.lang.Object) str26);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str7, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription3 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription3.setId((java.lang.Integer) 0);
        java.lang.Integer int6 = resultDescription3.getTestId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper7 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper8 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType9 = createPostRequestToPostMapper8.getBType();
        com.vntu.marenko.ualearning.server.model.Post post10 = new com.vntu.marenko.ualearning.server.model.Post();
        post10.setText("");
        java.lang.String str13 = post10.toString();
        post10.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest16 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest16.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext19 = null;
        createPostRequestToPostMapper8.mapBtoA(post10, createPostRequest16, mappingContext19);
        com.vntu.marenko.ualearning.server.model.Post post21 = new com.vntu.marenko.ualearning.server.model.Post();
        post21.setText("");
        java.lang.String str24 = post21.toString();
        java.lang.Integer int25 = post21.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest26 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str27 = createPostRequest26.getUsername();
        java.lang.String str28 = createPostRequest26.toString();
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        createPostRequestToPostMapper8.mapBtoA(post21, createPostRequest26, mappingContext29);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper31 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType32 = createPostRequestToPostMapper31.getBType();
        com.vntu.marenko.ualearning.server.model.Post post33 = new com.vntu.marenko.ualearning.server.model.Post();
        post33.setText("");
        java.lang.String str36 = post33.toString();
        post33.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest39 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest39.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext42 = null;
        createPostRequestToPostMapper31.mapBtoA(post33, createPostRequest39, mappingContext42);
        ma.glasnost.orika.MappingContext mappingContext44 = null;
        createPostRequestToPostMapper7.mapAtoB(createPostRequest26, post33, mappingContext44);
        boolean boolean46 = resultDescription3.equals((java.lang.Object) post33);
        resultDescription3.setId((java.lang.Integer) 100);
        resultDescription3.setId((java.lang.Integer) 100);
        long long51 = resultDescription3.getMark();
        boolean boolean52 = tagDto0.equals((java.lang.Object) long51);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(postType9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str13, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str24, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str28, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str36, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType4 = resultToDescriptionMapper1.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl7 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository6);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper9 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig10 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl11 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType18 = submitResultRequestToDomainMapper15.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper19 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper20 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean21 = createPostRequestToPostMapper20.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = null;
        ma.glasnost.orika.MapperFacade mapperFacade23 = mapperConfig10.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl11, submitResultRequestToDomainMapper15, resultToDescriptionMapper19, createPostRequestToPostMapper20, postToDtoMapper22);
        postToDtoMapper9.setMapperFacade(mapperFacade23);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig26 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType34 = submitResultRequestToDomainMapper31.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper35 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean37 = createPostRequestToPostMapper36.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = null;
        ma.glasnost.orika.MapperFacade mapperFacade39 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27, submitResultRequestToDomainMapper31, resultToDescriptionMapper35, createPostRequestToPostMapper36, postToDtoMapper38);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl40 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.MapperFacade mapperFacade45 = null;
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade45);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType47 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper48 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig49 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl50 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository52 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository53 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper54 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository51, testRepository52, answerRepository53);
        ma.glasnost.orika.MapperFacade mapperFacade55 = null;
        submitResultRequestToDomainMapper54.setMapperFacade(mapperFacade55);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType57 = submitResultRequestToDomainMapper54.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper58 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper59 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean60 = createPostRequestToPostMapper59.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = null;
        ma.glasnost.orika.MapperFacade mapperFacade62 = mapperConfig49.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl50, submitResultRequestToDomainMapper54, resultToDescriptionMapper58, createPostRequestToPostMapper59, postToDtoMapper61);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper63 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade64 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl40, submitResultRequestToDomainMapper44, resultToDescriptionMapper48, createPostRequestToPostMapper59, postToDtoMapper63);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl65 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository8, mapperFacade23, userRepository25, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl40);
        com.vntu.marenko.ualearning.server.controller.UserController userController66 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl7, mapperFacade23);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper67 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig68 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl69 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository70 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository71 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository72 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper73 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository70, testRepository71, answerRepository72);
        ma.glasnost.orika.MapperFacade mapperFacade74 = null;
        submitResultRequestToDomainMapper73.setMapperFacade(mapperFacade74);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType76 = submitResultRequestToDomainMapper73.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper77 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper78 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean79 = createPostRequestToPostMapper78.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper80 = null;
        ma.glasnost.orika.MapperFacade mapperFacade81 = mapperConfig68.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl69, submitResultRequestToDomainMapper73, resultToDescriptionMapper77, createPostRequestToPostMapper78, postToDtoMapper80);
        postToDtoMapper67.setMapperFacade(mapperFacade81);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController83 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl7, mapperFacade81);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository84 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl85 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository84);
        com.vntu.marenko.ualearning.server.controller.PostController postController86 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade81, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl85);
        resultToDescriptionMapper1.setMapperFacade(mapperFacade81);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType88 = resultToDescriptionMapper1.getBType();
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNotNull(resultDescriptionType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertNotNull(resultType18);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNotNull(mapperFacade23);
        org.junit.Assert.assertNotNull(resultType34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(mapperFacade39);
        org.junit.Assert.assertNotNull(resultType47);
        org.junit.Assert.assertNotNull(resultType57);
        org.junit.Assert.assertEquals("'" + boolean60 + "' != '" + false + "'", boolean60, false);
        org.junit.Assert.assertNotNull(mapperFacade62);
        org.junit.Assert.assertNotNull(mapperFacade64);
        org.junit.Assert.assertNotNull(resultType76);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade81);
        org.junit.Assert.assertNotNull(resultDescriptionType88);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId((int) (byte) 100);
        java.lang.String str3 = postDto0.getText();
        postDto0.setLogin("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.lang.String str6 = postDto0.getTimestamp();
        java.lang.String str7 = postDto0.getText();
        java.lang.String str8 = postDto0.getText();
        postDto0.setId((int) 'a');
        postDto0.setLogin("UserDto(login=null, name=AnswerDto(id=-1, text=Tag(id=null, name=null)), surname=null, age=10, institution=, email=null, rating=0)");
        java.lang.String str13 = postDto0.getTimestamp();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto0.setLogin("Tag(id=null, name=null)");
        userDto0.setInstitution("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        java.lang.String str9 = userDto0.getInstitution();
        userDto0.setInstitution("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        userDto0.setInstitution("TestDto(id=100, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)" + "'", str9, "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType16 = postToDtoMapper0.getBType();
        java.lang.Boolean boolean17 = postToDtoMapper0.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType18 = postToDtoMapper0.getBType();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto19 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto19.setId(0);
        postDto19.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        postDto19.setTimestamp("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Test test26 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray27 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList28 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList28, tagArray27);
        test26.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList28);
        boolean boolean31 = postDto19.equals((java.lang.Object) test26);
        com.vntu.marenko.ualearning.server.model.Post post32 = new com.vntu.marenko.ualearning.server.model.Post();
        post32.setText("");
        java.lang.String str35 = post32.toString();
        java.lang.Integer int36 = post32.getId();
        java.util.Date date37 = null;
        post32.setTimestamp(date37);
        java.lang.Integer int39 = post32.getId();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        postToDtoMapper0.mapBtoA(postDto19, post32, mappingContext40);
        postDto19.setId((int) '#');
        postDto19.setText("QuestionDto(id=10, text=null, answers=null)");
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postDtoType16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(postDtoType18);
        org.junit.Assert.assertNotNull(tagArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str35, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        test0.setDescriptionTest("Answer(id=null, text=null, correct=false)");
        test0.setCompletedCounter((java.lang.Integer) 100);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.toString();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest3 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str4 = userRequest3.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto5 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto5.setId((int) '#');
        boolean boolean8 = userRequest3.equals((java.lang.Object) '#');
        boolean boolean9 = tag0.equals((java.lang.Object) boolean8);
        tag0.setName("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        tag0.setName("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        com.vntu.marenko.ualearning.server.model.User user14 = new com.vntu.marenko.ualearning.server.model.User();
        user14.setInstitution("hi!");
        java.lang.String str17 = user14.toString();
        java.lang.String str18 = user14.getEmail();
        java.lang.String str19 = user14.getEmail();
        java.lang.String str20 = user14.getInstitution();
        boolean boolean21 = tag0.equals((java.lang.Object) str20);
        java.lang.String str22 = tag0.toString();
        tag0.setName("User(login=null, password=null, name=null, surname=null, age=10, institution=null, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Tag(id=null, name=null)" + "'", str2, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str17, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))" + "'", str22, "Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        com.vntu.marenko.ualearning.server.model.Answer answer1 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer1.setText("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        boolean boolean4 = answer1.isCorrect();
        boolean boolean5 = question0.equals((java.lang.Object) answer1);
        java.lang.String str6 = answer1.toString();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Answer(id=null, text=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), correct=false)" + "'", str6, "Answer(id=null, text=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), correct=false)");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        java.lang.String str13 = createPostRequest8.toString();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig15 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl16 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.MapperFacade mapperFacade21 = null;
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade21);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType23 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper24 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper25 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean26 = createPostRequestToPostMapper25.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper27 = null;
        ma.glasnost.orika.MapperFacade mapperFacade28 = mapperConfig15.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl16, submitResultRequestToDomainMapper20, resultToDescriptionMapper24, createPostRequestToPostMapper25, postToDtoMapper27);
        postToDtoMapper14.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType30 = postToDtoMapper14.getAType();
        boolean boolean31 = createPostRequest8.equals((java.lang.Object) postType30);
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str13, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        org.junit.Assert.assertNotNull(resultType23);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
        org.junit.Assert.assertNotNull(mapperFacade28);
        org.junit.Assert.assertNotNull(postType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user1 = new com.vntu.marenko.ualearning.server.model.User();
        user1.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean5 = user1.equals((java.lang.Object) test4);
        result0.setUser(user1);
        com.vntu.marenko.ualearning.server.model.User user7 = result0.getUser();
        com.vntu.marenko.ualearning.server.model.Test test8 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int9 = test8.getId();
        java.lang.Integer int10 = test8.getId();
        com.vntu.marenko.ualearning.server.model.Test test11 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray12 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList13 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList13, tagArray12);
        test11.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList13);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray16 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList17 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList17, tagArray16);
        test11.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList17);
        java.lang.String str20 = test11.getNameTest();
        com.vntu.marenko.ualearning.server.model.Test test21 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int22 = test21.getId();
        java.lang.Integer int23 = test21.getId();
        test21.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int26 = test21.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question27 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int28 = question27.getId();
        java.lang.Integer int29 = question27.getId();
        question27.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.model.Question question32 = new com.vntu.marenko.ualearning.server.model.Question();
        question32.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.Integer int35 = question32.getId();
        com.vntu.marenko.ualearning.server.model.Question question36 = new com.vntu.marenko.ualearning.server.model.Question();
        question36.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str39 = question36.getText();
        com.vntu.marenko.ualearning.server.model.Question question40 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int41 = question40.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList42 = null;
        question40.setAnswers(answerList42);
        com.vntu.marenko.ualearning.server.model.Test test44 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int45 = test44.getId();
        java.lang.Integer int46 = test44.getId();
        test44.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int49 = test44.getCompletedCounter();
        java.lang.Integer int50 = test44.getCompletedCounter();
        java.lang.Integer int51 = test44.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question52 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str53 = question52.getText();
        java.lang.Integer int54 = question52.getId();
        boolean boolean55 = test44.equals((java.lang.Object) question52);
        java.lang.String str56 = question52.toString();
        com.vntu.marenko.ualearning.server.model.Question question57 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int58 = question57.getId();
        java.lang.Integer int59 = question57.getId();
        com.vntu.marenko.ualearning.server.model.Question question60 = new com.vntu.marenko.ualearning.server.model.Question();
        question60.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Question question63 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str64 = question63.getText();
        java.lang.Integer int65 = question63.getId();
        com.vntu.marenko.ualearning.server.model.Question[] questionArray66 = new com.vntu.marenko.ualearning.server.model.Question[] { question27, question32, question36, question40, question52, question57, question60, question63 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Question> questionList67 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Question>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Question>) questionList67, questionArray66);
        test21.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList67);
        test11.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList67);
        test8.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList67);
        test8.setCompletedCounter((java.lang.Integer) 1);
        result0.setTest(test8);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(tagArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(tagArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str39, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Question(id=null, text=null, answers=null)" + "'", str56, "Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(questionArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType2 = createPostRequestToPostMapper1.getBType();
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        post3.setText("");
        java.lang.String str6 = post3.toString();
        post3.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest9 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest9.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        createPostRequestToPostMapper1.mapBtoA(post3, createPostRequest9, mappingContext12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.String str17 = post14.toString();
        java.lang.Integer int18 = post14.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str20 = createPostRequest19.getUsername();
        java.lang.String str21 = createPostRequest19.toString();
        ma.glasnost.orika.MappingContext mappingContext22 = null;
        createPostRequestToPostMapper1.mapBtoA(post14, createPostRequest19, mappingContext22);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest19, post26, mappingContext37);
        com.vntu.marenko.ualearning.server.model.User user39 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str40 = user39.getEmail();
        java.lang.String str41 = user39.getSurname();
        user39.setEmail("Answer(id=null, text=null, correct=false)");
        boolean boolean45 = user39.equals((java.lang.Object) (byte) -1);
        boolean boolean46 = createPostRequest19.equals((java.lang.Object) user39);
        java.lang.String str47 = createPostRequest19.getText();
        org.junit.Assert.assertNotNull(postType2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str17, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str21, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        java.lang.Boolean boolean81 = submitResultRequestToDomainMapper18.favorsExtension();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.Integer int9 = resultDescription4.getTestId();
        long long10 = resultDescription4.getMark();
        com.vntu.marenko.ualearning.server.model.Result result11 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int12 = result11.getId();
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int14 = test13.getId();
        java.lang.Integer int15 = test13.getId();
        result11.setTest(test13);
        boolean boolean17 = result11.isSubmitted();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription4, result11, mappingContext18);
        java.lang.Boolean boolean20 = resultToDescriptionMapper1.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription21 = null;
        com.vntu.marenko.ualearning.server.model.Result result22 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int23 = result22.getId();
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int25 = test24.getId();
        java.lang.Integer int26 = test24.getId();
        result22.setTest(test24);
        java.lang.Integer int28 = result22.getId();
        com.vntu.marenko.ualearning.server.model.Result result29 = new com.vntu.marenko.ualearning.server.model.Result();
        result29.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user32 = new com.vntu.marenko.ualearning.server.model.User();
        user32.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test35 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean36 = user32.equals((java.lang.Object) test35);
        user32.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result29.setUser(user32);
        com.vntu.marenko.ualearning.server.model.Question question40 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int41 = question40.getId();
        java.lang.Integer int42 = question40.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer43 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer44 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer44.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray47 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer43, answer44 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList48 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList48, answerArray47);
        question40.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList48);
        result29.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList48);
        result22.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList48);
        result22.setId((java.lang.Integer) 100);
        ma.glasnost.orika.MappingContext mappingContext55 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription21, result22, mappingContext55);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList57 = result22.getAnswers();
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(answerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(answerList57);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        java.lang.String str6 = userRequest0.getLogin();
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription7 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription7.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription7.setId((-1));
        java.lang.String str12 = testDescription7.getNameTest();
        boolean boolean13 = userRequest0.equals((java.lang.Object) str12);
        java.lang.String str14 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str12, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.util.Date date4 = null;
        post0.setTimestamp(date4);
        post0.setText("CreatePostRequest(text=null, username=null)");
        java.lang.String str8 = post0.getUser();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.String str1 = resultDescription0.getTestName();
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Test test4 = testServiceImpl2.getTest((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (short) 10);
        java.lang.String str3 = userDto0.getEmail();
        int int4 = userDto0.getAge();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        user5.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType14 = submitResultRequestToDomainMapper11.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade15);
        boolean boolean17 = user5.equals((java.lang.Object) submitResultRequestToDomainMapper11);
        com.vntu.marenko.ualearning.server.model.Result result18 = new com.vntu.marenko.ualearning.server.model.Result();
        result18.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user21 = new com.vntu.marenko.ualearning.server.model.User();
        user21.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean25 = user21.equals((java.lang.Object) test24);
        user21.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result18.setUser(user21);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest29 = null;
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        submitResultRequestToDomainMapper11.mapBtoA(result18, submitResultRequest29, mappingContext30);
        com.vntu.marenko.ualearning.server.model.User user32 = result18.getUser();
        com.vntu.marenko.ualearning.server.model.User user33 = result18.getUser();
        result18.setId((java.lang.Integer) 100);
        boolean boolean36 = userDto0.equals((java.lang.Object) result18);
        java.lang.String str37 = userDto0.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(submitResultRequestType14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNotNull(user33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        com.vntu.marenko.ualearning.server.model.Post post13 = new com.vntu.marenko.ualearning.server.model.Post();
        post13.setText("");
        java.lang.String str16 = post13.toString();
        java.lang.Integer int17 = post13.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest18 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str19 = createPostRequest18.getUsername();
        java.lang.String str20 = createPostRequest18.toString();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper0.mapBtoA(post13, createPostRequest18, mappingContext21);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository23 = null;
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer26 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl27 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository23, mapperFacade24, userRepository25, markComputer26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean29 = createPostRequestToPostMapper28.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig30 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl31 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository32 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository34 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper35 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository32, testRepository33, answerRepository34);
        ma.glasnost.orika.MapperFacade mapperFacade36 = null;
        submitResultRequestToDomainMapper35.setMapperFacade(mapperFacade36);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType38 = submitResultRequestToDomainMapper35.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper39 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper42 = null;
        ma.glasnost.orika.MapperFacade mapperFacade43 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl31, submitResultRequestToDomainMapper35, resultToDescriptionMapper39, createPostRequestToPostMapper40, postToDtoMapper42);
        createPostRequestToPostMapper28.setMapperFacade(mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController45 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl27, mapperFacade43);
        com.vntu.marenko.ualearning.server.service.UserService userService46 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController63 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService46, mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController64 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl27, mapperFacade61);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade61);
        java.lang.Boolean boolean66 = createPostRequestToPostMapper0.favorsExtension();
        java.lang.Boolean boolean67 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest68 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str69 = createPostRequest68.getUsername();
        createPostRequest68.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Post post72 = new com.vntu.marenko.ualearning.server.model.Post();
        post72.setText("");
        java.lang.String str75 = post72.toString();
        java.lang.Integer int76 = post72.getId();
        java.util.Date date77 = null;
        post72.setTimestamp(date77);
        java.lang.Integer int79 = post72.getId();
        ma.glasnost.orika.MappingContext mappingContext80 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest68, post72, mappingContext80);
        java.lang.String str82 = post72.toString();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str16, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str20, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(resultType38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(mapperFacade43);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertEquals("'" + boolean67 + "' != '" + false + "'", boolean67, false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str75, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(int79);
// flaky:         org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Post(id=null, text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), timestamp=Sat Jun 18 18:46:57 EEST 2022, user=null, likes=null)" + "'", str82, "Post(id=null, text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), timestamp=Sat Jun 18 18:46:57 EEST 2022, user=null, likes=null)");
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription6 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription6.setId((java.lang.Integer) 0);
        resultDescription6.setTestName("hi!");
        java.lang.String str11 = resultDescription6.getTestName();
        boolean boolean12 = resultDto0.equals((java.lang.Object) str11);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto13 = resultDto0.getTest();
        resultDto0.setId((int) (byte) 1);
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(testDto13);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        test3.setDescriptionTest("");
        test3.setDescriptionTest("");
        test3.setCompletedCounter((java.lang.Integer) 1);
        test3.setId((java.lang.Integer) 0);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList13 = test3.getTags();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(tagList13);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType22 = submitResultRequestToDomainMapper19.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper23 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig24 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl25 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository28 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper29 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository26, testRepository27, answerRepository28);
        ma.glasnost.orika.MapperFacade mapperFacade30 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType32 = submitResultRequestToDomainMapper29.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper33 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper34 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean35 = createPostRequestToPostMapper34.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper36 = null;
        ma.glasnost.orika.MapperFacade mapperFacade37 = mapperConfig24.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl25, submitResultRequestToDomainMapper29, resultToDescriptionMapper33, createPostRequestToPostMapper34, postToDtoMapper36);
        postToDtoMapper23.setMapperFacade(mapperFacade37);
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade37);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig42 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl43 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository46 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper47 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository44, testRepository45, answerRepository46);
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        submitResultRequestToDomainMapper47.setMapperFacade(mapperFacade48);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType50 = submitResultRequestToDomainMapper47.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper51 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper52 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean53 = createPostRequestToPostMapper52.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper54 = null;
        ma.glasnost.orika.MapperFacade mapperFacade55 = mapperConfig42.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl43, submitResultRequestToDomainMapper47, resultToDescriptionMapper51, createPostRequestToPostMapper52, postToDtoMapper54);
        createPostRequestToPostMapper40.setMapperFacade(mapperFacade55);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository57 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository58 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository59 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper60 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository57, testRepository58, answerRepository59);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType61 = submitResultRequestToDomainMapper60.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        submitResultRequestToDomainMapper60.setMapperFacade(mapperFacade76);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository79 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl80 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository79);
        com.vntu.marenko.ualearning.server.controller.PostController postController81 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade76, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController82 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade55, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController83 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade37, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController84 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade14, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto86 = postController84.getPost((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType22);
        org.junit.Assert.assertNotNull(resultType32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNotNull(mapperFacade37);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(resultType50);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(mapperFacade55);
        org.junit.Assert.assertNotNull(resultType61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getPassword();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        ma.glasnost.orika.MapperFacade mapperFacade3 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto5 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl6 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean7 = answerDto5.equals((java.lang.Object) markComputerImpl6);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl8 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade3, userRepository4, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl6);
        boolean boolean9 = loginRequest0.equals((java.lang.Object) resultServiceImpl8);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl11 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository10);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = resultToDescriptionMapper13.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = resultToDescriptionMapper13.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType16 = resultToDescriptionMapper13.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType17 = resultToDescriptionMapper13.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        createPostRequestToPostMapper18.setMapperFacade(mapperFacade33);
        resultToDescriptionMapper13.setMapperFacade(mapperFacade33);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController36 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl11, mapperFacade33);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController37 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl8, mapperFacade33);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto39 = resultController37.getResult((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertNotNull(resultDescriptionType16);
        org.junit.Assert.assertNotNull(resultType17);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList2 = questionDto0.getAnswers();
        java.lang.String str3 = questionDto0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(answerDtoList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "QuestionDto(id=0, text=null, answers=null)" + "'", str3, "QuestionDto(id=0, text=null, answers=null)");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        com.vntu.marenko.ualearning.server.model.Result result19 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int20 = result19.getId();
        com.vntu.marenko.ualearning.server.model.Test test21 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int22 = test21.getId();
        java.lang.Integer int23 = test21.getId();
        result19.setTest(test21);
        java.lang.Integer int25 = result19.getId();
        com.vntu.marenko.ualearning.server.model.User user26 = new com.vntu.marenko.ualearning.server.model.User();
        user26.setSurname("");
        result19.setUser(user26);
        user26.setRating((long) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = userServiceImpl1.register(user26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper81 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        ma.glasnost.orika.Mapper[] mapperArray83 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray84 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray83;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper81.setUsedMappers(objMapperArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertNotNull(mapperArray83);
        org.junit.Assert.assertNotNull(objMapperArray84);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList4 = testServiceImpl2.getTestsWithTag((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.Integer int5 = resultDescription0.getTestId();
        resultDescription0.setId((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int5);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        post0.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.util.Date date6 = null;
        post0.setTimestamp(date6);
        java.util.Date date8 = post0.getTimestamp();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(date8);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("LoginRequest(login=Tag(id=null, name=null), password=null)");
        createPostRequest0.setText("SubmitResultRequest(userLogin=null, testId=0, answers=[1, 10, -1])");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        int int3 = tagDto0.getId();
        tagDto0.setId((int) (short) -1);
        java.lang.String str6 = tagDto0.getName();
        tagDto0.setName("TagDto(id=0, name=)");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto21 = resultDto0.getUser();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto22 = resultDto0.getTest();
        com.vntu.marenko.ualearning.server.model.Answer answer23 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.Integer int24 = answer23.getId();
        com.vntu.marenko.ualearning.server.model.Test test25 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int26 = test25.getId();
        java.lang.Integer int27 = test25.getId();
        test25.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        test25.setId((java.lang.Integer) 1);
        boolean boolean32 = answer23.equals((java.lang.Object) test25);
        java.lang.String str33 = test25.getNameTest();
        java.lang.Integer int34 = test25.getCompletedCounter();
        boolean boolean35 = resultDto0.equals((java.lang.Object) test25);
        java.lang.Integer int36 = test25.getCompletedCounter();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(userDto21);
        org.junit.Assert.assertNull(testDto22);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        java.lang.Boolean boolean4 = submitResultRequestToDomainMapper3.favorsExtension();
        java.lang.Boolean boolean5 = submitResultRequestToDomainMapper3.favorsExtension();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType12 = submitResultRequestToDomainMapper9.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade13);
        com.vntu.marenko.ualearning.server.model.User user15 = new com.vntu.marenko.ualearning.server.model.User();
        user15.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository19 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository20 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper21 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository18, testRepository19, answerRepository20);
        ma.glasnost.orika.MapperFacade mapperFacade22 = null;
        submitResultRequestToDomainMapper21.setMapperFacade(mapperFacade22);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType24 = submitResultRequestToDomainMapper21.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade25 = null;
        submitResultRequestToDomainMapper21.setMapperFacade(mapperFacade25);
        boolean boolean27 = user15.equals((java.lang.Object) submitResultRequestToDomainMapper21);
        com.vntu.marenko.ualearning.server.model.Result result28 = new com.vntu.marenko.ualearning.server.model.Result();
        result28.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user31 = new com.vntu.marenko.ualearning.server.model.User();
        user31.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test34 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean35 = user31.equals((java.lang.Object) test34);
        user31.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result28.setUser(user31);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest39 = null;
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        submitResultRequestToDomainMapper21.mapBtoA(result28, submitResultRequest39, mappingContext40);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest42 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest42.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int45 = submitResultRequest42.getTestId();
        ma.glasnost.orika.MappingContext mappingContext46 = null;
        submitResultRequestToDomainMapper9.mapBtoA(result28, submitResultRequest42, mappingContext46);
        submitResultRequest42.setTestId((-1));
        submitResultRequest42.setUserLogin("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
        com.vntu.marenko.ualearning.server.model.Post post52 = new com.vntu.marenko.ualearning.server.model.Post();
        post52.setText("");
        java.util.Date date55 = null;
        post52.setTimestamp(date55);
        boolean boolean57 = submitResultRequest42.equals((java.lang.Object) post52);
        com.vntu.marenko.ualearning.server.model.Result result58 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int59 = result58.getId();
        com.vntu.marenko.ualearning.server.model.Test test60 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int61 = test60.getId();
        java.lang.Integer int62 = test60.getId();
        result58.setTest(test60);
        java.lang.Integer int64 = result58.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList65 = result58.getAnswers();
        ma.glasnost.orika.MappingContext mappingContext66 = null;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.mapAtoB(submitResultRequest42, result58, mappingContext66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNotNull(submitResultRequestType12);
        org.junit.Assert.assertNotNull(submitResultRequestType24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(answerList65);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getSurname();
        java.lang.String str4 = userDto0.getName();
        userDto0.setAge((int) (short) 100);
        java.lang.String str7 = userDto0.toString();
        userDto0.setAge((int) (byte) 1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UserDto(login=null, name=null, surname=null, age=100, institution=, email=null, rating=0)" + "'", str7, "UserDto(login=null, name=null, surname=null, age=100, institution=, email=null, rating=0)");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.Integer int17 = post14.getId();
        java.util.Date date18 = post14.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = null;
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper10.mapBtoA(post14, createPostRequest19, mappingContext20);
        java.lang.String[] strArray34 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "TagDto(id=0, name=null)", "LoginRequest(login=null, password=null)", "Answer(id=null, text=null, correct=false)", "CreatePostRequest(text=null, username=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=null, username=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        post14.setLikes((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = post14.getId();
        java.lang.Integer int39 = post14.getId();
        post14.setId((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList42 = post14.getLikes();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(date18);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        int int2 = testDto0.getId();
        testDto0.setCompletedCounter((java.lang.Integer) 0);
        int int5 = testDto0.getId();
        testDto0.setNameTest("SubmitResultRequest(userLogin=null, testId=0, answers=[1, 10, -1])");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        java.lang.Integer int3 = test0.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int5 = test4.getId();
        java.lang.Integer int6 = test4.getId();
        test4.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag9 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag9.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag12 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag12.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag15 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str16 = tag15.toString();
        java.lang.String str17 = tag15.getName();
        java.lang.Integer int18 = tag15.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper19 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper20 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType21 = createPostRequestToPostMapper20.getBType();
        com.vntu.marenko.ualearning.server.model.Post post22 = new com.vntu.marenko.ualearning.server.model.Post();
        post22.setText("");
        java.lang.String str25 = post22.toString();
        post22.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest28 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest28.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext31 = null;
        createPostRequestToPostMapper20.mapBtoA(post22, createPostRequest28, mappingContext31);
        com.vntu.marenko.ualearning.server.model.Post post33 = new com.vntu.marenko.ualearning.server.model.Post();
        post33.setText("");
        java.lang.String str36 = post33.toString();
        java.lang.Integer int37 = post33.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest38 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str39 = createPostRequest38.getUsername();
        java.lang.String str40 = createPostRequest38.toString();
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper20.mapBtoA(post33, createPostRequest38, mappingContext41);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper43 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType44 = createPostRequestToPostMapper43.getBType();
        com.vntu.marenko.ualearning.server.model.Post post45 = new com.vntu.marenko.ualearning.server.model.Post();
        post45.setText("");
        java.lang.String str48 = post45.toString();
        post45.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest51 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest51.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext54 = null;
        createPostRequestToPostMapper43.mapBtoA(post45, createPostRequest51, mappingContext54);
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        createPostRequestToPostMapper19.mapAtoB(createPostRequest38, post45, mappingContext56);
        boolean boolean58 = tag15.equals((java.lang.Object) createPostRequest38);
        com.vntu.marenko.ualearning.server.model.Tag tag59 = new com.vntu.marenko.ualearning.server.model.Tag();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray60 = new com.vntu.marenko.ualearning.server.model.Tag[] { tag9, tag12, tag15, tag59 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList61 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList61, tagArray60);
        test4.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList61);
        test0.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList61);
        test0.setNameTest("Answer(id=100, text=null, correct=false)");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto67 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str68 = postDto67.getLogin();
        java.lang.String[] strArray73 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        postDto67.setLikes((java.util.List<java.lang.String>) strList74);
        java.lang.String str77 = postDto67.getText();
        boolean boolean78 = test0.equals((java.lang.Object) postDto67);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Tag(id=null, name=null)" + "'", str16, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(postType21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str25, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str36, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str40, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str48, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(tagArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        java.lang.String[] strArray6 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        postDto0.setLikes((java.util.List<java.lang.String>) strList7);
        java.lang.String str10 = postDto0.getText();
        postDto0.setText("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        java.lang.String str13 = postDto0.getTimestamp();
        postDto0.setText("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        java.lang.String str16 = postDto0.getText();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str16, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto0.setText("hi!");
        java.lang.String str3 = answerDto0.getText();
        answerDto0.setId(0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController37 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade36);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest38 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int39 = submitResultRequest38.getTestId();
        submitResultRequest38.setTestId((int) (byte) -1);
        int int42 = submitResultRequest38.getTestId();
        java.lang.String str43 = submitResultRequest38.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto44 = resultController37.submitTest(submitResultRequest38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "SubmitResultRequest(userLogin=null, testId=-1, answers=null)" + "'", str43, "SubmitResultRequest(userLogin=null, testId=-1, answers=null)");
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setMark(1L);
        long long5 = resultDescription0.getMark();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 1L + "'", long5 == 1L);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        java.lang.String str52 = testDto0.getNameTest();
        int int53 = testDto0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        boolean boolean5 = userDto0.equals((java.lang.Object) (byte) -1);
        java.lang.String str6 = userDto0.getInstitution();
        java.lang.String str7 = userDto0.getSurname();
        int int8 = userDto0.getRating();
        java.lang.String str9 = userDto0.getSurname();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        com.vntu.marenko.ualearning.server.model.User user26 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str27 = user26.getEmail();
        java.lang.String str28 = user26.getSurname();
        result7.setUser(user26);
        result7.setId((java.lang.Integer) 0);
        result7.setId((java.lang.Integer) 0);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest34 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str35 = loginRequest34.getLogin();
        loginRequest34.setLogin("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        boolean boolean38 = result7.equals((java.lang.Object) loginRequest34);
        loginRequest34.setPassword("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        userDto0.setLogin("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        userDto0.setLogin("");
        userDto0.setLogin("AnswerDto(id=0, text=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription1 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription1.setId((java.lang.Integer) 0);
        resultDescription1.setMark(1L);
        resultDescription1.setMark((long) 52);
        boolean boolean8 = createPostRequest0.equals((java.lang.Object) resultDescription1);
        resultDescription1.setTestName("");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription3 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int4 = resultDescription3.getId();
        long long5 = resultDescription3.getMark();
        com.vntu.marenko.ualearning.server.model.Result result6 = new com.vntu.marenko.ualearning.server.model.Result();
        result6.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        test9.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int14 = test9.getCompletedCounter();
        result6.setTest(test9);
        com.vntu.marenko.ualearning.server.model.Test test16 = result6.getTest();
        ma.glasnost.orika.MappingContext mappingContext17 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription3, result6, mappingContext17);
        java.lang.Boolean boolean19 = resultToDescriptionMapper1.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.model.Result result21 = new com.vntu.marenko.ualearning.server.model.Result();
        result21.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int25 = test24.getId();
        java.lang.Integer int26 = test24.getId();
        test24.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int29 = test24.getCompletedCounter();
        result21.setTest(test24);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription31 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription31.setId((java.lang.Integer) 0);
        java.lang.Integer int34 = resultDescription31.getTestId();
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.mapAtoB(result21, resultDescription31, mappingContext35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(test16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        int int2 = testDto0.getId();
        testDto0.setCompletedCounter((java.lang.Integer) 0);
        java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList5 = testDto0.getTags();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto6 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int7 = testDto6.getId();
        int int8 = testDto6.getId();
        testDto6.setCompletedCounter((java.lang.Integer) 0);
        java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList11 = testDto6.getTags();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto12 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str13 = testDto12.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto14 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str15 = tagDto14.toString();
        java.lang.String str16 = tagDto14.getName();
        com.vntu.marenko.ualearning.server.model.User user17 = new com.vntu.marenko.ualearning.server.model.User();
        long long18 = user17.getRating();
        user17.setLogin("hi!");
        boolean boolean21 = tagDto14.equals((java.lang.Object) user17);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto22 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str23 = tagDto22.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto24 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto24.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto27 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str28 = tagDto27.toString();
        java.lang.String str29 = tagDto27.getName();
        com.vntu.marenko.ualearning.server.model.Test test30 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int31 = test30.getId();
        java.lang.Integer int32 = test30.getId();
        test30.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList35 = test30.getTags();
        boolean boolean36 = tagDto27.equals((java.lang.Object) tagList35);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto37 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto37.setId(1);
        boolean boolean41 = tagDto37.equals((java.lang.Object) (-1L));
        int int42 = tagDto37.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto43 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto43.setId(1);
        java.lang.String str46 = tagDto43.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto47 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str48 = tagDto47.toString();
        java.lang.String str49 = tagDto47.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto50 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str51 = tagDto50.toString();
        java.lang.String str52 = tagDto50.getName();
        com.vntu.marenko.ualearning.server.model.Test test53 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int54 = test53.getId();
        java.lang.Integer int55 = test53.getId();
        test53.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList58 = test53.getTags();
        boolean boolean59 = tagDto50.equals((java.lang.Object) tagList58);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray60 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto14, tagDto22, tagDto24, tagDto27, tagDto37, tagDto43, tagDto47, tagDto50 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList61 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList61, tagDtoArray60);
        testDto12.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList61);
        testDto12.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str66 = testDto12.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto67 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto67.setId(1);
        int int70 = tagDto67.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto71 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto71.setId(1);
        java.lang.String str74 = tagDto71.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto75 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str76 = tagDto75.toString();
        java.lang.String str77 = tagDto75.getName();
        com.vntu.marenko.ualearning.server.model.Test test78 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int79 = test78.getId();
        java.lang.Integer int80 = test78.getId();
        test78.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList83 = test78.getTags();
        boolean boolean84 = tagDto75.equals((java.lang.Object) tagList83);
        tagDto75.setName("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto87 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str88 = tagDto87.toString();
        java.lang.String str89 = tagDto87.getName();
        java.lang.String str90 = tagDto87.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto91 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str92 = tagDto91.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray93 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto67, tagDto71, tagDto75, tagDto87, tagDto91 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList94 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList94, tagDtoArray93);
        testDto12.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList94);
        testDto6.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList94);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList94);
        java.lang.String str99 = testDto0.getDescriptionTest();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(tagDtoList5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(tagDtoList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str13, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "TagDto(id=0, name=null)" + "'", str15, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "TagDto(id=0, name=null)" + "'", str23, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "TagDto(id=0, name=null)" + "'", str28, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(tagList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "TagDto(id=0, name=null)" + "'", str48, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "TagDto(id=0, name=null)" + "'", str51, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(tagList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(tagDtoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])" + "'", str66, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "TagDto(id=0, name=null)" + "'", str76, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNull(tagList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "TagDto(id=0, name=null)" + "'", str88, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "TagDto(id=0, name=null)" + "'", str92, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNotNull(tagDtoArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType17 = createPostRequestToPostMapper0.getAType();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper0.favorsExtension();
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(createPostRequestType17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        resultDto0.setSubmitted(true);
        resultDto0.setSubmitted(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.Integer int2 = tag0.getId();
        java.lang.String str3 = tag0.getName();
        tag0.setId((java.lang.Integer) 97);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        long long22 = resultDto0.getMark();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto23 = resultDto0.getTest();
        long long24 = resultDto0.getMark();
        resultDto0.setId(0);
        int int27 = resultDto0.getId();
        boolean boolean28 = resultDto0.isSubmitted();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(testDto23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription3 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int4 = resultDescription3.getId();
        long long5 = resultDescription3.getMark();
        com.vntu.marenko.ualearning.server.model.Result result6 = new com.vntu.marenko.ualearning.server.model.Result();
        result6.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        test9.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int14 = test9.getCompletedCounter();
        result6.setTest(test9);
        com.vntu.marenko.ualearning.server.model.Test test16 = result6.getTest();
        ma.glasnost.orika.MappingContext mappingContext17 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription3, result6, mappingContext17);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription19 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription19.setId((java.lang.Integer) 0);
        java.lang.String str22 = resultDescription19.getTestName();
        com.vntu.marenko.ualearning.server.model.User user23 = new com.vntu.marenko.ualearning.server.model.User();
        user23.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository28 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper29 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository26, testRepository27, answerRepository28);
        ma.glasnost.orika.MapperFacade mapperFacade30 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType32 = submitResultRequestToDomainMapper29.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade33 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade33);
        boolean boolean35 = user23.equals((java.lang.Object) submitResultRequestToDomainMapper29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType36 = submitResultRequestToDomainMapper29.getAType();
        com.vntu.marenko.ualearning.server.model.Result result37 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int38 = result37.getId();
        com.vntu.marenko.ualearning.server.model.Test test39 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int40 = test39.getId();
        java.lang.Integer int41 = test39.getId();
        result37.setTest(test39);
        java.lang.Integer int43 = result37.getId();
        com.vntu.marenko.ualearning.server.model.Test test44 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int45 = test44.getId();
        java.lang.Integer int46 = test44.getId();
        test44.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int49 = test44.getCompletedCounter();
        java.lang.Integer int50 = test44.getCompletedCounter();
        result37.setTest(test44);
        java.lang.Integer int52 = result37.getId();
        result37.setId((java.lang.Integer) 1);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest55 = null;
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        submitResultRequestToDomainMapper29.mapBtoA(result37, submitResultRequest55, mappingContext56);
        ma.glasnost.orika.MappingContext mappingContext58 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription19, result37, mappingContext58);
        ma.glasnost.orika.Mapper[] mapperArray61 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray62 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray61;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(test16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(submitResultRequestType32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(mapperArray61);
        org.junit.Assert.assertNotNull(objMapperArray62);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        com.vntu.marenko.ualearning.server.model.User user26 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str27 = user26.getEmail();
        java.lang.String str28 = user26.getSurname();
        result7.setUser(user26);
        result7.setId((java.lang.Integer) 0);
        com.vntu.marenko.ualearning.server.model.User user32 = null;
        result7.setUser(user32);
        result7.setSubmitted(false);
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.Integer int17 = post14.getId();
        java.util.Date date18 = post14.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = null;
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper10.mapBtoA(post14, createPostRequest19, mappingContext20);
        ma.glasnost.orika.Mapper[] mapperArray23 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray24 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray23;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper10.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(date18);
        org.junit.Assert.assertNotNull(mapperArray23);
        org.junit.Assert.assertNotNull(objMapperArray24);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setInstitution("QuestionDto(id=10, text=null, answers=null)");
        java.lang.String str8 = userRequest0.getName();
        userRequest0.setSurname("Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setAge((int) '4');
        user0.setName("LoginRequest(login=null, password=null)");
        user0.setEmail("CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)");
        user0.setName("PostDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), timestamp=TagDto(id=1, name=Result(id=null, user=null, test=null, submitted=false, answers=null)), login=UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1), likes=null)");
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setId((int) (short) 10);
        java.lang.String str27 = questionDto0.getText();
        java.lang.String str28 = questionDto0.getText();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = resultDto0.getTest();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList5 = resultDto0.getAnswers();
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertNull(testDto4);
        org.junit.Assert.assertNull(answerDtoList5);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType2 = createPostRequestToPostMapper0.getAType();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest17 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest17.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post20 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper13.mapAtoB(createPostRequest17, post20, mappingContext21);
        com.vntu.marenko.ualearning.server.model.Post post23 = new com.vntu.marenko.ualearning.server.model.Post();
        post23.setText("");
        java.lang.String str26 = post23.toString();
        java.util.Date date27 = null;
        post23.setTimestamp(date27);
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest17, post23, mappingContext29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType31 = createPostRequestToPostMapper0.getBType();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertNotNull(createPostRequestType2);
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str26, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNotNull(postType31);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.Result result1 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user2 = new com.vntu.marenko.ualearning.server.model.User();
        user2.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test5 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean6 = user2.equals((java.lang.Object) test5);
        result1.setUser(user2);
        result0.setUser(user2);
        result0.setSubmitted(false);
        com.vntu.marenko.ualearning.server.model.User user11 = result0.getUser();
        java.lang.String str12 = user11.getInstitution();
        java.lang.String str13 = user11.getInstitution();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer3 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer4 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer4.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray7 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer3, answer4 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList8 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList8, answerArray7);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList8);
        java.lang.Integer int11 = question0.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList12 = question0.getAnswers();
        java.lang.String str13 = question0.getText();
        java.lang.String str14 = question0.getText();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(answerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(answerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setAge((int) '4');
        user0.setEmail("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.String str7 = user0.getSurname();
        int int8 = user0.getAge();
        user0.setSurname("Answer(id=-1, text=null, correct=true)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig22 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl23 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository26 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper27 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository24, testRepository25, answerRepository26);
        ma.glasnost.orika.MapperFacade mapperFacade28 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType30 = submitResultRequestToDomainMapper27.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper31 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper32 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean33 = createPostRequestToPostMapper32.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper34 = null;
        ma.glasnost.orika.MapperFacade mapperFacade35 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl23, submitResultRequestToDomainMapper27, resultToDescriptionMapper31, createPostRequestToPostMapper32, postToDtoMapper34);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl36 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository37 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository39 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper40 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository37, testRepository38, answerRepository39);
        ma.glasnost.orika.MapperFacade mapperFacade41 = null;
        submitResultRequestToDomainMapper40.setMapperFacade(mapperFacade41);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType43 = submitResultRequestToDomainMapper40.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper44 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig45 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl46 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository49 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper50 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository47, testRepository48, answerRepository49);
        ma.glasnost.orika.MapperFacade mapperFacade51 = null;
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType53 = submitResultRequestToDomainMapper50.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper54 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper55 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean56 = createPostRequestToPostMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = null;
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig45.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl46, submitResultRequestToDomainMapper50, resultToDescriptionMapper54, createPostRequestToPostMapper55, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper59 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade60 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl36, submitResultRequestToDomainMapper40, resultToDescriptionMapper44, createPostRequestToPostMapper55, postToDtoMapper59);
        com.vntu.marenko.ualearning.server.controller.TestController testController61 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade60);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest62 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str63 = userRequest62.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto64 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto64.setId((int) '#');
        boolean boolean67 = userRequest62.equals((java.lang.Object) '#');
        userRequest62.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository70 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl71 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository70);
        boolean boolean72 = userRequest62.equals((java.lang.Object) postServiceImpl71);
        com.vntu.marenko.ualearning.server.controller.PostController postController73 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade60, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl71);
        com.vntu.marenko.ualearning.server.service.PostService postService74 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController75 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade60, postService74);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto77 = postController75.getPost((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType30);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(mapperFacade35);
        org.junit.Assert.assertNotNull(resultType43);
        org.junit.Assert.assertNotNull(resultType53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(mapperFacade60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        boolean boolean4 = tagDto0.equals((java.lang.Object) (-1L));
        tagDto0.setId((int) (short) 0);
        java.lang.String str7 = tagDto0.getName();
        tagDto0.setName("LoginRequest(login=Result(id=null, user=null, test=null, submitted=false, answers=null), password=null)");
        tagDto0.setId((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        post0.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str6 = post0.getUser();
        java.lang.Integer int7 = post0.getId();
        java.util.Date date8 = null;
        post0.setTimestamp(date8);
        java.util.List<java.lang.String> strList10 = post0.getLikes();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        java.lang.String str2 = userDto0.getLogin();
        int int3 = userDto0.getRating();
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto4 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        boolean boolean5 = userDto0.equals((java.lang.Object) resultDto4);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        java.lang.Integer int3 = test0.getCompletedCounter();
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList4 = test0.getTags();
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList5 = test0.getQuestions();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(tagList4);
        org.junit.Assert.assertNull(questionList5);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList5 = test3.getTags();
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int7 = test6.getId();
        java.lang.Integer int8 = test6.getId();
        test6.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository11 = null;
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository13 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer14 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl15 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository11, mapperFacade12, userRepository13, markComputer14);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig18 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl19 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper23.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper27 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean29 = createPostRequestToPostMapper28.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper30 = null;
        ma.glasnost.orika.MapperFacade mapperFacade31 = mapperConfig18.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl19, submitResultRequestToDomainMapper23, resultToDescriptionMapper27, createPostRequestToPostMapper28, postToDtoMapper30);
        createPostRequestToPostMapper16.setMapperFacade(mapperFacade31);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController33 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl15, mapperFacade31);
        boolean boolean34 = test6.equals((java.lang.Object) resultController33);
        boolean boolean35 = test3.equals((java.lang.Object) test6);
        java.lang.Integer int36 = test3.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.User user37 = new com.vntu.marenko.ualearning.server.model.User();
        user37.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test40 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean41 = user37.equals((java.lang.Object) test40);
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList42 = test40.getQuestions();
        boolean boolean43 = test3.equals((java.lang.Object) test40);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(tagList5);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(mapperFacade31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(questionList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList8 = test3.getTags();
        boolean boolean9 = tagDto0.equals((java.lang.Object) tagList8);
        int int10 = tagDto0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(tagList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        com.vntu.marenko.ualearning.server.model.Test test1 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int2 = test1.getId();
        java.lang.Integer int3 = test1.getId();
        test1.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int6 = test1.getCompletedCounter();
        java.lang.Integer int7 = test1.getCompletedCounter();
        java.lang.Integer int8 = test1.getCompletedCounter();
        java.lang.String str9 = test1.getDescriptionTest();
        test1.setId((java.lang.Integer) 0);
        boolean boolean12 = tagDto0.equals((java.lang.Object) 0);
        tagDto0.setName("SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)");
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str9, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        userRequest0.setEmail("AnswerDto(id=0, text=null)");
        userRequest0.setInstitution("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        userRequest0.setPassword("Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription8 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int9 = resultDescription8.getId();
        java.lang.Integer int10 = resultDescription8.getId();
        boolean boolean11 = userRequest0.equals((java.lang.Object) resultDescription8);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto12 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto12.setInstitution("");
        userDto12.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.String str17 = userDto12.getName();
        boolean boolean18 = resultDescription8.equals((java.lang.Object) userDto12);
        userDto12.setInstitution("ResultDescription(id=-1, testId=null, testName=null, mark=0)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        com.vntu.marenko.ualearning.server.model.Test test1 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int2 = test1.getId();
        java.lang.Integer int3 = test1.getId();
        test1.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int6 = test1.getCompletedCounter();
        java.lang.Integer int7 = test1.getCompletedCounter();
        java.lang.Integer int8 = test1.getCompletedCounter();
        java.lang.String str9 = test1.getDescriptionTest();
        test1.setId((java.lang.Integer) 0);
        boolean boolean12 = tagDto0.equals((java.lang.Object) 0);
        com.vntu.marenko.ualearning.server.model.Post post13 = new com.vntu.marenko.ualearning.server.model.Post();
        post13.setText("");
        java.lang.String str16 = post13.toString();
        java.lang.Integer int17 = post13.getId();
        java.lang.String[] strArray42 = new java.lang.String[] { "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "LoginRequest(login=null, password=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))", "", "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)", "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)", "Question(id=null, text=null, answers=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "Result(id=null, user=null, test=null, submitted=false, answers=null)", "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)", "ResultDescription(id=null, testId=100, testName=null, mark=0)", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)", "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)", "Question(id=null, text=null, answers=null)", "CreatePostRequest(text=null, username=null)", "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)", "QuestionDto(id=10, text=null, answers=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        post13.setLikes((java.util.List<java.lang.String>) strList43);
        boolean boolean46 = tagDto0.equals((java.lang.Object) post13);
        int int47 = tagDto0.getId();
        java.lang.String str48 = tagDto0.toString();
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str9, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str16, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "TagDto(id=0, name=null)" + "'", str48, "TagDto(id=0, name=null)");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        long long2 = resultDescription0.getMark();
        resultDescription0.setMark((long) (byte) 0);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto5.setInstitution("");
        java.lang.String str8 = userDto5.getInstitution();
        java.lang.String str9 = userDto5.getInstitution();
        java.lang.String str10 = userDto5.getSurname();
        userDto5.setRating((int) (byte) -1);
        boolean boolean13 = resultDescription0.equals((java.lang.Object) userDto5);
        resultDescription0.setTestName("AnswerDto(id=0, text=Tag(id=null, name=null))");
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList5 = test3.getTags();
        test3.setCompletedCounter((java.lang.Integer) 0);
        com.vntu.marenko.ualearning.server.model.Test test8 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray9 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList10 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList10, tagArray9);
        test8.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList10);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray13 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList14 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList14, tagArray13);
        test8.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList14);
        java.lang.String str17 = test8.getNameTest();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int23 = test18.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question24 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int25 = question24.getId();
        java.lang.Integer int26 = question24.getId();
        question24.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.model.Question question29 = new com.vntu.marenko.ualearning.server.model.Question();
        question29.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.Integer int32 = question29.getId();
        com.vntu.marenko.ualearning.server.model.Question question33 = new com.vntu.marenko.ualearning.server.model.Question();
        question33.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str36 = question33.getText();
        com.vntu.marenko.ualearning.server.model.Question question37 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int38 = question37.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList39 = null;
        question37.setAnswers(answerList39);
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int46 = test41.getCompletedCounter();
        java.lang.Integer int47 = test41.getCompletedCounter();
        java.lang.Integer int48 = test41.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question49 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str50 = question49.getText();
        java.lang.Integer int51 = question49.getId();
        boolean boolean52 = test41.equals((java.lang.Object) question49);
        java.lang.String str53 = question49.toString();
        com.vntu.marenko.ualearning.server.model.Question question54 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int55 = question54.getId();
        java.lang.Integer int56 = question54.getId();
        com.vntu.marenko.ualearning.server.model.Question question57 = new com.vntu.marenko.ualearning.server.model.Question();
        question57.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Question question60 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str61 = question60.getText();
        java.lang.Integer int62 = question60.getId();
        com.vntu.marenko.ualearning.server.model.Question[] questionArray63 = new com.vntu.marenko.ualearning.server.model.Question[] { question24, question29, question33, question37, question49, question54, question57, question60 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Question> questionList64 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Question>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Question>) questionList64, questionArray63);
        test18.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList64);
        test8.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList64);
        test3.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList64);
        test3.setCompletedCounter((java.lang.Integer) 52);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(tagList5);
        org.junit.Assert.assertNotNull(tagArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(tagArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str36, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Question(id=null, text=null, answers=null)" + "'", str53, "Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(questionArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        com.vntu.marenko.ualearning.server.model.Answer answer1 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer1.setText("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        boolean boolean4 = answer1.isCorrect();
        boolean boolean5 = question0.equals((java.lang.Object) answer1);
        java.lang.Integer int6 = question0.getId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.toString();
        userRequest0.setLogin("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        java.lang.String str6 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str3, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Result(id=null, user=null, test=null, submitted=false, answers=null)" + "'", str6, "Result(id=null, user=null, test=null, submitted=false, answers=null)");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.Integer int9 = resultDescription4.getTestId();
        long long10 = resultDescription4.getMark();
        com.vntu.marenko.ualearning.server.model.Result result11 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int12 = result11.getId();
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int14 = test13.getId();
        java.lang.Integer int15 = test13.getId();
        result11.setTest(test13);
        boolean boolean17 = result11.isSubmitted();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription4, result11, mappingContext18);
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription20 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription20.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription20.setId((-1));
        testDescription20.setNameTest("TagDto(id=0, name=null)");
        java.lang.String str27 = testDescription20.toString();
        com.vntu.marenko.ualearning.server.model.Result result28 = new com.vntu.marenko.ualearning.server.model.Result();
        result28.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user31 = new com.vntu.marenko.ualearning.server.model.User();
        user31.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test34 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean35 = user31.equals((java.lang.Object) test34);
        user31.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result28.setUser(user31);
        boolean boolean39 = testDescription20.equals((java.lang.Object) user31);
        result11.setUser(user31);
        java.lang.String str41 = result11.toString();
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str27, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Result(id=null, user=User(login=null, password=null, name=null, surname=, age=0, institution=null, email=Post(id=null, text=, timestamp=null, user=null, likes=null), rating=0), test=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), submitted=false, answers=null)" + "'", str41, "Result(id=null, user=User(login=null, password=null, name=null, surname=, age=0, institution=null, email=Post(id=null, text=, timestamp=null, user=null, likes=null), rating=0), test=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag0.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType12 = submitResultRequestToDomainMapper9.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade13);
        boolean boolean15 = user3.equals((java.lang.Object) submitResultRequestToDomainMapper9);
        com.vntu.marenko.ualearning.server.model.Result result16 = new com.vntu.marenko.ualearning.server.model.Result();
        result16.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user19 = new com.vntu.marenko.ualearning.server.model.User();
        user19.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test22 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean23 = user19.equals((java.lang.Object) test22);
        user19.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result16.setUser(user19);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest27 = null;
        ma.glasnost.orika.MappingContext mappingContext28 = null;
        submitResultRequestToDomainMapper9.mapBtoA(result16, submitResultRequest27, mappingContext28);
        com.vntu.marenko.ualearning.server.model.User user30 = result16.getUser();
        com.vntu.marenko.ualearning.server.model.User user31 = result16.getUser();
        boolean boolean32 = tag0.equals((java.lang.Object) result16);
        java.lang.Integer int33 = tag0.getId();
        java.lang.String str34 = tag0.getName();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType37 = createPostRequestToPostMapper36.getBType();
        com.vntu.marenko.ualearning.server.model.Post post38 = new com.vntu.marenko.ualearning.server.model.Post();
        post38.setText("");
        java.lang.String str41 = post38.toString();
        post38.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest44 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest44.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext47 = null;
        createPostRequestToPostMapper36.mapBtoA(post38, createPostRequest44, mappingContext47);
        com.vntu.marenko.ualearning.server.model.Post post49 = new com.vntu.marenko.ualearning.server.model.Post();
        post49.setText("");
        java.lang.String str52 = post49.toString();
        java.lang.Integer int53 = post49.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest54 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str55 = createPostRequest54.getUsername();
        java.lang.String str56 = createPostRequest54.toString();
        ma.glasnost.orika.MappingContext mappingContext57 = null;
        createPostRequestToPostMapper36.mapBtoA(post49, createPostRequest54, mappingContext57);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper59 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType60 = createPostRequestToPostMapper59.getBType();
        com.vntu.marenko.ualearning.server.model.Post post61 = new com.vntu.marenko.ualearning.server.model.Post();
        post61.setText("");
        java.lang.String str64 = post61.toString();
        post61.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest67 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest67.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext70 = null;
        createPostRequestToPostMapper59.mapBtoA(post61, createPostRequest67, mappingContext70);
        ma.glasnost.orika.MappingContext mappingContext72 = null;
        createPostRequestToPostMapper35.mapAtoB(createPostRequest54, post61, mappingContext72);
        com.vntu.marenko.ualearning.server.model.User user74 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str75 = user74.getEmail();
        java.lang.String str76 = user74.getSurname();
        user74.setEmail("Answer(id=null, text=null, correct=false)");
        boolean boolean80 = user74.equals((java.lang.Object) (byte) -1);
        boolean boolean81 = createPostRequest54.equals((java.lang.Object) user74);
        boolean boolean82 = tag0.equals((java.lang.Object) user74);
        user74.setLogin("User(login=null, password=null, name=null, surname=null, age=0, institution=null, email=Answer(id=null, text=null, correct=false), rating=0)");
        org.junit.Assert.assertNotNull(submitResultRequestType12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(user30);
        org.junit.Assert.assertNotNull(user31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str34, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNotNull(postType37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str41, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str52, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str56, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str64, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        user0.setEmail("TagDto(id=0, name=null)");
        user0.setRating((long) (short) 10);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl21 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository20);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.UserController userController38 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl21, mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.TestController testController39 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository40 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl41 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository40);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository57 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository60 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto61 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl62 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean63 = answerDto61.equals((java.lang.Object) markComputerImpl62);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl64 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository58, mapperFacade59, userRepository60, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl62);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl65 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository42, mapperFacade56, userRepository57, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl62);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository67 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl68 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository66, tagRepository67);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper69 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig70 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl71 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository72 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository73 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository74 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper75 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository72, testRepository73, answerRepository74);
        ma.glasnost.orika.MapperFacade mapperFacade76 = null;
        submitResultRequestToDomainMapper75.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType78 = submitResultRequestToDomainMapper75.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper79 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper80 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean81 = createPostRequestToPostMapper80.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper82 = null;
        ma.glasnost.orika.MapperFacade mapperFacade83 = mapperConfig70.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl71, submitResultRequestToDomainMapper75, resultToDescriptionMapper79, createPostRequestToPostMapper80, postToDtoMapper82);
        postToDtoMapper69.setMapperFacade(mapperFacade83);
        com.vntu.marenko.ualearning.server.controller.TestController testController85 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl68, mapperFacade83);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController86 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl65, mapperFacade83);
        com.vntu.marenko.ualearning.server.controller.UserController userController87 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl41, mapperFacade83);
        com.vntu.marenko.ualearning.server.controller.TestController testController88 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList89 = testController88.getTestDescriptions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(resultType78);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
        org.junit.Assert.assertNotNull(mapperFacade83);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean7 = user3.equals((java.lang.Object) test6);
        user3.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result0.setUser(user3);
        com.vntu.marenko.ualearning.server.model.Question question11 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int12 = question11.getId();
        java.lang.Integer int13 = question11.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer14 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer15 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer15.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray18 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer14, answer15 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList19 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList19, answerArray18);
        question11.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList19);
        result0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList19);
        com.vntu.marenko.ualearning.server.model.Test test23 = result0.getTest();
        com.vntu.marenko.ualearning.server.model.User user24 = new com.vntu.marenko.ualearning.server.model.User();
        user24.setSurname("");
        user24.setRating((long) (short) -1);
        result0.setUser(user24);
        java.lang.String str30 = user24.toString();
        java.lang.String str31 = user24.getInstitution();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig33 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper43 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean44 = createPostRequestToPostMapper43.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper45 = null;
        ma.glasnost.orika.MapperFacade mapperFacade46 = mapperConfig33.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper43, postToDtoMapper45);
        postToDtoMapper32.setMapperFacade(mapperFacade46);
        java.lang.Boolean boolean48 = postToDtoMapper32.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto49 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto49.setId(0);
        postDto49.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        postDto49.setTimestamp("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        postDto49.setTimestamp("AnswerDto(id=10, text=null)");
        com.vntu.marenko.ualearning.server.model.Post post58 = new com.vntu.marenko.ualearning.server.model.Post();
        post58.setText("");
        java.lang.Integer int61 = post58.getId();
        java.util.Date date62 = post58.getTimestamp();
        java.util.List<java.lang.String> strList63 = post58.getLikes();
        ma.glasnost.orika.MappingContext mappingContext64 = null;
        postToDtoMapper32.mapBtoA(postDto49, post58, mappingContext64);
        boolean boolean66 = user24.equals((java.lang.Object) postDto49);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(answerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(test23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)" + "'", str30, "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNotNull(mapperFacade46);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(date62);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        boolean boolean4 = tagDto0.equals((java.lang.Object) (-1L));
        int int5 = tagDto0.getId();
        int int6 = tagDto0.getId();
        int int7 = tagDto0.getId();
        int int8 = tagDto0.getId();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (byte) -1);
        int int3 = userDto0.getAge();
        userDto0.setInstitution("TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))");
        java.lang.String str6 = userDto0.getName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        com.vntu.marenko.ualearning.server.model.Post post13 = new com.vntu.marenko.ualearning.server.model.Post();
        post13.setText("");
        java.lang.String str16 = post13.toString();
        java.lang.Integer int17 = post13.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest18 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str19 = createPostRequest18.getUsername();
        java.lang.String str20 = createPostRequest18.toString();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper0.mapBtoA(post13, createPostRequest18, mappingContext21);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository23 = null;
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer26 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl27 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository23, mapperFacade24, userRepository25, markComputer26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean29 = createPostRequestToPostMapper28.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig30 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl31 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository32 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository34 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper35 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository32, testRepository33, answerRepository34);
        ma.glasnost.orika.MapperFacade mapperFacade36 = null;
        submitResultRequestToDomainMapper35.setMapperFacade(mapperFacade36);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType38 = submitResultRequestToDomainMapper35.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper39 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper42 = null;
        ma.glasnost.orika.MapperFacade mapperFacade43 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl31, submitResultRequestToDomainMapper35, resultToDescriptionMapper39, createPostRequestToPostMapper40, postToDtoMapper42);
        createPostRequestToPostMapper28.setMapperFacade(mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController45 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl27, mapperFacade43);
        com.vntu.marenko.ualearning.server.service.UserService userService46 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController63 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService46, mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController64 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl27, mapperFacade61);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade61);
        java.lang.Boolean boolean66 = createPostRequestToPostMapper0.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType67 = createPostRequestToPostMapper0.getAType();
        com.vntu.marenko.ualearning.server.model.Post post68 = new com.vntu.marenko.ualearning.server.model.Post();
        post68.setText("");
        java.lang.Integer int71 = post68.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest72 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        ma.glasnost.orika.MappingContext mappingContext73 = null;
        createPostRequestToPostMapper0.mapBtoA(post68, createPostRequest72, mappingContext73);
        ma.glasnost.orika.Mapper[] mapperArray76 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray77 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray76;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper0.setUsedMappers(objMapperArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str16, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str20, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(resultType38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(mapperFacade43);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(createPostRequestType67);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(mapperArray76);
        org.junit.Assert.assertNotNull(objMapperArray77);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer0 = null;
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper(markComputer0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType2 = resultToDescriptionMapper1.getBType();
        org.junit.Assert.assertNotNull(resultDescriptionType2);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.model.User user78 = new com.vntu.marenko.ualearning.server.model.User();
        user78.setSurname("");
        user78.setAge((int) '4');
        user78.setName("LoginRequest(login=null, password=null)");
        user78.setEmail("CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = userServiceImpl1.register(user78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        createPostRequest0.setText("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        java.lang.String str6 = createPostRequest0.toString();
        createPostRequest0.setText("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "CreatePostRequest(text=CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null), username=null)" + "'", str6, "CreatePostRequest(text=CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null), username=null)");
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str1 = question0.getText();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService3 = null;
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController5 = new com.vntu.marenko.ualearning.server.controller.TestController(testService3, mapperFacade4);
        boolean boolean6 = question0.equals((java.lang.Object) testController5);
        java.lang.Integer int7 = question0.getId();
        question0.setText("CreatePostRequest(text=CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null), username=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper1.getBType();
        java.lang.Boolean boolean18 = postToDtoMapper1.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper19 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType20 = createPostRequestToPostMapper19.getBType();
        com.vntu.marenko.ualearning.server.model.Post post21 = new com.vntu.marenko.ualearning.server.model.Post();
        post21.setText("");
        java.lang.String str24 = post21.toString();
        post21.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest27 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest27.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        createPostRequestToPostMapper19.mapBtoA(post21, createPostRequest27, mappingContext30);
        com.vntu.marenko.ualearning.server.model.Post post32 = new com.vntu.marenko.ualearning.server.model.Post();
        post32.setText("");
        java.lang.String str35 = post32.toString();
        java.lang.Integer int36 = post32.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest37 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str38 = createPostRequest37.getUsername();
        java.lang.String str39 = createPostRequest37.toString();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper19.mapBtoA(post32, createPostRequest37, mappingContext40);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository44 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper45 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository42, testRepository43, answerRepository44);
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade46);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType48 = submitResultRequestToDomainMapper45.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper49 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig50 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl51 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository52 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository53 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository54 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper55 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository52, testRepository53, answerRepository54);
        ma.glasnost.orika.MapperFacade mapperFacade56 = null;
        submitResultRequestToDomainMapper55.setMapperFacade(mapperFacade56);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType58 = submitResultRequestToDomainMapper55.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper59 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper60 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean61 = createPostRequestToPostMapper60.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = null;
        ma.glasnost.orika.MapperFacade mapperFacade63 = mapperConfig50.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl51, submitResultRequestToDomainMapper55, resultToDescriptionMapper59, createPostRequestToPostMapper60, postToDtoMapper62);
        postToDtoMapper49.setMapperFacade(mapperFacade63);
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade63);
        createPostRequestToPostMapper19.setMapperFacade(mapperFacade63);
        postToDtoMapper1.setMapperFacade(mapperFacade63);
        com.vntu.marenko.ualearning.server.controller.UserController userController68 = new com.vntu.marenko.ualearning.server.controller.UserController(userService0, mapperFacade63);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.UserDto userDto70 = userController68.getUser("TagDto(id=97, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0))");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(postType20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str24, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str35, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str39, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(resultType48);
        org.junit.Assert.assertNotNull(resultType58);
        org.junit.Assert.assertEquals("'" + boolean61 + "' != '" + false + "'", boolean61, false);
        org.junit.Assert.assertNotNull(mapperFacade63);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.service.UserService userService5 = null;
        com.vntu.marenko.ualearning.server.service.UserService userService6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository7, tagRepository8);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper10 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig11 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository15 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper16 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository13, testRepository14, answerRepository15);
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        submitResultRequestToDomainMapper16.setMapperFacade(mapperFacade17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper16.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper20 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper21 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean22 = createPostRequestToPostMapper21.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper23 = null;
        ma.glasnost.orika.MapperFacade mapperFacade24 = mapperConfig11.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl12, submitResultRequestToDomainMapper16, resultToDescriptionMapper20, createPostRequestToPostMapper21, postToDtoMapper23);
        postToDtoMapper10.setMapperFacade(mapperFacade24);
        com.vntu.marenko.ualearning.server.controller.TestController testController26 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl9, mapperFacade24);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig33 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper43 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean44 = createPostRequestToPostMapper43.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper45 = null;
        ma.glasnost.orika.MapperFacade mapperFacade46 = mapperConfig33.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper43, postToDtoMapper45);
        postToDtoMapper32.setMapperFacade(mapperFacade46);
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade46);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository49 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl50 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository49);
        com.vntu.marenko.ualearning.server.controller.PostController postController51 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade46, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl50);
        com.vntu.marenko.ualearning.server.controller.PostController postController52 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade24, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl50);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController53 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService6, mapperFacade24);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController54 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService5, mapperFacade24);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType56 = submitResultRequestToDomainMapper3.getAType();
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNotNull(mapperFacade24);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNotNull(mapperFacade46);
        org.junit.Assert.assertNotNull(submitResultRequestType56);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int1 = submitResultRequest0.getTestId();
        submitResultRequest0.setTestId((int) (byte) -1);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.String str9 = resultDescription4.toString();
        java.lang.String str10 = resultDescription4.toString();
        boolean boolean11 = submitResultRequest0.equals((java.lang.Object) resultDescription4);
        resultDescription4.setTestName("AnswerDto(id=0, text=Tag(id=null, name=null))");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str9, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str10, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository8);
        boolean boolean10 = userRequest0.equals((java.lang.Object) postServiceImpl9);
        userRequest0.setAge((int) (byte) 1);
        userRequest0.setAge((int) (byte) 100);
        userRequest0.setSurname("QuestionDto(id=0, text=null, answers=null)");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig19 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.MapperFacade mapperFacade25 = null;
        submitResultRequestToDomainMapper24.setMapperFacade(mapperFacade25);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType27 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean30 = createPostRequestToPostMapper29.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper31 = null;
        ma.glasnost.orika.MapperFacade mapperFacade32 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper31);
        createPostRequestToPostMapper17.setMapperFacade(mapperFacade32);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository36 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper37 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository34, testRepository35, answerRepository36);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType38 = submitResultRequestToDomainMapper37.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper39 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig40 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl41 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository44 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper45 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository42, testRepository43, answerRepository44);
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade46);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType48 = submitResultRequestToDomainMapper45.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper49 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper50 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean51 = createPostRequestToPostMapper50.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper52 = null;
        ma.glasnost.orika.MapperFacade mapperFacade53 = mapperConfig40.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl41, submitResultRequestToDomainMapper45, resultToDescriptionMapper49, createPostRequestToPostMapper50, postToDtoMapper52);
        postToDtoMapper39.setMapperFacade(mapperFacade53);
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade53);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository56 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl57 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository56);
        com.vntu.marenko.ualearning.server.controller.PostController postController58 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade53, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl57);
        com.vntu.marenko.ualearning.server.controller.PostController postController59 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade32, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl57);
        boolean boolean60 = userRequest0.equals((java.lang.Object) postServiceImpl57);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post62 = postServiceImpl57.getPost((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(resultType27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(mapperFacade32);
        org.junit.Assert.assertNotNull(resultType38);
        org.junit.Assert.assertNotNull(resultType48);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(mapperFacade53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.Integer int1 = answer0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        test2.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        test2.setId((java.lang.Integer) 1);
        boolean boolean9 = answer0.equals((java.lang.Object) test2);
        java.lang.String str10 = test2.getNameTest();
        com.vntu.marenko.ualearning.server.model.Test test11 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int12 = test11.getId();
        java.lang.Integer int13 = test11.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray15 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList16 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList16, tagArray15);
        test14.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList16);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray19 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList20 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList20, tagArray19);
        test14.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList20);
        java.lang.String str23 = test14.getNameTest();
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int25 = test24.getId();
        java.lang.Integer int26 = test24.getId();
        test24.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int29 = test24.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question30 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int31 = question30.getId();
        java.lang.Integer int32 = question30.getId();
        question30.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.model.Question question35 = new com.vntu.marenko.ualearning.server.model.Question();
        question35.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.Integer int38 = question35.getId();
        com.vntu.marenko.ualearning.server.model.Question question39 = new com.vntu.marenko.ualearning.server.model.Question();
        question39.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str42 = question39.getText();
        com.vntu.marenko.ualearning.server.model.Question question43 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int44 = question43.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList45 = null;
        question43.setAnswers(answerList45);
        com.vntu.marenko.ualearning.server.model.Test test47 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int48 = test47.getId();
        java.lang.Integer int49 = test47.getId();
        test47.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int52 = test47.getCompletedCounter();
        java.lang.Integer int53 = test47.getCompletedCounter();
        java.lang.Integer int54 = test47.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question55 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str56 = question55.getText();
        java.lang.Integer int57 = question55.getId();
        boolean boolean58 = test47.equals((java.lang.Object) question55);
        java.lang.String str59 = question55.toString();
        com.vntu.marenko.ualearning.server.model.Question question60 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int61 = question60.getId();
        java.lang.Integer int62 = question60.getId();
        com.vntu.marenko.ualearning.server.model.Question question63 = new com.vntu.marenko.ualearning.server.model.Question();
        question63.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Question question66 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str67 = question66.getText();
        java.lang.Integer int68 = question66.getId();
        com.vntu.marenko.ualearning.server.model.Question[] questionArray69 = new com.vntu.marenko.ualearning.server.model.Question[] { question30, question35, question39, question43, question55, question60, question63, question66 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Question> questionList70 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Question>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Question>) questionList70, questionArray69);
        test24.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList70);
        test14.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList70);
        test11.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList70);
        test2.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList70);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(tagArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(tagArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str42, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Question(id=null, text=null, answers=null)" + "'", str59, "Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(questionArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        int int3 = tagDto0.getId();
        tagDto0.setId((int) (short) -1);
        tagDto0.setName("AnswerDto(id=0, text=hi!)");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        com.vntu.marenko.ualearning.server.model.User user9 = new com.vntu.marenko.ualearning.server.model.User();
        user9.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType18 = submitResultRequestToDomainMapper15.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade19);
        boolean boolean21 = user9.equals((java.lang.Object) submitResultRequestToDomainMapper15);
        com.vntu.marenko.ualearning.server.model.Result result22 = new com.vntu.marenko.ualearning.server.model.Result();
        result22.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test28 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean29 = user25.equals((java.lang.Object) test28);
        user25.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result22.setUser(user25);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest33 = null;
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        submitResultRequestToDomainMapper15.mapBtoA(result22, submitResultRequest33, mappingContext34);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest36.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int39 = submitResultRequest36.getTestId();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result22, submitResultRequest36, mappingContext40);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto42 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto42.setText("hi!");
        java.lang.String str45 = answerDto42.getText();
        boolean boolean46 = submitResultRequest36.equals((java.lang.Object) answerDto42);
        submitResultRequest36.setUserLogin("hi!");
        java.util.List<java.lang.Integer> intList49 = submitResultRequest36.getAnswers();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(submitResultRequestType18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(intList49);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.Integer int54 = testDto0.getCompletedCounter();
        testDto0.setDescriptionTest("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        java.lang.String str57 = testDto0.getDescriptionTest();
        java.lang.String str58 = testDto0.getDescriptionTest();
        testDto0.setDescriptionTest("CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=ResultDescription(id=0, testId=null, testName=null, mark=1))");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str57, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str58, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int1 = submitResultRequest0.getTestId();
        submitResultRequest0.setTestId((int) (byte) -1);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.String str9 = resultDescription4.toString();
        java.lang.String str10 = resultDescription4.toString();
        boolean boolean11 = submitResultRequest0.equals((java.lang.Object) resultDescription4);
        java.lang.String str12 = submitResultRequest0.toString();
        int int13 = submitResultRequest0.getTestId();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription14 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription14.setId((java.lang.Integer) 0);
        resultDescription14.setTestName("hi!");
        java.lang.String str19 = resultDescription14.getTestName();
        java.lang.Integer int20 = resultDescription14.getTestId();
        long long21 = resultDescription14.getMark();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig22 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl23 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository26 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper27 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository24, testRepository25, answerRepository26);
        ma.glasnost.orika.MapperFacade mapperFacade28 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType30 = submitResultRequestToDomainMapper27.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper31 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper32 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean33 = createPostRequestToPostMapper32.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper34 = null;
        ma.glasnost.orika.MapperFacade mapperFacade35 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl23, submitResultRequestToDomainMapper27, resultToDescriptionMapper31, createPostRequestToPostMapper32, postToDtoMapper34);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post39 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper32.mapAtoB(createPostRequest36, post39, mappingContext40);
        boolean boolean42 = resultDescription14.equals((java.lang.Object) createPostRequestToPostMapper32);
        resultDescription14.setMark((long) 100);
        boolean boolean45 = submitResultRequest0.equals((java.lang.Object) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str9, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str10, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SubmitResultRequest(userLogin=null, testId=-1, answers=null)" + "'", str12, "SubmitResultRequest(userLogin=null, testId=-1, answers=null)");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(resultType30);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(mapperFacade35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        java.lang.String str2 = createPostRequest0.toString();
        java.lang.String str3 = createPostRequest0.toString();
        createPostRequest0.setText("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=1, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str2, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str3, "CreatePostRequest(text=null, username=null)");
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        com.vntu.marenko.ualearning.server.model.User user26 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str27 = user26.getEmail();
        java.lang.String str28 = user26.getSurname();
        result7.setUser(user26);
        com.vntu.marenko.ualearning.server.model.User user30 = result7.getUser();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(user30);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers(objMapperArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (short) 10);
        java.lang.String str3 = userDto0.getEmail();
        int int4 = userDto0.getAge();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        user5.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType14 = submitResultRequestToDomainMapper11.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade15);
        boolean boolean17 = user5.equals((java.lang.Object) submitResultRequestToDomainMapper11);
        com.vntu.marenko.ualearning.server.model.Result result18 = new com.vntu.marenko.ualearning.server.model.Result();
        result18.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user21 = new com.vntu.marenko.ualearning.server.model.User();
        user21.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean25 = user21.equals((java.lang.Object) test24);
        user21.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result18.setUser(user21);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest29 = null;
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        submitResultRequestToDomainMapper11.mapBtoA(result18, submitResultRequest29, mappingContext30);
        com.vntu.marenko.ualearning.server.model.User user32 = result18.getUser();
        com.vntu.marenko.ualearning.server.model.User user33 = result18.getUser();
        result18.setId((java.lang.Integer) 100);
        boolean boolean36 = userDto0.equals((java.lang.Object) result18);
        java.lang.String str37 = userDto0.getInstitution();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(submitResultRequestType14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNotNull(user33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        java.lang.String str6 = userRequest0.getLogin();
        java.lang.String str7 = userRequest0.getName();
        java.lang.String str8 = userRequest0.toString();
        java.lang.String str9 = userRequest0.getLogin();
        java.lang.Object obj10 = null;
        boolean boolean11 = userRequest0.equals(obj10);
        userRequest0.setSurname("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str8, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType2 = createPostRequestToPostMapper1.getBType();
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        post3.setText("");
        java.lang.String str6 = post3.toString();
        post3.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest9 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest9.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        createPostRequestToPostMapper1.mapBtoA(post3, createPostRequest9, mappingContext12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.String str17 = post14.toString();
        java.lang.Integer int18 = post14.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str20 = createPostRequest19.getUsername();
        java.lang.String str21 = createPostRequest19.toString();
        ma.glasnost.orika.MappingContext mappingContext22 = null;
        createPostRequestToPostMapper1.mapBtoA(post14, createPostRequest19, mappingContext22);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest19, post26, mappingContext37);
        java.lang.String str39 = createPostRequest19.toString();
        org.junit.Assert.assertNotNull(postType2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str17, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str21, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str39, "CreatePostRequest(text=null, username=null)");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        java.lang.String[] strArray6 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        postDto0.setLikes((java.util.List<java.lang.String>) strList7);
        postDto0.setTimestamp("Question(id=null, text=null, answers=null)");
        int int12 = postDto0.getId();
        postDto0.setText("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        resultDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto5.setRating((int) (byte) -1);
        userDto5.setLogin("LoginRequest(login=null, password=null)");
        resultDto0.setUser(userDto5);
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto11 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto11.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto14 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto15 = null;
        resultDto14.setTest(testDto15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        int int20 = answerDto17.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto21 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto21.setText("hi!");
        java.lang.String str24 = answerDto21.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto25 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean27 = answerDto25.equals((java.lang.Object) markComputerImpl26);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto28 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean30 = answerDto28.equals((java.lang.Object) markComputerImpl29);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray31 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto17, answerDto21, answerDto25, answerDto28 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList32 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32, answerDtoArray31);
        resultDto14.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32);
        questionDto11.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32);
        com.vntu.marenko.ualearning.server.model.User user36 = new com.vntu.marenko.ualearning.server.model.User();
        user36.setEmail("hi!");
        user36.setSurname("hi!");
        user36.setInstitution("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        boolean boolean43 = questionDto11.equals((java.lang.Object) user36);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList44 = questionDto11.getAnswers();
        resultDto0.setAnswers(answerDtoList44);
        resultDto0.setId((int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(answerDtoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(answerDtoList44);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        testDto0.setNameTest("ResultDescription(id=-1, testId=null, testName=null, mark=0)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper3 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = resultToDescriptionMapper3.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper3.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType6 = resultToDescriptionMapper3.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType7 = resultToDescriptionMapper3.getAType();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository8);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper11 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig12 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl13 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository16 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper17 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository14, testRepository15, answerRepository16);
        ma.glasnost.orika.MapperFacade mapperFacade18 = null;
        submitResultRequestToDomainMapper17.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper17.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper21 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = null;
        ma.glasnost.orika.MapperFacade mapperFacade25 = mapperConfig12.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl13, submitResultRequestToDomainMapper17, resultToDescriptionMapper21, createPostRequestToPostMapper22, postToDtoMapper24);
        postToDtoMapper11.setMapperFacade(mapperFacade25);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig28 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType36 = submitResultRequestToDomainMapper33.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper37 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper38 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean39 = createPostRequestToPostMapper38.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper40 = null;
        ma.glasnost.orika.MapperFacade mapperFacade41 = mapperConfig28.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl29, submitResultRequestToDomainMapper33, resultToDescriptionMapper37, createPostRequestToPostMapper38, postToDtoMapper40);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl42 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository45 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper46 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository43, testRepository44, answerRepository45);
        ma.glasnost.orika.MapperFacade mapperFacade47 = null;
        submitResultRequestToDomainMapper46.setMapperFacade(mapperFacade47);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType49 = submitResultRequestToDomainMapper46.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper50 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig51 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl52 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository53 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository54 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository55 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper56 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository53, testRepository54, answerRepository55);
        ma.glasnost.orika.MapperFacade mapperFacade57 = null;
        submitResultRequestToDomainMapper56.setMapperFacade(mapperFacade57);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType59 = submitResultRequestToDomainMapper56.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper60 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper61 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean62 = createPostRequestToPostMapper61.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper63 = null;
        ma.glasnost.orika.MapperFacade mapperFacade64 = mapperConfig51.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl52, submitResultRequestToDomainMapper56, resultToDescriptionMapper60, createPostRequestToPostMapper61, postToDtoMapper63);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper65 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade66 = mapperConfig28.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl42, submitResultRequestToDomainMapper46, resultToDescriptionMapper50, createPostRequestToPostMapper61, postToDtoMapper65);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl67 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository10, mapperFacade25, userRepository27, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl42);
        com.vntu.marenko.ualearning.server.controller.UserController userController68 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl9, mapperFacade25);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper69 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig70 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl71 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository72 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository73 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository74 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper75 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository72, testRepository73, answerRepository74);
        ma.glasnost.orika.MapperFacade mapperFacade76 = null;
        submitResultRequestToDomainMapper75.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType78 = submitResultRequestToDomainMapper75.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper79 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper80 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean81 = createPostRequestToPostMapper80.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper82 = null;
        ma.glasnost.orika.MapperFacade mapperFacade83 = mapperConfig70.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl71, submitResultRequestToDomainMapper75, resultToDescriptionMapper79, createPostRequestToPostMapper80, postToDtoMapper82);
        postToDtoMapper69.setMapperFacade(mapperFacade83);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController85 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl9, mapperFacade83);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository86 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl87 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository86);
        com.vntu.marenko.ualearning.server.controller.PostController postController88 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade83, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl87);
        resultToDescriptionMapper3.setMapperFacade(mapperFacade83);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController90 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade83);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest91 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str92 = loginRequest91.toString();
        java.lang.String str93 = loginRequest91.getLogin();
        loginRequest91.setPassword("hi!");
        java.lang.String str96 = loginRequest91.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = authorisationController90.login(loginRequest91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertNotNull(resultDescriptionType6);
        org.junit.Assert.assertNotNull(resultType7);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(mapperFacade25);
        org.junit.Assert.assertNotNull(resultType36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(mapperFacade41);
        org.junit.Assert.assertNotNull(resultType49);
        org.junit.Assert.assertNotNull(resultType59);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNotNull(mapperFacade64);
        org.junit.Assert.assertNotNull(mapperFacade66);
        org.junit.Assert.assertNotNull(resultType78);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
        org.junit.Assert.assertNotNull(mapperFacade83);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str92, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "LoginRequest(login=null, password=hi!)" + "'", str96, "LoginRequest(login=null, password=hi!)");
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean7 = user3.equals((java.lang.Object) test6);
        user3.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result0.setUser(user3);
        int int11 = user3.getAge();
        user3.setLogin("");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto14 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto15 = null;
        resultDto14.setTest(testDto15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        int int20 = answerDto17.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto21 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto21.setText("hi!");
        java.lang.String str24 = answerDto21.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto25 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean27 = answerDto25.equals((java.lang.Object) markComputerImpl26);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto28 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean30 = answerDto28.equals((java.lang.Object) markComputerImpl29);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray31 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto17, answerDto21, answerDto25, answerDto28 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList32 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32, answerDtoArray31);
        resultDto14.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto35 = resultDto14.getTest();
        long long36 = resultDto14.getMark();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto37 = resultDto14.getTest();
        boolean boolean38 = user3.equals((java.lang.Object) resultDto14);
        boolean boolean39 = resultDto14.isSubmitted();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(answerDtoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(testDto35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(testDto37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository1 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig19 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.MapperFacade mapperFacade25 = null;
        submitResultRequestToDomainMapper24.setMapperFacade(mapperFacade25);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType27 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean30 = createPostRequestToPostMapper29.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper31 = null;
        ma.glasnost.orika.MapperFacade mapperFacade32 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper31);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl33 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository36 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper37 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository34, testRepository35, answerRepository36);
        ma.glasnost.orika.MapperFacade mapperFacade38 = null;
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade38);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType40 = submitResultRequestToDomainMapper37.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper41 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig42 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl43 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository46 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper47 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository44, testRepository45, answerRepository46);
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        submitResultRequestToDomainMapper47.setMapperFacade(mapperFacade48);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType50 = submitResultRequestToDomainMapper47.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper51 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper52 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean53 = createPostRequestToPostMapper52.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper54 = null;
        ma.glasnost.orika.MapperFacade mapperFacade55 = mapperConfig42.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl43, submitResultRequestToDomainMapper47, resultToDescriptionMapper51, createPostRequestToPostMapper52, postToDtoMapper54);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper56 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade57 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33, submitResultRequestToDomainMapper37, resultToDescriptionMapper41, createPostRequestToPostMapper52, postToDtoMapper56);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl58 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository1, mapperFacade16, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33);
        com.vntu.marenko.ualearning.server.controller.UserController userController59 = new com.vntu.marenko.ualearning.server.controller.UserController(userService0, mapperFacade16);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.UserDto userDto61 = userController59.getUser("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNotNull(resultType27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(mapperFacade32);
        org.junit.Assert.assertNotNull(resultType40);
        org.junit.Assert.assertNotNull(resultType50);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(mapperFacade55);
        org.junit.Assert.assertNotNull(mapperFacade57);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.Integer int9 = resultDescription4.getTestId();
        long long10 = resultDescription4.getMark();
        com.vntu.marenko.ualearning.server.model.Result result11 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int12 = result11.getId();
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int14 = test13.getId();
        java.lang.Integer int15 = test13.getId();
        result11.setTest(test13);
        boolean boolean17 = result11.isSubmitted();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription4, result11, mappingContext18);
        long long20 = resultDescription4.getMark();
        com.vntu.marenko.ualearning.server.dto.UserDto userDto21 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto21.setInstitution("");
        java.lang.String str24 = userDto21.getInstitution();
        boolean boolean26 = userDto21.equals((java.lang.Object) (byte) -1);
        userDto21.setAge((int) (short) 100);
        userDto21.setAge((int) (byte) 0);
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto31 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto31.setId((int) '#');
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList34 = questionDto31.getAnswers();
        boolean boolean35 = userDto21.equals((java.lang.Object) questionDto31);
        boolean boolean36 = resultDescription4.equals((java.lang.Object) boolean35);
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(answerDtoList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        java.lang.String str2 = userRequest0.getPassword();
        userRequest0.setEmail("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str5 = userRequest0.getSurname();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray1 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList2 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList2, tagArray1);
        test0.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList2);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray5 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList6 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList6, tagArray5);
        test0.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList6);
        java.lang.String str9 = test0.getNameTest();
        test0.setId((java.lang.Integer) (-1));
        test0.setDescriptionTest("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertNotNull(tagArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(tagArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.Integer int9 = resultDescription4.getTestId();
        long long10 = resultDescription4.getMark();
        com.vntu.marenko.ualearning.server.model.Result result11 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int12 = result11.getId();
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int14 = test13.getId();
        java.lang.Integer int15 = test13.getId();
        result11.setTest(test13);
        boolean boolean17 = result11.isSubmitted();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription4, result11, mappingContext18);
        long long20 = resultDescription4.getMark();
        resultDescription4.setTestId((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user1 = new com.vntu.marenko.ualearning.server.model.User();
        user1.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean5 = user1.equals((java.lang.Object) test4);
        result0.setUser(user1);
        com.vntu.marenko.ualearning.server.model.User user7 = result0.getUser();
        java.lang.Integer int8 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        test9.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int14 = test9.getCompletedCounter();
        java.lang.Integer int15 = test9.getCompletedCounter();
        java.lang.Integer int16 = test9.getCompletedCounter();
        java.lang.String str17 = test9.getDescriptionTest();
        boolean boolean18 = result0.equals((java.lang.Object) str17);
        com.vntu.marenko.ualearning.server.model.Test test19 = result0.getTest();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str17, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(test19);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType19 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType20 = postToDtoMapper0.getAType();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertNotNull(postType18);
        org.junit.Assert.assertNotNull(postDtoType19);
        org.junit.Assert.assertNotNull(postType20);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getPassword();
        userRequest0.setLogin("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        userRequest0.setPassword("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
        java.lang.String str8 = userRequest0.toString();
        userRequest0.setLogin("PostDto(id=0, text=hi!, timestamp=null, login=null, likes=[LoginRequest(login=null, password=null), CreatePostRequest(text=null, username=null), Answer(id=null, text=null, correct=false), User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)])");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UserRequest(login=TestDescription(id=-1, nameTest=TagDto(id=0, name=null)), password=QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null), name=null, surname=null, age=0, institution=null, email=null)" + "'", str8, "UserRequest(login=TestDescription(id=-1, nameTest=TagDto(id=0, name=null)), password=QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null), name=null, surname=null, age=0, institution=null, email=null)");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList2 = null;
        question0.setAnswers(answerList2);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType10 = submitResultRequestToDomainMapper7.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade11 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade11);
        com.vntu.marenko.ualearning.server.model.User user13 = new com.vntu.marenko.ualearning.server.model.User();
        user13.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType22 = submitResultRequestToDomainMapper19.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade23 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade23);
        boolean boolean25 = user13.equals((java.lang.Object) submitResultRequestToDomainMapper19);
        com.vntu.marenko.ualearning.server.model.Result result26 = new com.vntu.marenko.ualearning.server.model.Result();
        result26.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user29 = new com.vntu.marenko.ualearning.server.model.User();
        user29.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test32 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean33 = user29.equals((java.lang.Object) test32);
        user29.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result26.setUser(user29);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest37 = null;
        ma.glasnost.orika.MappingContext mappingContext38 = null;
        submitResultRequestToDomainMapper19.mapBtoA(result26, submitResultRequest37, mappingContext38);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest40 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest40.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int43 = submitResultRequest40.getTestId();
        ma.glasnost.orika.MappingContext mappingContext44 = null;
        submitResultRequestToDomainMapper7.mapBtoA(result26, submitResultRequest40, mappingContext44);
        com.vntu.marenko.ualearning.server.model.Question question46 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str47 = question46.getText();
        java.lang.Integer int48 = question46.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService49 = null;
        ma.glasnost.orika.MapperFacade mapperFacade50 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController51 = new com.vntu.marenko.ualearning.server.controller.TestController(testService49, mapperFacade50);
        boolean boolean52 = question46.equals((java.lang.Object) testController51);
        com.vntu.marenko.ualearning.server.model.Result result53 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int54 = result53.getId();
        com.vntu.marenko.ualearning.server.model.Test test55 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int56 = test55.getId();
        java.lang.Integer int57 = test55.getId();
        result53.setTest(test55);
        java.lang.Integer int59 = result53.getId();
        com.vntu.marenko.ualearning.server.model.Result result60 = new com.vntu.marenko.ualearning.server.model.Result();
        result60.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user63 = new com.vntu.marenko.ualearning.server.model.User();
        user63.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test66 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean67 = user63.equals((java.lang.Object) test66);
        user63.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result60.setUser(user63);
        com.vntu.marenko.ualearning.server.model.Question question71 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int72 = question71.getId();
        java.lang.Integer int73 = question71.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer74 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer75 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer75.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray78 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer74, answer75 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList79 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList79, answerArray78);
        question71.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList79);
        result60.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList79);
        result53.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList79);
        question46.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList79);
        result26.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList79);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList79);
        java.lang.String str87 = question0.toString();
        java.lang.Object obj88 = null;
        boolean boolean89 = question0.equals(obj88);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNotNull(submitResultRequestType10);
        org.junit.Assert.assertNotNull(submitResultRequestType22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(answerArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])" + "'", str87, "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription6 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription6.setId((java.lang.Integer) 0);
        resultDescription6.setTestName("hi!");
        java.lang.String str11 = resultDescription6.getTestName();
        boolean boolean12 = resultDto0.equals((java.lang.Object) str11);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto13 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str14 = userDto13.toString();
        java.lang.String str15 = userDto13.getLogin();
        int int16 = userDto13.getRating();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription17 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription17.setId((java.lang.Integer) 0);
        resultDescription17.setMark(1L);
        java.lang.String str22 = resultDescription17.toString();
        boolean boolean23 = userDto13.equals((java.lang.Object) str22);
        java.lang.String str24 = userDto13.getLogin();
        resultDto0.setUser(userDto13);
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str14, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str22, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl20 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository14, mapperFacade15, userRepository16, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType25 = submitResultRequestToDomainMapper24.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType30 = createPostRequestToPostMapper29.getBType();
        com.vntu.marenko.ualearning.server.model.Post post31 = new com.vntu.marenko.ualearning.server.model.Post();
        post31.setText("");
        java.lang.String str34 = post31.toString();
        post31.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest37 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest37.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper29.mapBtoA(post31, createPostRequest37, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Post post42 = new com.vntu.marenko.ualearning.server.model.Post();
        post42.setText("");
        java.lang.String str45 = post42.toString();
        java.lang.Integer int46 = post42.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str48 = createPostRequest47.getUsername();
        java.lang.String str49 = createPostRequest47.toString();
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        createPostRequestToPostMapper29.mapBtoA(post42, createPostRequest47, mappingContext50);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository52 = null;
        ma.glasnost.orika.MapperFacade mapperFacade53 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer55 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl56 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository52, mapperFacade53, userRepository54, markComputer55);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper57 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean58 = createPostRequestToPostMapper57.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig59 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl60 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository61 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository62 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository63 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper64 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository61, testRepository62, answerRepository63);
        ma.glasnost.orika.MapperFacade mapperFacade65 = null;
        submitResultRequestToDomainMapper64.setMapperFacade(mapperFacade65);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType67 = submitResultRequestToDomainMapper64.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper68 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper69 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean70 = createPostRequestToPostMapper69.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper71 = null;
        ma.glasnost.orika.MapperFacade mapperFacade72 = mapperConfig59.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl60, submitResultRequestToDomainMapper64, resultToDescriptionMapper68, createPostRequestToPostMapper69, postToDtoMapper71);
        createPostRequestToPostMapper57.setMapperFacade(mapperFacade72);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController74 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl56, mapperFacade72);
        createPostRequestToPostMapper29.setMapperFacade(mapperFacade72);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper76 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig77 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl78 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository79 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository80 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository81 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper82 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository79, testRepository80, answerRepository81);
        ma.glasnost.orika.MapperFacade mapperFacade83 = null;
        submitResultRequestToDomainMapper82.setMapperFacade(mapperFacade83);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType85 = submitResultRequestToDomainMapper82.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper86 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper87 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean88 = createPostRequestToPostMapper87.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper89 = null;
        ma.glasnost.orika.MapperFacade mapperFacade90 = mapperConfig77.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl78, submitResultRequestToDomainMapper82, resultToDescriptionMapper86, createPostRequestToPostMapper87, postToDtoMapper89);
        postToDtoMapper76.setMapperFacade(mapperFacade90);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType92 = postToDtoMapper76.getBType();
        java.lang.Boolean boolean93 = postToDtoMapper76.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade94 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType95 = postToDtoMapper76.getAType();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(resultType25);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertNotNull(postType30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str34, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str45, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str49, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(resultType67);
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + false + "'", boolean70, false);
        org.junit.Assert.assertNotNull(mapperFacade72);
        org.junit.Assert.assertNotNull(resultType85);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
        org.junit.Assert.assertNotNull(mapperFacade90);
        org.junit.Assert.assertNotNull(postDtoType92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
        org.junit.Assert.assertNotNull(mapperFacade94);
        org.junit.Assert.assertNotNull(postType95);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setInstitution("QuestionDto(id=10, text=null, answers=null)");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        boolean boolean15 = userRequest0.equals((java.lang.Object) submitResultRequestToDomainMapper11);
        java.lang.String str16 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        boolean boolean3 = resultDto0.isSubmitted();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto4 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str5 = questionDto4.getText();
        int int6 = questionDto4.getId();
        questionDto4.setId(10);
        java.lang.String str9 = questionDto4.toString();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl11 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean12 = answerDto10.equals((java.lang.Object) markComputerImpl11);
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto14.setText("hi!");
        java.lang.String str17 = answerDto14.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto18 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper19 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper20 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType21 = createPostRequestToPostMapper20.getBType();
        com.vntu.marenko.ualearning.server.model.Post post22 = new com.vntu.marenko.ualearning.server.model.Post();
        post22.setText("");
        java.lang.String str25 = post22.toString();
        post22.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest28 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest28.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext31 = null;
        createPostRequestToPostMapper20.mapBtoA(post22, createPostRequest28, mappingContext31);
        com.vntu.marenko.ualearning.server.model.Post post33 = new com.vntu.marenko.ualearning.server.model.Post();
        post33.setText("");
        java.lang.String str36 = post33.toString();
        java.lang.Integer int37 = post33.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest38 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str39 = createPostRequest38.getUsername();
        java.lang.String str40 = createPostRequest38.toString();
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper20.mapBtoA(post33, createPostRequest38, mappingContext41);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper43 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType44 = createPostRequestToPostMapper43.getBType();
        com.vntu.marenko.ualearning.server.model.Post post45 = new com.vntu.marenko.ualearning.server.model.Post();
        post45.setText("");
        java.lang.String str48 = post45.toString();
        post45.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest51 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest51.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext54 = null;
        createPostRequestToPostMapper43.mapBtoA(post45, createPostRequest51, mappingContext54);
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        createPostRequestToPostMapper19.mapAtoB(createPostRequest38, post45, mappingContext56);
        boolean boolean58 = answerDto18.equals((java.lang.Object) mappingContext56);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray59 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto10, answerDto14, answerDto18 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList60 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList60, answerDtoArray59);
        questionDto4.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList60);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList60);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str9, "QuestionDto(id=10, text=null, answers=null)");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(postType21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str25, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str36, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str40, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str48, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(answerDtoArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl20 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository19);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository21 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig39 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl40 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.MapperFacade mapperFacade45 = null;
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade45);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType47 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper48 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper49 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean50 = createPostRequestToPostMapper49.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper51 = null;
        ma.glasnost.orika.MapperFacade mapperFacade52 = mapperConfig39.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl40, submitResultRequestToDomainMapper44, resultToDescriptionMapper48, createPostRequestToPostMapper49, postToDtoMapper51);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl53 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository56 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper57 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository54, testRepository55, answerRepository56);
        ma.glasnost.orika.MapperFacade mapperFacade58 = null;
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade58);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType60 = submitResultRequestToDomainMapper57.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper61 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper76 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade77 = mapperConfig39.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl53, submitResultRequestToDomainMapper57, resultToDescriptionMapper61, createPostRequestToPostMapper72, postToDtoMapper76);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl78 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository21, mapperFacade36, userRepository38, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl53);
        com.vntu.marenko.ualearning.server.controller.UserController userController79 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl20, mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.UserController userController80 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade36);
        com.vntu.marenko.ualearning.server.model.User user81 = new com.vntu.marenko.ualearning.server.model.User();
        long long82 = user81.getRating();
        user81.setLogin("hi!");
        java.lang.Object obj85 = null;
        boolean boolean86 = user81.equals(obj85);
        java.lang.String str87 = user81.getEmail();
        int int88 = user81.getAge();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = userServiceImpl1.register(user81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType47);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(mapperFacade52);
        org.junit.Assert.assertNotNull(resultType60);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertNotNull(mapperFacade77);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Test test1 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray2 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList3 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList3, tagArray2);
        test1.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList3);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray6 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList7 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList7, tagArray6);
        test1.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList7);
        test0.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList7);
        test0.setId((java.lang.Integer) 97);
        org.junit.Assert.assertNotNull(tagArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tagArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (short) 10);
        java.lang.String str3 = userDto0.getEmail();
        int int4 = userDto0.getAge();
        java.lang.String str5 = userDto0.getInstitution();
        java.lang.String str6 = userDto0.getName();
        java.lang.String str7 = userDto0.getLogin();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType2 = createPostRequestToPostMapper0.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade3 = null;
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade3);
        java.lang.Boolean boolean5 = createPostRequestToPostMapper0.favorsExtension();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertNotNull(createPostRequestType2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType16 = postToDtoMapper0.getBType();
        java.lang.Boolean boolean17 = postToDtoMapper0.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType18 = postToDtoMapper0.getBType();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto19 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto19.setId(0);
        postDto19.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        postDto19.setTimestamp("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Test test26 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray27 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList28 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList28, tagArray27);
        test26.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList28);
        boolean boolean31 = postDto19.equals((java.lang.Object) test26);
        com.vntu.marenko.ualearning.server.model.Post post32 = new com.vntu.marenko.ualearning.server.model.Post();
        post32.setText("");
        java.lang.String str35 = post32.toString();
        java.lang.Integer int36 = post32.getId();
        java.util.Date date37 = null;
        post32.setTimestamp(date37);
        java.lang.Integer int39 = post32.getId();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        postToDtoMapper0.mapBtoA(postDto19, post32, mappingContext40);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType42 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType43 = postToDtoMapper0.getBType();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postDtoType16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(postDtoType18);
        org.junit.Assert.assertNotNull(tagArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str35, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(postDtoType42);
        org.junit.Assert.assertNotNull(postDtoType43);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper3.getBType();
        java.lang.Boolean boolean10 = submitResultRequestToDomainMapper3.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper3.getBType();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNotNull(resultType11);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        com.vntu.marenko.ualearning.server.model.User user12 = new com.vntu.marenko.ualearning.server.model.User();
        user12.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType21 = submitResultRequestToDomainMapper18.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade22 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade22);
        boolean boolean24 = user12.equals((java.lang.Object) submitResultRequestToDomainMapper18);
        com.vntu.marenko.ualearning.server.model.Result result25 = new com.vntu.marenko.ualearning.server.model.Result();
        result25.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user28 = new com.vntu.marenko.ualearning.server.model.User();
        user28.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test31 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean32 = user28.equals((java.lang.Object) test31);
        user28.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result25.setUser(user28);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = null;
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        submitResultRequestToDomainMapper18.mapBtoA(result25, submitResultRequest36, mappingContext37);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest39 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest39.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int42 = submitResultRequest39.getTestId();
        ma.glasnost.orika.MappingContext mappingContext43 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result25, submitResultRequest39, mappingContext43);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl46 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository45);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.UserController userController63 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl46, mapperFacade61);
        boolean boolean64 = submitResultRequest39.equals((java.lang.Object) mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade61);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList67 = testServiceImpl2.getTestsWithTag(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertNotNull(submitResultRequestType21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType14 = submitResultRequestToDomainMapper5.getAType();
        com.vntu.marenko.ualearning.server.model.Result result15 = new com.vntu.marenko.ualearning.server.model.Result();
        result15.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user18 = new com.vntu.marenko.ualearning.server.model.User();
        user18.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test21 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean22 = user18.equals((java.lang.Object) test21);
        user18.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result15.setUser(user18);
        com.vntu.marenko.ualearning.server.model.Question question26 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int27 = question26.getId();
        java.lang.Integer int28 = question26.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer29 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer30 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer30.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray33 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer29, answer30 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList34 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList34, answerArray33);
        question26.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList34);
        result15.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList34);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest38 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest38.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest38.setTestId((int) (byte) 100);
        ma.glasnost.orika.MappingContext mappingContext43 = null;
        submitResultRequestToDomainMapper5.mapBtoA(result15, submitResultRequest38, mappingContext43);
        com.vntu.marenko.ualearning.server.model.Test test45 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int46 = test45.getId();
        java.lang.Integer int47 = test45.getId();
        test45.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int50 = test45.getCompletedCounter();
        java.lang.Integer int51 = test45.getCompletedCounter();
        java.lang.Integer int52 = test45.getCompletedCounter();
        java.lang.String str53 = test45.getDescriptionTest();
        test45.setId((java.lang.Integer) 0);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList56 = test45.getTags();
        result15.setTest(test45);
        test45.setNameTest("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)");
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(submitResultRequestType14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(answerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str53, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(tagList56);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto0.setInstitution("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=1, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = answerDto0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        answerDto0.setText("Tag(id=null, name=null)");
        int int15 = answerDto0.getId();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest16 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str17 = userRequest16.getName();
        java.lang.String str18 = userRequest16.getName();
        java.lang.String str19 = userRequest16.getName();
        boolean boolean20 = answerDto0.equals((java.lang.Object) userRequest16);
        userRequest16.setName("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        userRequest16.setEmail("");
        userRequest16.setPassword("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType4 = resultToDescriptionMapper1.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper6 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean7 = createPostRequestToPostMapper6.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        createPostRequestToPostMapper6.setMapperFacade(mapperFacade21);
        resultToDescriptionMapper1.setMapperFacade(mapperFacade21);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription24 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription24.setId((java.lang.Integer) 0);
        java.lang.Integer int27 = resultDescription24.getTestId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType30 = createPostRequestToPostMapper29.getBType();
        com.vntu.marenko.ualearning.server.model.Post post31 = new com.vntu.marenko.ualearning.server.model.Post();
        post31.setText("");
        java.lang.String str34 = post31.toString();
        post31.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest37 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest37.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper29.mapBtoA(post31, createPostRequest37, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Post post42 = new com.vntu.marenko.ualearning.server.model.Post();
        post42.setText("");
        java.lang.String str45 = post42.toString();
        java.lang.Integer int46 = post42.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str48 = createPostRequest47.getUsername();
        java.lang.String str49 = createPostRequest47.toString();
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        createPostRequestToPostMapper29.mapBtoA(post42, createPostRequest47, mappingContext50);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper52 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType53 = createPostRequestToPostMapper52.getBType();
        com.vntu.marenko.ualearning.server.model.Post post54 = new com.vntu.marenko.ualearning.server.model.Post();
        post54.setText("");
        java.lang.String str57 = post54.toString();
        post54.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest60 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest60.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext63 = null;
        createPostRequestToPostMapper52.mapBtoA(post54, createPostRequest60, mappingContext63);
        ma.glasnost.orika.MappingContext mappingContext65 = null;
        createPostRequestToPostMapper28.mapAtoB(createPostRequest47, post54, mappingContext65);
        boolean boolean67 = resultDescription24.equals((java.lang.Object) post54);
        com.vntu.marenko.ualearning.server.model.Result result68 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user69 = new com.vntu.marenko.ualearning.server.model.User();
        user69.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test72 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean73 = user69.equals((java.lang.Object) test72);
        result68.setUser(user69);
        com.vntu.marenko.ualearning.server.model.User user75 = result68.getUser();
        java.lang.Integer int76 = result68.getId();
        boolean boolean77 = result68.isSubmitted();
        com.vntu.marenko.ualearning.server.model.User user78 = null;
        result68.setUser(user78);
        ma.glasnost.orika.MappingContext mappingContext80 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription24, result68, mappingContext80);
        java.lang.Boolean boolean82 = resultToDescriptionMapper1.favorsExtension();
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNotNull(resultDescriptionType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(postType30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str34, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str45, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str49, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str57, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(user75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        boolean boolean5 = userDto0.equals((java.lang.Object) (byte) -1);
        java.lang.String str6 = userDto0.getInstitution();
        userDto0.setEmail("QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!)])");
        java.lang.String str9 = userDto0.getEmail();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!)])" + "'", str9, "QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!)])");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.toString();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest3 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str4 = userRequest3.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto5 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto5.setId((int) '#');
        boolean boolean8 = userRequest3.equals((java.lang.Object) '#');
        boolean boolean9 = tag0.equals((java.lang.Object) boolean8);
        tag0.setName("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.lang.Integer int12 = tag0.getId();
        tag0.setName("TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Tag(id=null, name=null)" + "'", str2, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        resultDto0.setSubmitted(true);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto25 = resultDto0.getTest();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList26 = resultDto0.getAnswers();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto27 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str28 = testDto27.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto29 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str30 = tagDto29.toString();
        java.lang.String str31 = tagDto29.getName();
        com.vntu.marenko.ualearning.server.model.User user32 = new com.vntu.marenko.ualearning.server.model.User();
        long long33 = user32.getRating();
        user32.setLogin("hi!");
        boolean boolean36 = tagDto29.equals((java.lang.Object) user32);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto37 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str38 = tagDto37.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto39 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto39.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto42 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str43 = tagDto42.toString();
        java.lang.String str44 = tagDto42.getName();
        com.vntu.marenko.ualearning.server.model.Test test45 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int46 = test45.getId();
        java.lang.Integer int47 = test45.getId();
        test45.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList50 = test45.getTags();
        boolean boolean51 = tagDto42.equals((java.lang.Object) tagList50);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto52 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto52.setId(1);
        boolean boolean56 = tagDto52.equals((java.lang.Object) (-1L));
        int int57 = tagDto52.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto58 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto58.setId(1);
        java.lang.String str61 = tagDto58.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto62 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str63 = tagDto62.toString();
        java.lang.String str64 = tagDto62.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto65 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str66 = tagDto65.toString();
        java.lang.String str67 = tagDto65.getName();
        com.vntu.marenko.ualearning.server.model.Test test68 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int69 = test68.getId();
        java.lang.Integer int70 = test68.getId();
        test68.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList73 = test68.getTags();
        boolean boolean74 = tagDto65.equals((java.lang.Object) tagList73);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray75 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto29, tagDto37, tagDto39, tagDto42, tagDto52, tagDto58, tagDto62, tagDto65 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList76 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList76, tagDtoArray75);
        testDto27.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList76);
        testDto27.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str81 = testDto27.getDescriptionTest();
        java.lang.String str82 = testDto27.getNameTest();
        resultDto0.setTest(testDto27);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(testDto25);
        org.junit.Assert.assertNotNull(answerDtoList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str28, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "TagDto(id=0, name=null)" + "'", str30, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "TagDto(id=0, name=null)" + "'", str38, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "TagDto(id=0, name=null)" + "'", str43, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(tagList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "TagDto(id=0, name=null)" + "'", str63, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "TagDto(id=0, name=null)" + "'", str66, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNull(tagList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(tagDtoArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int1 = submitResultRequest0.getTestId();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.ArrayList<java.lang.Integer> intList6 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        submitResultRequest0.setAnswers((java.util.List<java.lang.Integer>) intList6);
        int int9 = submitResultRequest0.getTestId();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setDescriptionTest("Result(id=null, user=User(login=null, password=null, name=null, surname=, age=0, institution=null, email=Post(id=null, text=, timestamp=null, user=null, likes=null), rating=0), test=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str1 = question0.getText();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService3 = null;
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController5 = new com.vntu.marenko.ualearning.server.controller.TestController(testService3, mapperFacade4);
        boolean boolean6 = question0.equals((java.lang.Object) testController5);
        com.vntu.marenko.ualearning.server.model.Question question7 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int8 = question7.getId();
        java.lang.Integer int9 = question7.getId();
        question7.setId((java.lang.Integer) 1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType18 = submitResultRequestToDomainMapper15.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.model.User user21 = new com.vntu.marenko.ualearning.server.model.User();
        user21.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository26 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper27 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository24, testRepository25, answerRepository26);
        ma.glasnost.orika.MapperFacade mapperFacade28 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType30 = submitResultRequestToDomainMapper27.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade31);
        boolean boolean33 = user21.equals((java.lang.Object) submitResultRequestToDomainMapper27);
        com.vntu.marenko.ualearning.server.model.Result result34 = new com.vntu.marenko.ualearning.server.model.Result();
        result34.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user37 = new com.vntu.marenko.ualearning.server.model.User();
        user37.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test40 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean41 = user37.equals((java.lang.Object) test40);
        user37.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result34.setUser(user37);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest45 = null;
        ma.glasnost.orika.MappingContext mappingContext46 = null;
        submitResultRequestToDomainMapper27.mapBtoA(result34, submitResultRequest45, mappingContext46);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest48 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest48.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int51 = submitResultRequest48.getTestId();
        ma.glasnost.orika.MappingContext mappingContext52 = null;
        submitResultRequestToDomainMapper15.mapBtoA(result34, submitResultRequest48, mappingContext52);
        com.vntu.marenko.ualearning.server.model.Question question54 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str55 = question54.getText();
        java.lang.Integer int56 = question54.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService57 = null;
        ma.glasnost.orika.MapperFacade mapperFacade58 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController59 = new com.vntu.marenko.ualearning.server.controller.TestController(testService57, mapperFacade58);
        boolean boolean60 = question54.equals((java.lang.Object) testController59);
        com.vntu.marenko.ualearning.server.model.Result result61 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int62 = result61.getId();
        com.vntu.marenko.ualearning.server.model.Test test63 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int64 = test63.getId();
        java.lang.Integer int65 = test63.getId();
        result61.setTest(test63);
        java.lang.Integer int67 = result61.getId();
        com.vntu.marenko.ualearning.server.model.Result result68 = new com.vntu.marenko.ualearning.server.model.Result();
        result68.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user71 = new com.vntu.marenko.ualearning.server.model.User();
        user71.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test74 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean75 = user71.equals((java.lang.Object) test74);
        user71.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result68.setUser(user71);
        com.vntu.marenko.ualearning.server.model.Question question79 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int80 = question79.getId();
        java.lang.Integer int81 = question79.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer82 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer83 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer83.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray86 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer82, answer83 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList87 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList87, answerArray86);
        question79.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList87);
        result68.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList87);
        result61.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList87);
        question54.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList87);
        result34.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList87);
        question7.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList87);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList95 = question7.getAnswers();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList96 = question7.getAnswers();
        question0.setAnswers(answerList96);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList98 = question0.getAnswers();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(submitResultRequestType18);
        org.junit.Assert.assertNotNull(submitResultRequestType30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(answerArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(answerList95);
        org.junit.Assert.assertNotNull(answerList96);
        org.junit.Assert.assertNotNull(answerList98);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (byte) -1);
        java.lang.String str3 = userDto0.toString();
        userDto0.setRating((int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)" + "'", str3, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getPassword();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        ma.glasnost.orika.MapperFacade mapperFacade3 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto5 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl6 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean7 = answerDto5.equals((java.lang.Object) markComputerImpl6);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl8 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade3, userRepository4, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl6);
        boolean boolean9 = loginRequest0.equals((java.lang.Object) resultServiceImpl8);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl11 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository10);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig14 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType22 = submitResultRequestToDomainMapper19.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper23 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean25 = createPostRequestToPostMapper24.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper26 = null;
        ma.glasnost.orika.MapperFacade mapperFacade27 = mapperConfig14.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl15, submitResultRequestToDomainMapper19, resultToDescriptionMapper23, createPostRequestToPostMapper24, postToDtoMapper26);
        postToDtoMapper13.setMapperFacade(mapperFacade27);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig30 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl31 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository32 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository34 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper35 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository32, testRepository33, answerRepository34);
        ma.glasnost.orika.MapperFacade mapperFacade36 = null;
        submitResultRequestToDomainMapper35.setMapperFacade(mapperFacade36);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType38 = submitResultRequestToDomainMapper35.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper39 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper42 = null;
        ma.glasnost.orika.MapperFacade mapperFacade43 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl31, submitResultRequestToDomainMapper35, resultToDescriptionMapper39, createPostRequestToPostMapper40, postToDtoMapper42);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig53 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl54 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository56 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository57 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper58 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository55, testRepository56, answerRepository57);
        ma.glasnost.orika.MapperFacade mapperFacade59 = null;
        submitResultRequestToDomainMapper58.setMapperFacade(mapperFacade59);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType61 = submitResultRequestToDomainMapper58.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper62 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper63 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean64 = createPostRequestToPostMapper63.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper65 = null;
        ma.glasnost.orika.MapperFacade mapperFacade66 = mapperConfig53.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl54, submitResultRequestToDomainMapper58, resultToDescriptionMapper62, createPostRequestToPostMapper63, postToDtoMapper65);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper67 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade68 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper63, postToDtoMapper67);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl69 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository12, mapperFacade27, userRepository29, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44);
        com.vntu.marenko.ualearning.server.controller.UserController userController70 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl11, mapperFacade27);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController71 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl8, mapperFacade27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList73 = resultController71.getResultsForUser("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(resultType22);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(mapperFacade27);
        org.junit.Assert.assertNotNull(resultType38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(mapperFacade43);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertNotNull(resultType61);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(mapperFacade66);
        org.junit.Assert.assertNotNull(mapperFacade68);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.lang.Integer int4 = post0.getId();
        java.util.List<java.lang.String> strList5 = null;
        post0.setLikes(strList5);
        java.util.Date date7 = null;
        post0.setTimestamp(date7);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setLogin("TagDto(id=0, name=null)");
        java.lang.String str3 = userDto0.getSurname();
        java.lang.String str4 = userDto0.getInstitution();
        userDto0.setLogin("Answer(id=100, text=null, correct=false)");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        java.lang.Boolean boolean17 = postToDtoMapper0.favorsExtension();
        ma.glasnost.orika.Mapper[] mapperArray19 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray20 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray19;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperArray19);
        org.junit.Assert.assertNotNull(objMapperArray20);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user1 = new com.vntu.marenko.ualearning.server.model.User();
        user1.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean5 = user1.equals((java.lang.Object) test4);
        result0.setUser(user1);
        com.vntu.marenko.ualearning.server.model.User user7 = result0.getUser();
        user7.setPassword("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        user7.setSurname("AnswerDto(id=0, text=Tag(id=null, name=null))");
        user7.setInstitution("QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!)])");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(user7);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType13 = createPostRequestToPostMapper0.getAType();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNotNull(createPostRequestType13);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        java.lang.String str3 = user0.getInstitution();
        java.lang.String str4 = user0.getInstitution();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        long long1 = user0.getRating();
        user0.setLogin("hi!");
        java.lang.String str4 = user0.getInstitution();
        int int5 = user0.getAge();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        com.vntu.marenko.ualearning.server.model.User user26 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str27 = user26.getEmail();
        java.lang.String str28 = user26.getSurname();
        result7.setUser(user26);
        result7.setSubmitted(false);
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = testController19.getTest((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setInstitution("hi!");
        java.lang.String str3 = user0.getLogin();
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto4 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto5 = null;
        resultDto4.setTest(testDto5);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList7 = resultDto4.getAnswers();
        long long8 = resultDto4.getMark();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList9 = resultDto4.getAnswers();
        long long10 = resultDto4.getMark();
        boolean boolean11 = user0.equals((java.lang.Object) resultDto4);
        com.vntu.marenko.ualearning.server.model.Answer answer12 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str13 = answer12.toString();
        boolean boolean14 = resultDto4.equals((java.lang.Object) str13);
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto15 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto16 = null;
        resultDto15.setTest(testDto16);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto18 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl19 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean20 = answerDto18.equals((java.lang.Object) markComputerImpl19);
        int int21 = answerDto18.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto22 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto22.setText("hi!");
        java.lang.String str25 = answerDto22.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto26 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean28 = answerDto26.equals((java.lang.Object) markComputerImpl27);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto29 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl30 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean31 = answerDto29.equals((java.lang.Object) markComputerImpl30);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray32 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto18, answerDto22, answerDto26, answerDto29 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList33 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList33, answerDtoArray32);
        resultDto15.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList33);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto36 = resultDto15.getTest();
        long long37 = resultDto15.getMark();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto38 = resultDto15.getTest();
        long long39 = resultDto15.getMark();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList40 = resultDto15.getAnswers();
        resultDto4.setAnswers(answerDtoList40);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(answerDtoList7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(answerDtoList9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Answer(id=null, text=null, correct=false)" + "'", str13, "Answer(id=null, text=null, correct=false)");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(answerDtoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(testDto36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNull(testDto38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(answerDtoList40);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.String str2 = question0.toString();
        question0.setText("Question(id=null, text=null, answers=null)");
        java.lang.String str5 = question0.toString();
        java.lang.String str6 = question0.toString();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Question(id=null, text=null, answers=null)" + "'", str2, "Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Question(id=null, text=Question(id=null, text=null, answers=null), answers=null)" + "'", str5, "Question(id=null, text=Question(id=null, text=null, answers=null), answers=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Question(id=null, text=Question(id=null, text=null, answers=null), answers=null)" + "'", str6, "Question(id=null, text=Question(id=null, text=null, answers=null), answers=null)");
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        java.lang.String str3 = tagDto0.getName();
        tagDto0.setId((int) (short) 10);
        java.lang.String str6 = tagDto0.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TagDto(id=10, name=null)" + "'", str6, "TagDto(id=10, name=null)");
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str1 = user0.getEmail();
        java.lang.String str2 = user0.getSurname();
        java.lang.String str3 = user0.getInstitution();
        user0.setRating(100L);
        user0.setPassword("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        user0.setPassword("TagDto(id=1, name=null)");
        java.lang.String str10 = user0.toString();
        user0.setAge(97);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User(login=null, password=TagDto(id=1, name=null), name=null, surname=null, age=0, institution=null, email=null, rating=100)" + "'", str10, "User(login=null, password=TagDto(id=1, name=null), name=null, surname=null, age=0, institution=null, email=null, rating=100)");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int8 = test3.getCompletedCounter();
        result0.setTest(test3);
        com.vntu.marenko.ualearning.server.model.Test test10 = result0.getTest();
        java.lang.Integer int11 = test10.getCompletedCounter();
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(test10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag0.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType12 = submitResultRequestToDomainMapper9.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade13);
        boolean boolean15 = user3.equals((java.lang.Object) submitResultRequestToDomainMapper9);
        com.vntu.marenko.ualearning.server.model.Result result16 = new com.vntu.marenko.ualearning.server.model.Result();
        result16.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user19 = new com.vntu.marenko.ualearning.server.model.User();
        user19.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test22 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean23 = user19.equals((java.lang.Object) test22);
        user19.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result16.setUser(user19);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest27 = null;
        ma.glasnost.orika.MappingContext mappingContext28 = null;
        submitResultRequestToDomainMapper9.mapBtoA(result16, submitResultRequest27, mappingContext28);
        com.vntu.marenko.ualearning.server.model.User user30 = result16.getUser();
        com.vntu.marenko.ualearning.server.model.User user31 = result16.getUser();
        boolean boolean32 = tag0.equals((java.lang.Object) result16);
        tag0.setId((java.lang.Integer) 52);
        org.junit.Assert.assertNotNull(submitResultRequestType12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(user30);
        org.junit.Assert.assertNotNull(user31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.lang.Integer int4 = post0.getId();
        java.util.Date date5 = null;
        post0.setTimestamp(date5);
        java.lang.String str7 = post0.getText();
        java.util.List<java.lang.String> strList8 = post0.getLikes();
        java.util.List<java.lang.String> strList9 = post0.getLikes();
        post0.setText("QuestionDto(id=10, text=null, answers=null)");
        java.util.Date date12 = null;
        post0.setTimestamp(date12);
        java.util.Date date14 = post0.getTimestamp();
        java.lang.String str15 = post0.getUser();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(date14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getPassword();
        com.vntu.marenko.ualearning.server.dto.UserShortDto userShortDto2 = new com.vntu.marenko.ualearning.server.dto.UserShortDto();
        boolean boolean3 = loginRequest0.equals((java.lang.Object) userShortDto2);
        java.lang.String str4 = loginRequest0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        java.lang.String str3 = user0.getEmail();
        long long4 = user0.getRating();
        user0.setRating((long) (short) 100);
        java.lang.String str7 = user0.getEmail();
        user0.setName("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        java.lang.String str10 = user0.getInstitution();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType6 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper7 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        postToDtoMapper7.setMapperFacade(mapperFacade21);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade21);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean25 = createPostRequestToPostMapper24.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig26 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType34 = submitResultRequestToDomainMapper31.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper35 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean37 = createPostRequestToPostMapper36.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = null;
        ma.glasnost.orika.MapperFacade mapperFacade39 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27, submitResultRequestToDomainMapper31, resultToDescriptionMapper35, createPostRequestToPostMapper36, postToDtoMapper38);
        createPostRequestToPostMapper24.setMapperFacade(mapperFacade39);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType45 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper46 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig47 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl48 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository51 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper52 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository49, testRepository50, answerRepository51);
        ma.glasnost.orika.MapperFacade mapperFacade53 = null;
        submitResultRequestToDomainMapper52.setMapperFacade(mapperFacade53);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType55 = submitResultRequestToDomainMapper52.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper56 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper57 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean58 = createPostRequestToPostMapper57.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper59 = null;
        ma.glasnost.orika.MapperFacade mapperFacade60 = mapperConfig47.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl48, submitResultRequestToDomainMapper52, resultToDescriptionMapper56, createPostRequestToPostMapper57, postToDtoMapper59);
        postToDtoMapper46.setMapperFacade(mapperFacade60);
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade60);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository63 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl64 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository63);
        com.vntu.marenko.ualearning.server.controller.PostController postController65 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade60, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        com.vntu.marenko.ualearning.server.controller.PostController postController66 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade39, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        com.vntu.marenko.ualearning.server.controller.PostController postController67 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade21, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoList69 = postController67.getPostsForUser("SubmitResultRequest(userLogin=null, testId=0, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType6);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(resultType34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(mapperFacade39);
        org.junit.Assert.assertNotNull(resultType45);
        org.junit.Assert.assertNotNull(resultType55);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(mapperFacade60);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest3 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str4 = userRequest3.getName();
        java.lang.String str5 = userRequest3.getName();
        boolean boolean6 = result0.equals((java.lang.Object) str5);
        com.vntu.marenko.ualearning.server.model.User user7 = result0.getUser();
        com.vntu.marenko.ualearning.server.model.Result result8 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.Result result9 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user10 = new com.vntu.marenko.ualearning.server.model.User();
        user10.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean14 = user10.equals((java.lang.Object) test13);
        result9.setUser(user10);
        result8.setUser(user10);
        result8.setSubmitted(false);
        com.vntu.marenko.ualearning.server.model.User user19 = result8.getUser();
        user19.setSurname("User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)");
        result0.setUser(user19);
        com.vntu.marenko.ualearning.server.model.User user23 = new com.vntu.marenko.ualearning.server.model.User();
        user23.setInstitution("hi!");
        java.lang.String str26 = user23.toString();
        java.lang.String str27 = user23.getEmail();
        java.lang.String str28 = user23.getEmail();
        java.lang.String str29 = user23.getInstitution();
        result0.setUser(user23);
        result0.setSubmitted(true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(user7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str26, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getSurname();
        userDto0.setRating(35);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper2 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType3 = createPostRequestToPostMapper2.getBType();
        com.vntu.marenko.ualearning.server.model.Post post4 = new com.vntu.marenko.ualearning.server.model.Post();
        post4.setText("");
        java.lang.String str7 = post4.toString();
        post4.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest10 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest10.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext13 = null;
        createPostRequestToPostMapper2.mapBtoA(post4, createPostRequest10, mappingContext13);
        com.vntu.marenko.ualearning.server.model.Post post15 = new com.vntu.marenko.ualearning.server.model.Post();
        post15.setText("");
        java.lang.String str18 = post15.toString();
        java.lang.Integer int19 = post15.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest20 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str21 = createPostRequest20.getUsername();
        java.lang.String str22 = createPostRequest20.toString();
        ma.glasnost.orika.MappingContext mappingContext23 = null;
        createPostRequestToPostMapper2.mapBtoA(post15, createPostRequest20, mappingContext23);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper25 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType26 = createPostRequestToPostMapper25.getBType();
        com.vntu.marenko.ualearning.server.model.Post post27 = new com.vntu.marenko.ualearning.server.model.Post();
        post27.setText("");
        java.lang.String str30 = post27.toString();
        post27.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest33 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest33.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext36 = null;
        createPostRequestToPostMapper25.mapBtoA(post27, createPostRequest33, mappingContext36);
        ma.glasnost.orika.MappingContext mappingContext38 = null;
        createPostRequestToPostMapper1.mapAtoB(createPostRequest20, post27, mappingContext38);
        boolean boolean40 = answerDto0.equals((java.lang.Object) mappingContext38);
        int int41 = answerDto0.getId();
        answerDto0.setText("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        java.lang.String str44 = answerDto0.getText();
        org.junit.Assert.assertNotNull(postType3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str7, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str18, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str22, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str30, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)" + "'", str44, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        tagDto0.setName("QuestionDto(id=10, text=null, answers=null)");
        tagDto0.setName("Result(id=100, user=null, test=null, submitted=false, answers=null)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        testDto0.setId((int) (byte) 100);
        java.lang.Integer int4 = testDto0.getCompletedCounter();
        java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList5 = testDto0.getTags();
        int int6 = testDto0.getId();
        testDto0.setCompletedCounter((java.lang.Integer) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(tagDtoList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getPassword();
        com.vntu.marenko.ualearning.server.dto.UserShortDto userShortDto2 = new com.vntu.marenko.ualearning.server.dto.UserShortDto();
        boolean boolean3 = loginRequest0.equals((java.lang.Object) userShortDto2);
        java.lang.String str4 = loginRequest0.getLogin();
        boolean boolean6 = loginRequest0.equals((java.lang.Object) "Test(id=0, nameTest=null, descriptionTest=, completedCounter=1, questions=null, tags=null)");
        loginRequest0.setPassword("User(login=null, password=null, name=null, surname=null, age=10, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList5 = test3.getTags();
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int7 = test6.getId();
        java.lang.Integer int8 = test6.getId();
        test6.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository11 = null;
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository13 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer14 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl15 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository11, mapperFacade12, userRepository13, markComputer14);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig18 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl19 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper23.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper27 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean29 = createPostRequestToPostMapper28.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper30 = null;
        ma.glasnost.orika.MapperFacade mapperFacade31 = mapperConfig18.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl19, submitResultRequestToDomainMapper23, resultToDescriptionMapper27, createPostRequestToPostMapper28, postToDtoMapper30);
        createPostRequestToPostMapper16.setMapperFacade(mapperFacade31);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController33 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl15, mapperFacade31);
        boolean boolean34 = test6.equals((java.lang.Object) resultController33);
        boolean boolean35 = test3.equals((java.lang.Object) test6);
        java.lang.String str36 = test6.getDescriptionTest();
        java.lang.String str37 = test6.getDescriptionTest();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig39 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl40 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.MapperFacade mapperFacade45 = null;
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade45);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType47 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper48 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper49 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean50 = createPostRequestToPostMapper49.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper51 = null;
        ma.glasnost.orika.MapperFacade mapperFacade52 = mapperConfig39.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl40, submitResultRequestToDomainMapper44, resultToDescriptionMapper48, createPostRequestToPostMapper49, postToDtoMapper51);
        postToDtoMapper38.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType54 = postToDtoMapper38.getBType();
        java.lang.Boolean boolean55 = postToDtoMapper38.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType56 = postToDtoMapper38.getBType();
        boolean boolean57 = test6.equals((java.lang.Object) postToDtoMapper38);
        com.vntu.marenko.ualearning.server.model.Post post58 = null;
        com.vntu.marenko.ualearning.server.dto.PostDto postDto59 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto59.setId(0);
        postDto59.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        postDto59.setTimestamp("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        postDto59.setTimestamp("AnswerDto(id=10, text=null)");
        ma.glasnost.orika.MappingContext mappingContext68 = null;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper38.mapAtoB(post58, postDto59, mappingContext68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(tagList5);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(mapperFacade31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str36, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str37, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNotNull(resultType47);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(mapperFacade52);
        org.junit.Assert.assertNotNull(postDtoType54);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
        org.junit.Assert.assertNotNull(postDtoType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setMark(1L);
        java.lang.String str5 = resultDescription0.getTestName();
        resultDescription0.setId((java.lang.Integer) 100);
        long long8 = resultDescription0.getMark();
        resultDescription0.setTestName("CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.model.Question question6 = new com.vntu.marenko.ualearning.server.model.Question();
        question6.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str9 = question6.getText();
        boolean boolean10 = resultDto0.equals((java.lang.Object) str9);
        java.lang.String str11 = resultDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto12 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str13 = testDto12.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto14 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str15 = tagDto14.toString();
        java.lang.String str16 = tagDto14.getName();
        com.vntu.marenko.ualearning.server.model.User user17 = new com.vntu.marenko.ualearning.server.model.User();
        long long18 = user17.getRating();
        user17.setLogin("hi!");
        boolean boolean21 = tagDto14.equals((java.lang.Object) user17);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto22 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str23 = tagDto22.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto24 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto24.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto27 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str28 = tagDto27.toString();
        java.lang.String str29 = tagDto27.getName();
        com.vntu.marenko.ualearning.server.model.Test test30 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int31 = test30.getId();
        java.lang.Integer int32 = test30.getId();
        test30.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList35 = test30.getTags();
        boolean boolean36 = tagDto27.equals((java.lang.Object) tagList35);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto37 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto37.setId(1);
        boolean boolean41 = tagDto37.equals((java.lang.Object) (-1L));
        int int42 = tagDto37.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto43 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto43.setId(1);
        java.lang.String str46 = tagDto43.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto47 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str48 = tagDto47.toString();
        java.lang.String str49 = tagDto47.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto50 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str51 = tagDto50.toString();
        java.lang.String str52 = tagDto50.getName();
        com.vntu.marenko.ualearning.server.model.Test test53 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int54 = test53.getId();
        java.lang.Integer int55 = test53.getId();
        test53.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList58 = test53.getTags();
        boolean boolean59 = tagDto50.equals((java.lang.Object) tagList58);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray60 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto14, tagDto22, tagDto24, tagDto27, tagDto37, tagDto43, tagDto47, tagDto50 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList61 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList61, tagDtoArray60);
        testDto12.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList61);
        testDto12.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str66 = testDto12.getDescriptionTest();
        java.lang.String str67 = testDto12.getNameTest();
        resultDto0.setTest(testDto12);
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str9, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ResultDto(id=100, user=null, test=null, submitted=false, answers=null, mark=0)" + "'", str11, "ResultDto(id=100, user=null, test=null, submitted=false, answers=null, mark=0)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str13, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "TagDto(id=0, name=null)" + "'", str15, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "TagDto(id=0, name=null)" + "'", str23, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "TagDto(id=0, name=null)" + "'", str28, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(tagList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "TagDto(id=0, name=null)" + "'", str48, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "TagDto(id=0, name=null)" + "'", str51, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(tagList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(tagDtoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean9 = answerDto7.equals((java.lang.Object) markComputerImpl8);
        int int10 = answerDto7.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        int int14 = answerDto11.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto15 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto15.setText("hi!");
        java.lang.String str18 = answerDto15.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto6, answerDto7, answerDto11, answerDto15 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList20 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList20, answerDtoArray19);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList20);
        questionDto0.setId((int) (short) -1);
        questionDto0.setText("LoginRequest(login=null, password=hi!)");
        questionDto0.setId((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        int int3 = tagDto0.getId();
        tagDto0.setId((int) (short) -1);
        tagDto0.setId(100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 1 + "'", int3 == 1);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        com.vntu.marenko.ualearning.server.model.User user12 = new com.vntu.marenko.ualearning.server.model.User();
        user12.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType21 = submitResultRequestToDomainMapper18.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade22 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade22);
        boolean boolean24 = user12.equals((java.lang.Object) submitResultRequestToDomainMapper18);
        com.vntu.marenko.ualearning.server.model.Result result25 = new com.vntu.marenko.ualearning.server.model.Result();
        result25.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user28 = new com.vntu.marenko.ualearning.server.model.User();
        user28.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test31 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean32 = user28.equals((java.lang.Object) test31);
        user28.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result25.setUser(user28);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = null;
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        submitResultRequestToDomainMapper18.mapBtoA(result25, submitResultRequest36, mappingContext37);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest39 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest39.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int42 = submitResultRequest39.getTestId();
        ma.glasnost.orika.MappingContext mappingContext43 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result25, submitResultRequest39, mappingContext43);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl46 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository45);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.UserController userController63 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl46, mapperFacade61);
        boolean boolean64 = submitResultRequest39.equals((java.lang.Object) mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade61);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto67 = testController65.getTest((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertNotNull(submitResultRequestType21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper33, postToDtoMapper37);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType39 = postToDtoMapper37.getAType();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto40 = null;
        com.vntu.marenko.ualearning.server.model.Post post41 = new com.vntu.marenko.ualearning.server.model.Post();
        post41.setText("");
        java.lang.String str44 = post41.toString();
        post41.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str47 = post41.getUser();
        java.lang.Integer int48 = post41.getId();
        java.util.Date date49 = null;
        post41.setTimestamp(date49);
        ma.glasnost.orika.MappingContext mappingContext51 = null;
        postToDtoMapper37.mapBtoA(postDto40, post41, mappingContext51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType53 = postToDtoMapper37.getAType();
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper54 = null;
        ma.glasnost.orika.Mapper[] mapperArray56 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray57 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray56;
        objMapperArray57[0] = objMapper54;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper37.setUsedMappers(objMapperArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertNotNull(postType39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str44, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str47, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(postType53);
        org.junit.Assert.assertNotNull(mapperArray56);
        org.junit.Assert.assertNotNull(objMapperArray57);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        userDto0.setName("hi!");
        int int4 = userDto0.getAge();
        userDto0.setInstitution("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
        userDto0.setLogin("LoginRequest(login=UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0), password=hi!)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setMark(1L);
        java.lang.Integer int5 = resultDescription0.getTestId();
        long long6 = resultDescription0.getMark();
        java.lang.String str7 = resultDescription0.getTestName();
        resultDescription0.setTestName("PostDto(id=0, text=UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null), timestamp=null, login=null, likes=null)");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType6 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper7 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        postToDtoMapper7.setMapperFacade(mapperFacade21);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade21);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean25 = createPostRequestToPostMapper24.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig26 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType34 = submitResultRequestToDomainMapper31.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper35 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean37 = createPostRequestToPostMapper36.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = null;
        ma.glasnost.orika.MapperFacade mapperFacade39 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27, submitResultRequestToDomainMapper31, resultToDescriptionMapper35, createPostRequestToPostMapper36, postToDtoMapper38);
        createPostRequestToPostMapper24.setMapperFacade(mapperFacade39);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType45 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper46 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig47 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl48 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository51 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper52 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository49, testRepository50, answerRepository51);
        ma.glasnost.orika.MapperFacade mapperFacade53 = null;
        submitResultRequestToDomainMapper52.setMapperFacade(mapperFacade53);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType55 = submitResultRequestToDomainMapper52.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper56 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper57 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean58 = createPostRequestToPostMapper57.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper59 = null;
        ma.glasnost.orika.MapperFacade mapperFacade60 = mapperConfig47.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl48, submitResultRequestToDomainMapper52, resultToDescriptionMapper56, createPostRequestToPostMapper57, postToDtoMapper59);
        postToDtoMapper46.setMapperFacade(mapperFacade60);
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade60);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository63 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl64 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository63);
        com.vntu.marenko.ualearning.server.controller.PostController postController65 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade60, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        com.vntu.marenko.ualearning.server.controller.PostController postController66 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade39, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        com.vntu.marenko.ualearning.server.controller.PostController postController67 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade21, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto69 = postController67.getPost(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType6);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(resultType34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(mapperFacade39);
        org.junit.Assert.assertNotNull(resultType45);
        org.junit.Assert.assertNotNull(resultType55);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(mapperFacade60);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        java.lang.Integer int3 = resultDescription0.getTestId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = resultDescription0.equals((java.lang.Object) post30);
        com.vntu.marenko.ualearning.server.model.Answer answer44 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository45 = null;
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer48 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl49 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository45, mapperFacade46, userRepository47, markComputer48);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper50 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean51 = createPostRequestToPostMapper50.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig52 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl53 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository56 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper57 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository54, testRepository55, answerRepository56);
        ma.glasnost.orika.MapperFacade mapperFacade58 = null;
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade58);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType60 = submitResultRequestToDomainMapper57.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper61 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper62 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean63 = createPostRequestToPostMapper62.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper64 = null;
        ma.glasnost.orika.MapperFacade mapperFacade65 = mapperConfig52.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl53, submitResultRequestToDomainMapper57, resultToDescriptionMapper61, createPostRequestToPostMapper62, postToDtoMapper64);
        createPostRequestToPostMapper50.setMapperFacade(mapperFacade65);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController67 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl49, mapperFacade65);
        boolean boolean68 = answer44.equals((java.lang.Object) resultServiceImpl49);
        java.lang.String str69 = answer44.toString();
        java.lang.String str70 = answer44.getText();
        java.lang.String str71 = answer44.getText();
        java.lang.String str72 = answer44.toString();
        com.vntu.marenko.ualearning.server.model.Tag tag73 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str74 = tag73.toString();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto75 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str76 = postDto75.getLogin();
        java.lang.String[] strArray81 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        postDto75.setLikes((java.util.List<java.lang.String>) strList82);
        postDto75.setTimestamp("Question(id=null, text=null, answers=null)");
        int int87 = postDto75.getId();
        boolean boolean88 = tag73.equals((java.lang.Object) postDto75);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest89 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str90 = userRequest89.getName();
        java.lang.String str91 = userRequest89.getName();
        java.lang.String str92 = userRequest89.getName();
        userRequest89.setSurname("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str95 = userRequest89.getEmail();
        java.lang.String str96 = userRequest89.toString();
        boolean boolean97 = postDto75.equals((java.lang.Object) userRequest89);
        boolean boolean98 = answer44.equals((java.lang.Object) boolean97);
        boolean boolean99 = post30.equals((java.lang.Object) boolean97);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(resultType60);
        org.junit.Assert.assertEquals("'" + boolean63 + "' != '" + false + "'", boolean63, false);
        org.junit.Assert.assertNotNull(mapperFacade65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Answer(id=null, text=null, correct=false)" + "'", str69, "Answer(id=null, text=null, correct=false)");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Answer(id=null, text=null, correct=false)" + "'", str72, "Answer(id=null, text=null, correct=false)");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Tag(id=null, name=null)" + "'", str74, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=ResultDescription(id=0, testId=null, testName=null, mark=1), age=0, institution=null, email=null)" + "'", str96, "UserRequest(login=null, password=null, name=null, surname=ResultDescription(id=0, testId=null, testName=null, mark=1), age=0, institution=null, email=null)");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        testDto0.setId((int) (byte) 100);
        java.lang.Integer int4 = testDto0.getCompletedCounter();
        java.lang.String str5 = testDto0.getNameTest();
        testDto0.setDescriptionTest("Answer(id=-1, text=null, correct=false)");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository8);
        boolean boolean10 = userRequest0.equals((java.lang.Object) postServiceImpl9);
        userRequest0.setAge((int) (byte) 1);
        userRequest0.setAge((int) (byte) 100);
        userRequest0.setSurname("QuestionDto(id=0, text=null, answers=null)");
        userRequest0.setEmail("TestDto(id=0, nameTest=null, descriptionTest=ResultDto(id=0, user=null, test=null, submitted=false, answers=null, mark=0), completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId((int) (byte) 100);
        java.lang.String str3 = postDto0.getText();
        int int4 = postDto0.getId();
        int int5 = postDto0.getId();
        java.lang.String str6 = postDto0.getTimestamp();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList21 = testController19.getTestDescriptionsForTag(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription1 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription1.setId((java.lang.Integer) 0);
        resultDescription1.setMark(1L);
        resultDescription1.setMark((long) 52);
        boolean boolean8 = createPostRequest0.equals((java.lang.Object) resultDescription1);
        java.lang.Object obj9 = null;
        boolean boolean10 = resultDescription1.equals(obj9);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.Integer int3 = post0.getId();
        java.util.Date date4 = post0.getTimestamp();
        post0.setId((java.lang.Integer) (-1));
        post0.setUser("LoginRequest(login=null, password=null)");
        java.util.List<java.lang.String> strList9 = post0.getLikes();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(date4);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType22 = submitResultRequestToDomainMapper19.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper23 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig24 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl25 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository28 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper29 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository26, testRepository27, answerRepository28);
        ma.glasnost.orika.MapperFacade mapperFacade30 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType32 = submitResultRequestToDomainMapper29.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper33 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper34 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean35 = createPostRequestToPostMapper34.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper36 = null;
        ma.glasnost.orika.MapperFacade mapperFacade37 = mapperConfig24.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl25, submitResultRequestToDomainMapper29, resultToDescriptionMapper33, createPostRequestToPostMapper34, postToDtoMapper36);
        postToDtoMapper23.setMapperFacade(mapperFacade37);
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade37);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig42 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl43 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository46 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper47 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository44, testRepository45, answerRepository46);
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        submitResultRequestToDomainMapper47.setMapperFacade(mapperFacade48);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType50 = submitResultRequestToDomainMapper47.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper51 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper52 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean53 = createPostRequestToPostMapper52.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper54 = null;
        ma.glasnost.orika.MapperFacade mapperFacade55 = mapperConfig42.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl43, submitResultRequestToDomainMapper47, resultToDescriptionMapper51, createPostRequestToPostMapper52, postToDtoMapper54);
        createPostRequestToPostMapper40.setMapperFacade(mapperFacade55);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository57 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository58 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository59 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper60 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository57, testRepository58, answerRepository59);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType61 = submitResultRequestToDomainMapper60.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        submitResultRequestToDomainMapper60.setMapperFacade(mapperFacade76);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository79 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl80 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository79);
        com.vntu.marenko.ualearning.server.controller.PostController postController81 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade76, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController82 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade55, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController83 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade37, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController84 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade14, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto86 = postController84.getPost((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType22);
        org.junit.Assert.assertNotNull(resultType32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNotNull(mapperFacade37);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(resultType50);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(mapperFacade55);
        org.junit.Assert.assertNotNull(resultType61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getPassword();
        userRequest0.setLogin("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        java.lang.String str6 = userRequest0.getLogin();
        java.lang.String str7 = userRequest0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str6, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        resultDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto5.setRating((int) (byte) -1);
        userDto5.setLogin("LoginRequest(login=null, password=null)");
        resultDto0.setUser(userDto5);
        resultDto0.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto13 = resultDto0.getUser();
        resultDto0.setSubmitted(true);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto16 = null;
        resultDto0.setTest(testDto16);
        org.junit.Assert.assertNotNull(userDto13);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean7 = user3.equals((java.lang.Object) test6);
        user3.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result0.setUser(user3);
        int int11 = user3.getAge();
        user3.setLogin("");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto14 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto15 = null;
        resultDto14.setTest(testDto15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        int int20 = answerDto17.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto21 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto21.setText("hi!");
        java.lang.String str24 = answerDto21.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto25 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean27 = answerDto25.equals((java.lang.Object) markComputerImpl26);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto28 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean30 = answerDto28.equals((java.lang.Object) markComputerImpl29);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray31 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto17, answerDto21, answerDto25, answerDto28 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList32 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32, answerDtoArray31);
        resultDto14.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto35 = resultDto14.getTest();
        long long36 = resultDto14.getMark();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto37 = resultDto14.getTest();
        boolean boolean38 = user3.equals((java.lang.Object) resultDto14);
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto39 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto39.setId(100);
        resultDto39.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto44 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto44.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto47 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl48 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean49 = answerDto47.equals((java.lang.Object) markComputerImpl48);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto50 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto51 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl52 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean53 = answerDto51.equals((java.lang.Object) markComputerImpl52);
        int int54 = answerDto51.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto55 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl56 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean57 = answerDto55.equals((java.lang.Object) markComputerImpl56);
        int int58 = answerDto55.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto59 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto59.setText("hi!");
        java.lang.String str62 = answerDto59.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray63 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto47, answerDto50, answerDto51, answerDto55, answerDto59 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList64 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList64, answerDtoArray63);
        questionDto44.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList64);
        resultDto39.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList64);
        resultDto14.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList64);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList69 = resultDto14.getAnswers();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(answerDtoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(testDto35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(testDto37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(answerDtoList69);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        resultDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto5.setRating((int) (byte) -1);
        userDto5.setLogin("LoginRequest(login=null, password=null)");
        resultDto0.setUser(userDto5);
        resultDto0.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto13 = resultDto0.getUser();
        long long14 = resultDto0.getMark();
        com.vntu.marenko.ualearning.server.dto.UserDto userDto15 = resultDto0.getUser();
        org.junit.Assert.assertNotNull(userDto13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(userDto15);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper3.getBType();
        java.lang.Boolean boolean10 = submitResultRequestToDomainMapper3.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType11 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result12 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int13 = result12.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        result12.setTest(test14);
        java.lang.Integer int18 = result12.getId();
        com.vntu.marenko.ualearning.server.model.Result result19 = new com.vntu.marenko.ualearning.server.model.Result();
        result19.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user22 = new com.vntu.marenko.ualearning.server.model.User();
        user22.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test25 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean26 = user22.equals((java.lang.Object) test25);
        user22.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result19.setUser(user22);
        com.vntu.marenko.ualearning.server.model.Question question30 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int31 = question30.getId();
        java.lang.Integer int32 = question30.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer33 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer34 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer34.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray37 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer33, answer34 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList38 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList38, answerArray37);
        question30.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList38);
        result19.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList38);
        result12.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList38);
        result12.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user45 = new com.vntu.marenko.ualearning.server.model.User();
        user45.setSurname("");
        user45.setRating((long) (short) -1);
        result12.setUser(user45);
        result12.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.model.Test test53 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int54 = test53.getId();
        java.lang.Integer int55 = test53.getId();
        test53.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int58 = test53.getCompletedCounter();
        java.lang.Integer int59 = test53.getCompletedCounter();
        java.lang.Integer int60 = test53.getCompletedCounter();
        java.lang.String str61 = test53.getDescriptionTest();
        test53.setId((java.lang.Integer) 0);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList64 = test53.getTags();
        result12.setTest(test53);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest66 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int67 = submitResultRequest66.getTestId();
        submitResultRequest66.setTestId((int) (byte) -1);
        int int70 = submitResultRequest66.getTestId();
        submitResultRequest66.setUserLogin("Answer(id=-1, text=null, correct=true)");
        ma.glasnost.orika.MappingContext mappingContext73 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result12, submitResultRequest66, mappingContext73);
        com.vntu.marenko.ualearning.server.model.User user75 = result12.getUser();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNotNull(submitResultRequestType11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(answerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str61, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(tagList64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(user75);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str1 = user0.getEmail();
        java.lang.String str2 = user0.getSurname();
        user0.setLogin("TagDto(id=1, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0))");
        user0.setAge(1);
        user0.setInstitution("ResultDto(id=0, user=null, test=null, submitted=true, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        java.lang.Integer int6 = post2.getId();
        java.lang.String[] strArray31 = new java.lang.String[] { "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "LoginRequest(login=null, password=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))", "", "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)", "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)", "Question(id=null, text=null, answers=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "Result(id=null, user=null, test=null, submitted=false, answers=null)", "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)", "ResultDescription(id=null, testId=100, testName=null, mark=0)", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)", "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)", "Question(id=null, text=null, answers=null)", "CreatePostRequest(text=null, username=null)", "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)", "QuestionDto(id=10, text=null, answers=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        post2.setLikes((java.util.List<java.lang.String>) strList32);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto35 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str36 = postDto35.getLogin();
        java.lang.String[] strArray41 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        postDto35.setLikes((java.util.List<java.lang.String>) strList42);
        post2.setLikes((java.util.List<java.lang.String>) strList42);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post46 = postServiceImpl1.savePost(post2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository23 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl24 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository23);
        com.vntu.marenko.ualearning.server.controller.PostController postController25 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade20, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl24);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig26 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType34 = submitResultRequestToDomainMapper31.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper35 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean37 = createPostRequestToPostMapper36.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = null;
        ma.glasnost.orika.MapperFacade mapperFacade39 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27, submitResultRequestToDomainMapper31, resultToDescriptionMapper35, createPostRequestToPostMapper36, postToDtoMapper38);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest40 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest40.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post43 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext44 = null;
        createPostRequestToPostMapper36.mapAtoB(createPostRequest40, post43, mappingContext44);
        java.util.List<java.lang.String> strList46 = post43.getLikes();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post47 = postServiceImpl24.savePost(post43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(mapperFacade39);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        userDto0.setSurname("hi!");
        boolean boolean7 = userDto0.equals((java.lang.Object) 52);
        java.lang.String str8 = userDto0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UserDto(login=null, name=null, surname=hi!, age=0, institution=, email=null, rating=0)" + "'", str8, "UserDto(login=null, name=null, surname=hi!, age=0, institution=, email=null, rating=0)");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        userRequest0.setEmail("TagDto(id=1, name=null)");
        com.vntu.marenko.ualearning.server.model.Post post4 = new com.vntu.marenko.ualearning.server.model.Post();
        post4.setText("");
        java.lang.String str7 = post4.toString();
        java.util.Date date8 = null;
        post4.setTimestamp(date8);
        post4.setText("CreatePostRequest(text=null, username=null)");
        boolean boolean12 = userRequest0.equals((java.lang.Object) post4);
        java.lang.String str13 = userRequest0.getInstitution();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str7, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        java.lang.String str5 = testDescription0.toString();
        int int6 = testDescription0.getId();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))" + "'", str5, "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        com.vntu.marenko.ualearning.server.model.Test test25 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int26 = test25.getId();
        java.lang.Integer int27 = test25.getId();
        java.lang.Integer int28 = test25.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Test test29 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int30 = test29.getId();
        java.lang.Integer int31 = test29.getId();
        test29.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag34 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag34.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag37 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag37.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag40 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str41 = tag40.toString();
        java.lang.String str42 = tag40.getName();
        java.lang.Integer int43 = tag40.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper44 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper45 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType46 = createPostRequestToPostMapper45.getBType();
        com.vntu.marenko.ualearning.server.model.Post post47 = new com.vntu.marenko.ualearning.server.model.Post();
        post47.setText("");
        java.lang.String str50 = post47.toString();
        post47.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest53 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest53.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        createPostRequestToPostMapper45.mapBtoA(post47, createPostRequest53, mappingContext56);
        com.vntu.marenko.ualearning.server.model.Post post58 = new com.vntu.marenko.ualearning.server.model.Post();
        post58.setText("");
        java.lang.String str61 = post58.toString();
        java.lang.Integer int62 = post58.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest63 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str64 = createPostRequest63.getUsername();
        java.lang.String str65 = createPostRequest63.toString();
        ma.glasnost.orika.MappingContext mappingContext66 = null;
        createPostRequestToPostMapper45.mapBtoA(post58, createPostRequest63, mappingContext66);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper68 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType69 = createPostRequestToPostMapper68.getBType();
        com.vntu.marenko.ualearning.server.model.Post post70 = new com.vntu.marenko.ualearning.server.model.Post();
        post70.setText("");
        java.lang.String str73 = post70.toString();
        post70.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest76 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest76.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext79 = null;
        createPostRequestToPostMapper68.mapBtoA(post70, createPostRequest76, mappingContext79);
        ma.glasnost.orika.MappingContext mappingContext81 = null;
        createPostRequestToPostMapper44.mapAtoB(createPostRequest63, post70, mappingContext81);
        boolean boolean83 = tag40.equals((java.lang.Object) createPostRequest63);
        com.vntu.marenko.ualearning.server.model.Tag tag84 = new com.vntu.marenko.ualearning.server.model.Tag();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray85 = new com.vntu.marenko.ualearning.server.model.Tag[] { tag34, tag37, tag40, tag84 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList86 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList86, tagArray85);
        test29.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList86);
        test25.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList86);
        boolean boolean90 = questionDto0.equals((java.lang.Object) test25);
        java.lang.String str91 = questionDto0.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Tag(id=null, name=null)" + "'", str41, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(postType46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str50, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str61, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str65, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str73, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(tagArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)])" + "'", str91, "QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)])");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        com.vntu.marenko.ualearning.server.model.User user7 = new com.vntu.marenko.ualearning.server.model.User();
        user7.setSurname("");
        result0.setUser(user7);
        com.vntu.marenko.ualearning.server.model.User user11 = new com.vntu.marenko.ualearning.server.model.User();
        user11.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean15 = user11.equals((java.lang.Object) test14);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList16 = test14.getTags();
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList17 = test14.getTags();
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList18 = test14.getTags();
        result0.setTest(test14);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(tagList16);
        org.junit.Assert.assertNull(tagList17);
        org.junit.Assert.assertNull(tagList18);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setNameTest("CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=null)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper33, postToDtoMapper37);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType39 = submitResultRequestToDomainMapper18.getAType();
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper40 = null;
        ma.glasnost.orika.Mapper[] mapperArray42 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray43 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray42;
        objMapperArray43[0] = objMapper40;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper18.setUsedMappers(objMapperArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertNotNull(submitResultRequestType39);
        org.junit.Assert.assertNotNull(mapperArray42);
        org.junit.Assert.assertNotNull(objMapperArray43);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType4 = resultToDescriptionMapper1.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper6 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        postToDtoMapper6.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType22 = postToDtoMapper6.getBType();
        java.lang.Boolean boolean23 = postToDtoMapper6.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        com.vntu.marenko.ualearning.server.model.Post post37 = new com.vntu.marenko.ualearning.server.model.Post();
        post37.setText("");
        java.lang.String str40 = post37.toString();
        java.lang.Integer int41 = post37.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest42 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str43 = createPostRequest42.getUsername();
        java.lang.String str44 = createPostRequest42.toString();
        ma.glasnost.orika.MappingContext mappingContext45 = null;
        createPostRequestToPostMapper24.mapBtoA(post37, createPostRequest42, mappingContext45);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository49 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper50 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository47, testRepository48, answerRepository49);
        ma.glasnost.orika.MapperFacade mapperFacade51 = null;
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType53 = submitResultRequestToDomainMapper50.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper54 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig55 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl56 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository57 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository58 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository59 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper60 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository57, testRepository58, answerRepository59);
        ma.glasnost.orika.MapperFacade mapperFacade61 = null;
        submitResultRequestToDomainMapper60.setMapperFacade(mapperFacade61);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType63 = submitResultRequestToDomainMapper60.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper64 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper65 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean66 = createPostRequestToPostMapper65.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper67 = null;
        ma.glasnost.orika.MapperFacade mapperFacade68 = mapperConfig55.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl56, submitResultRequestToDomainMapper60, resultToDescriptionMapper64, createPostRequestToPostMapper65, postToDtoMapper67);
        postToDtoMapper54.setMapperFacade(mapperFacade68);
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade68);
        createPostRequestToPostMapper24.setMapperFacade(mapperFacade68);
        postToDtoMapper6.setMapperFacade(mapperFacade68);
        resultToDescriptionMapper1.setMapperFacade(mapperFacade68);
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNotNull(resultDescriptionType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(postDtoType22);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str40, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str44, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(resultType53);
        org.junit.Assert.assertNotNull(resultType63);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(mapperFacade68);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer3 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer4 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer4.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray7 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer3, answer4 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList8 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList8, answerArray7);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList8);
        java.lang.Integer int11 = question0.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList12 = question0.getAnswers();
        java.lang.String str13 = question0.toString();
        question0.setText("Answer(id=-1, text=null, correct=true)");
        question0.setText("TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto18 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str19 = userDto18.toString();
        java.lang.String str20 = userDto18.getLogin();
        int int21 = userDto18.getRating();
        java.lang.String str22 = userDto18.getName();
        java.lang.String str23 = userDto18.toString();
        boolean boolean24 = question0.equals((java.lang.Object) userDto18);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(answerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(answerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])" + "'", str13, "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str19, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str23, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        java.lang.String str2 = loginRequest0.toString();
        com.vntu.marenko.ualearning.server.model.Result result3 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.Result result4 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        user5.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test8 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean9 = user5.equals((java.lang.Object) test8);
        result4.setUser(user5);
        result3.setUser(user5);
        user5.setRating((long) (short) 0);
        boolean boolean14 = loginRequest0.equals((java.lang.Object) user5);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str2, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        test3.setDescriptionTest("");
        test3.setDescriptionTest("");
        test3.setCompletedCounter((java.lang.Integer) 1);
        test3.setId((java.lang.Integer) 0);
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int14 = test13.getId();
        java.lang.Integer int15 = test13.getId();
        test13.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag18 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag18.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag21 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag21.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag24 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str25 = tag24.toString();
        java.lang.String str26 = tag24.getName();
        java.lang.Integer int27 = tag24.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType30 = createPostRequestToPostMapper29.getBType();
        com.vntu.marenko.ualearning.server.model.Post post31 = new com.vntu.marenko.ualearning.server.model.Post();
        post31.setText("");
        java.lang.String str34 = post31.toString();
        post31.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest37 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest37.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper29.mapBtoA(post31, createPostRequest37, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Post post42 = new com.vntu.marenko.ualearning.server.model.Post();
        post42.setText("");
        java.lang.String str45 = post42.toString();
        java.lang.Integer int46 = post42.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str48 = createPostRequest47.getUsername();
        java.lang.String str49 = createPostRequest47.toString();
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        createPostRequestToPostMapper29.mapBtoA(post42, createPostRequest47, mappingContext50);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper52 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType53 = createPostRequestToPostMapper52.getBType();
        com.vntu.marenko.ualearning.server.model.Post post54 = new com.vntu.marenko.ualearning.server.model.Post();
        post54.setText("");
        java.lang.String str57 = post54.toString();
        post54.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest60 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest60.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext63 = null;
        createPostRequestToPostMapper52.mapBtoA(post54, createPostRequest60, mappingContext63);
        ma.glasnost.orika.MappingContext mappingContext65 = null;
        createPostRequestToPostMapper28.mapAtoB(createPostRequest47, post54, mappingContext65);
        boolean boolean67 = tag24.equals((java.lang.Object) createPostRequest47);
        com.vntu.marenko.ualearning.server.model.Tag tag68 = new com.vntu.marenko.ualearning.server.model.Tag();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray69 = new com.vntu.marenko.ualearning.server.model.Tag[] { tag18, tag21, tag24, tag68 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList70 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList70, tagArray69);
        test13.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList70);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList73 = test13.getTags();
        test3.setTags(tagList73);
        java.lang.String str75 = test3.getNameTest();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Tag(id=null, name=null)" + "'", str25, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(postType30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str34, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str45, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str49, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str57, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(tagArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(tagList73);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        userRequest0.setPassword("Question(id=null, text=null, answers=null)");
        java.lang.String str5 = userRequest0.getLogin();
        userRequest0.setName("LoginRequest(login=null, password=TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)]))");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int8 = test7.getId();
        java.lang.Integer int9 = test7.getId();
        test7.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int12 = test7.getCompletedCounter();
        java.lang.Integer int13 = test7.getCompletedCounter();
        result0.setTest(test7);
        com.vntu.marenko.ualearning.server.model.Test test15 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int16 = test15.getId();
        java.lang.Integer int17 = test15.getId();
        test15.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag20 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag20.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag23 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag23.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag26 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str27 = tag26.toString();
        java.lang.String str28 = tag26.getName();
        java.lang.Integer int29 = tag26.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper31 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType32 = createPostRequestToPostMapper31.getBType();
        com.vntu.marenko.ualearning.server.model.Post post33 = new com.vntu.marenko.ualearning.server.model.Post();
        post33.setText("");
        java.lang.String str36 = post33.toString();
        post33.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest39 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest39.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext42 = null;
        createPostRequestToPostMapper31.mapBtoA(post33, createPostRequest39, mappingContext42);
        com.vntu.marenko.ualearning.server.model.Post post44 = new com.vntu.marenko.ualearning.server.model.Post();
        post44.setText("");
        java.lang.String str47 = post44.toString();
        java.lang.Integer int48 = post44.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest49 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str50 = createPostRequest49.getUsername();
        java.lang.String str51 = createPostRequest49.toString();
        ma.glasnost.orika.MappingContext mappingContext52 = null;
        createPostRequestToPostMapper31.mapBtoA(post44, createPostRequest49, mappingContext52);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper54 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType55 = createPostRequestToPostMapper54.getBType();
        com.vntu.marenko.ualearning.server.model.Post post56 = new com.vntu.marenko.ualearning.server.model.Post();
        post56.setText("");
        java.lang.String str59 = post56.toString();
        post56.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest62 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest62.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext65 = null;
        createPostRequestToPostMapper54.mapBtoA(post56, createPostRequest62, mappingContext65);
        ma.glasnost.orika.MappingContext mappingContext67 = null;
        createPostRequestToPostMapper30.mapAtoB(createPostRequest49, post56, mappingContext67);
        boolean boolean69 = tag26.equals((java.lang.Object) createPostRequest49);
        com.vntu.marenko.ualearning.server.model.Tag tag70 = new com.vntu.marenko.ualearning.server.model.Tag();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray71 = new com.vntu.marenko.ualearning.server.model.Tag[] { tag20, tag23, tag26, tag70 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList72 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList72, tagArray71);
        test15.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList72);
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList75 = test15.getQuestions();
        test15.setNameTest("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        result0.setTest(test15);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Tag(id=null, name=null)" + "'", str27, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(postType32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str36, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str47, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str51, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str59, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(tagArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(questionList75);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        com.vntu.marenko.ualearning.server.model.User user9 = new com.vntu.marenko.ualearning.server.model.User();
        user9.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType18 = submitResultRequestToDomainMapper15.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade19);
        boolean boolean21 = user9.equals((java.lang.Object) submitResultRequestToDomainMapper15);
        com.vntu.marenko.ualearning.server.model.Result result22 = new com.vntu.marenko.ualearning.server.model.Result();
        result22.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test28 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean29 = user25.equals((java.lang.Object) test28);
        user25.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result22.setUser(user25);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest33 = null;
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        submitResultRequestToDomainMapper15.mapBtoA(result22, submitResultRequest33, mappingContext34);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest36.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int39 = submitResultRequest36.getTestId();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result22, submitResultRequest36, mappingContext40);
        submitResultRequest36.setUserLogin("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.model.Answer answer44 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.Integer int45 = answer44.getId();
        com.vntu.marenko.ualearning.server.model.Test test46 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int47 = test46.getId();
        java.lang.Integer int48 = test46.getId();
        test46.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        test46.setId((java.lang.Integer) 1);
        boolean boolean53 = answer44.equals((java.lang.Object) test46);
        java.lang.String str54 = test46.getNameTest();
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList55 = test46.getQuestions();
        java.lang.String str56 = test46.toString();
        java.lang.String str57 = test46.getNameTest();
        boolean boolean58 = submitResultRequest36.equals((java.lang.Object) test46);
        java.util.List<java.lang.Integer> intList59 = submitResultRequest36.getAnswers();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(submitResultRequestType18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(questionList55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Test(id=1, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)" + "'", str56, "Test(id=1, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(intList59);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        resultDto0.setSubmitted(true);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto25 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto25.setRating((int) (short) 10);
        java.lang.String str28 = userDto25.toString();
        resultDto0.setUser(userDto25);
        boolean boolean31 = userDto25.equals((java.lang.Object) "Tag(id=null, name=null)");
        userDto25.setAge(0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)" + "'", str28, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean7 = user3.equals((java.lang.Object) test6);
        user3.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result0.setUser(user3);
        int int11 = user3.getAge();
        user3.setLogin("");
        long long14 = user3.getRating();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper3 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = resultToDescriptionMapper3.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper3.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType6 = resultToDescriptionMapper3.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType7 = resultToDescriptionMapper3.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper8 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean9 = createPostRequestToPostMapper8.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig10 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl11 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType18 = submitResultRequestToDomainMapper15.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper19 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper20 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean21 = createPostRequestToPostMapper20.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = null;
        ma.glasnost.orika.MapperFacade mapperFacade23 = mapperConfig10.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl11, submitResultRequestToDomainMapper15, resultToDescriptionMapper19, createPostRequestToPostMapper20, postToDtoMapper22);
        createPostRequestToPostMapper8.setMapperFacade(mapperFacade23);
        resultToDescriptionMapper3.setMapperFacade(mapperFacade23);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController26 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade23);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper34 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig35 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl36 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository37 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository39 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper40 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository37, testRepository38, answerRepository39);
        ma.glasnost.orika.MapperFacade mapperFacade41 = null;
        submitResultRequestToDomainMapper40.setMapperFacade(mapperFacade41);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType43 = submitResultRequestToDomainMapper40.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper44 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper45 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean46 = createPostRequestToPostMapper45.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = null;
        ma.glasnost.orika.MapperFacade mapperFacade48 = mapperConfig35.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl36, submitResultRequestToDomainMapper40, resultToDescriptionMapper44, createPostRequestToPostMapper45, postToDtoMapper47);
        postToDtoMapper34.setMapperFacade(mapperFacade48);
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade48);
        com.vntu.marenko.ualearning.server.service.UserService userService51 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper52 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig53 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl54 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository56 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository57 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper58 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository55, testRepository56, answerRepository57);
        ma.glasnost.orika.MapperFacade mapperFacade59 = null;
        submitResultRequestToDomainMapper58.setMapperFacade(mapperFacade59);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType61 = submitResultRequestToDomainMapper58.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper62 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper63 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean64 = createPostRequestToPostMapper63.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper65 = null;
        ma.glasnost.orika.MapperFacade mapperFacade66 = mapperConfig53.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl54, submitResultRequestToDomainMapper58, resultToDescriptionMapper62, createPostRequestToPostMapper63, postToDtoMapper65);
        postToDtoMapper52.setMapperFacade(mapperFacade66);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController68 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService51, mapperFacade66);
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade66);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController70 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade66);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest71 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str72 = loginRequest71.getPassword();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository73 = null;
        ma.glasnost.orika.MapperFacade mapperFacade74 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository75 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto76 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl77 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean78 = answerDto76.equals((java.lang.Object) markComputerImpl77);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl79 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository73, mapperFacade74, userRepository75, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl77);
        boolean boolean80 = loginRequest71.equals((java.lang.Object) resultServiceImpl79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = authorisationController70.login(loginRequest71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertNotNull(resultDescriptionType6);
        org.junit.Assert.assertNotNull(resultType7);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNotNull(resultType18);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNotNull(mapperFacade23);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertNotNull(resultType43);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
        org.junit.Assert.assertNotNull(mapperFacade48);
        org.junit.Assert.assertNotNull(resultType61);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(mapperFacade66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription3 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int4 = resultDescription3.getId();
        long long5 = resultDescription3.getMark();
        com.vntu.marenko.ualearning.server.model.Result result6 = new com.vntu.marenko.ualearning.server.model.Result();
        result6.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        test9.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int14 = test9.getCompletedCounter();
        result6.setTest(test9);
        com.vntu.marenko.ualearning.server.model.Test test16 = result6.getTest();
        ma.glasnost.orika.MappingContext mappingContext17 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription3, result6, mappingContext17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType19 = resultToDescriptionMapper1.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = resultToDescriptionMapper1.getAType();
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(test16);
        org.junit.Assert.assertNotNull(resultDescriptionType19);
        org.junit.Assert.assertNotNull(resultType20);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = tag0.equals((java.lang.Object) createPostRequest23);
        createPostRequest23.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        createPostRequest23.setUsername("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str48 = createPostRequest23.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=ResultDescription(id=0, testId=null, testName=null, mark=1))" + "'", str48, "CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=ResultDescription(id=0, testId=null, testName=null, mark=1))");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setDescriptionTest("Answer(id=0, text=null, correct=false)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        result7.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user10 = new com.vntu.marenko.ualearning.server.model.User();
        user10.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean14 = user10.equals((java.lang.Object) test13);
        user10.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result7.setUser(user10);
        com.vntu.marenko.ualearning.server.model.Question question18 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int19 = question18.getId();
        java.lang.Integer int20 = question18.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer21 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer22 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer22.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray25 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer21, answer22 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList26 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList26, answerArray25);
        question18.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        result7.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        result0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        boolean boolean31 = result0.isSubmitted();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(answerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        java.lang.Integer int3 = test0.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int5 = test4.getId();
        java.lang.Integer int6 = test4.getId();
        test4.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag9 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag9.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag12 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag12.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag15 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str16 = tag15.toString();
        java.lang.String str17 = tag15.getName();
        java.lang.Integer int18 = tag15.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper19 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper20 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType21 = createPostRequestToPostMapper20.getBType();
        com.vntu.marenko.ualearning.server.model.Post post22 = new com.vntu.marenko.ualearning.server.model.Post();
        post22.setText("");
        java.lang.String str25 = post22.toString();
        post22.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest28 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest28.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext31 = null;
        createPostRequestToPostMapper20.mapBtoA(post22, createPostRequest28, mappingContext31);
        com.vntu.marenko.ualearning.server.model.Post post33 = new com.vntu.marenko.ualearning.server.model.Post();
        post33.setText("");
        java.lang.String str36 = post33.toString();
        java.lang.Integer int37 = post33.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest38 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str39 = createPostRequest38.getUsername();
        java.lang.String str40 = createPostRequest38.toString();
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper20.mapBtoA(post33, createPostRequest38, mappingContext41);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper43 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType44 = createPostRequestToPostMapper43.getBType();
        com.vntu.marenko.ualearning.server.model.Post post45 = new com.vntu.marenko.ualearning.server.model.Post();
        post45.setText("");
        java.lang.String str48 = post45.toString();
        post45.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest51 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest51.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext54 = null;
        createPostRequestToPostMapper43.mapBtoA(post45, createPostRequest51, mappingContext54);
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        createPostRequestToPostMapper19.mapAtoB(createPostRequest38, post45, mappingContext56);
        boolean boolean58 = tag15.equals((java.lang.Object) createPostRequest38);
        com.vntu.marenko.ualearning.server.model.Tag tag59 = new com.vntu.marenko.ualearning.server.model.Tag();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray60 = new com.vntu.marenko.ualearning.server.model.Tag[] { tag9, tag12, tag15, tag59 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList61 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList61, tagArray60);
        test4.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList61);
        test0.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList61);
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList65 = test0.getQuestions();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Tag(id=null, name=null)" + "'", str16, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(postType21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str25, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str36, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str40, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str48, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(tagArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(questionList65);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        java.lang.String str6 = userRequest0.getLogin();
        java.lang.String str7 = userRequest0.getName();
        java.lang.String str8 = userRequest0.getInstitution();
        userRequest0.setAge((int) '4');
        java.lang.String str11 = userRequest0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType17 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postType17);
        org.junit.Assert.assertNotNull(postType18);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("TagDto(id=0, name=null)");
        testDescription0.setNameTest("hi!");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository10 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl11 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository9, tagRepository10);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig13 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper23 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean24 = createPostRequestToPostMapper23.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper25 = null;
        ma.glasnost.orika.MapperFacade mapperFacade26 = mapperConfig13.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper23, postToDtoMapper25);
        postToDtoMapper12.setMapperFacade(mapperFacade26);
        com.vntu.marenko.ualearning.server.controller.TestController testController28 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl11, mapperFacade26);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController30 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl11, mapperFacade29);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper31 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType32 = createPostRequestToPostMapper31.getBType();
        com.vntu.marenko.ualearning.server.model.Post post33 = new com.vntu.marenko.ualearning.server.model.Post();
        post33.setText("");
        java.lang.String str36 = post33.toString();
        post33.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest39 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest39.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext42 = null;
        createPostRequestToPostMapper31.mapBtoA(post33, createPostRequest39, mappingContext42);
        com.vntu.marenko.ualearning.server.model.Post post44 = new com.vntu.marenko.ualearning.server.model.Post();
        post44.setText("");
        java.lang.String str47 = post44.toString();
        java.lang.Integer int48 = post44.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest49 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str50 = createPostRequest49.getUsername();
        java.lang.String str51 = createPostRequest49.toString();
        ma.glasnost.orika.MappingContext mappingContext52 = null;
        createPostRequestToPostMapper31.mapBtoA(post44, createPostRequest49, mappingContext52);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository56 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper57 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository54, testRepository55, answerRepository56);
        ma.glasnost.orika.MapperFacade mapperFacade58 = null;
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade58);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType60 = submitResultRequestToDomainMapper57.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade75);
        createPostRequestToPostMapper31.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.TestController testController79 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl11, mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController80 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade75);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto82 = resultController80.getResult(52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNotNull(mapperFacade26);
        org.junit.Assert.assertNotNull(postType32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str36, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str47, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str51, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(resultType60);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        java.lang.Integer int3 = resultDescription0.getTestId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = resultDescription0.equals((java.lang.Object) post30);
        resultDescription0.setId((java.lang.Integer) 100);
        resultDescription0.setId((java.lang.Integer) 100);
        long long48 = resultDescription0.getMark();
        java.lang.Object obj49 = null;
        boolean boolean50 = resultDescription0.equals(obj49);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType24 = submitResultRequestToDomainMapper23.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper25 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig26 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType34 = submitResultRequestToDomainMapper31.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper35 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean37 = createPostRequestToPostMapper36.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = null;
        ma.glasnost.orika.MapperFacade mapperFacade39 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27, submitResultRequestToDomainMapper31, resultToDescriptionMapper35, createPostRequestToPostMapper36, postToDtoMapper38);
        postToDtoMapper25.setMapperFacade(mapperFacade39);
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade39);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository42 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl43 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository42);
        com.vntu.marenko.ualearning.server.controller.PostController postController44 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade39, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl43);
        com.vntu.marenko.ualearning.server.controller.PostController postController45 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade17, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl43);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto47 = postController45.getPost(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType24);
        org.junit.Assert.assertNotNull(resultType34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(mapperFacade39);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository25 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl26 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository24, tagRepository25);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper27 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig28 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType36 = submitResultRequestToDomainMapper33.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper37 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper38 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean39 = createPostRequestToPostMapper38.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper40 = null;
        ma.glasnost.orika.MapperFacade mapperFacade41 = mapperConfig28.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl29, submitResultRequestToDomainMapper33, resultToDescriptionMapper37, createPostRequestToPostMapper38, postToDtoMapper40);
        postToDtoMapper27.setMapperFacade(mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.TestController testController43 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl26, mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController44 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl23, mapperFacade41);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest45 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest45.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int48 = submitResultRequest45.getTestId();
        int int49 = submitResultRequest45.getTestId();
        submitResultRequest45.setTestId(0);
        java.util.List<java.lang.Integer> intList52 = submitResultRequest45.getAnswers();
        submitResultRequest45.setUserLogin("Answer(id=100, text=null, correct=false)");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto55 = resultController44.submitTest(submitResultRequest45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(resultType36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(mapperFacade41);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(intList52);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getPassword();
        com.vntu.marenko.ualearning.server.dto.UserShortDto userShortDto2 = new com.vntu.marenko.ualearning.server.dto.UserShortDto();
        boolean boolean3 = loginRequest0.equals((java.lang.Object) userShortDto2);
        loginRequest0.setLogin("AnswerDto(id=0, text=hi!)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        result0.setSubmitted(false);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList4 = result0.getAnswers();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList5 = result0.getAnswers();
        com.vntu.marenko.ualearning.server.model.User user6 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str7 = user6.getEmail();
        java.lang.String str8 = user6.getSurname();
        user6.setSurname("Tag(id=null, name=null)");
        int int11 = user6.getAge();
        java.lang.String str12 = user6.getPassword();
        boolean boolean13 = result0.equals((java.lang.Object) str12);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(answerList4);
        org.junit.Assert.assertNull(answerList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        post2.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.util.List<java.lang.String> strList15 = post2.getLikes();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        long long4 = user3.getRating();
        user3.setLogin("hi!");
        boolean boolean7 = tagDto0.equals((java.lang.Object) user3);
        java.lang.String str8 = user3.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.util.Date date4 = post0.getTimestamp();
        com.vntu.marenko.ualearning.server.model.Post post5 = new com.vntu.marenko.ualearning.server.model.Post();
        post5.setText("");
        java.lang.Integer int8 = post5.getId();
        post5.setUser("QuestionDto(id=0, text=null, answers=null)");
        boolean boolean11 = post0.equals((java.lang.Object) post5);
        post0.setUser("");
        java.util.List<java.lang.String> strList14 = post0.getLikes();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(date4);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        postDto0.setTimestamp("");
        postDto0.setId((int) (byte) 0);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto6 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str7 = postDto6.getLogin();
        java.lang.String[] strArray12 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        postDto6.setLikes((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = postDto6.getText();
        postDto6.setText("hi!");
        java.lang.String str19 = postDto6.toString();
        postDto6.setLogin("CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)");
        java.util.List<java.lang.String> strList22 = postDto6.getLikes();
        postDto0.setLikes(strList22);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PostDto(id=0, text=hi!, timestamp=null, login=null, likes=[LoginRequest(login=null, password=null), CreatePostRequest(text=null, username=null), Answer(id=null, text=null, correct=false), User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)])" + "'", str19, "PostDto(id=0, text=hi!, timestamp=null, login=null, likes=[LoginRequest(login=null, password=null), CreatePostRequest(text=null, username=null), Answer(id=null, text=null, correct=false), User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)])");
        org.junit.Assert.assertNotNull(strList22);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setMark(1L);
        java.lang.String str5 = resultDescription0.getTestName();
        resultDescription0.setId((java.lang.Integer) 100);
        resultDescription0.setTestId((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.Integer int17 = post14.getId();
        java.util.Date date18 = post14.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = null;
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper10.mapBtoA(post14, createPostRequest19, mappingContext20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType22 = createPostRequestToPostMapper10.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper23 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType24 = createPostRequestToPostMapper23.getBType();
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        post25.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest31 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest31.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        createPostRequestToPostMapper23.mapBtoA(post25, createPostRequest31, mappingContext34);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig36 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper46 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean47 = createPostRequestToPostMapper46.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper48 = null;
        ma.glasnost.orika.MapperFacade mapperFacade49 = mapperConfig36.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper46, postToDtoMapper48);
        com.vntu.marenko.ualearning.server.model.Post post50 = new com.vntu.marenko.ualearning.server.model.Post();
        post50.setText("");
        java.lang.Integer int53 = post50.getId();
        java.util.Date date54 = post50.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest55 = null;
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        createPostRequestToPostMapper46.mapBtoA(post50, createPostRequest55, mappingContext56);
        java.lang.String[] strArray70 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "TagDto(id=0, name=null)", "LoginRequest(login=null, password=null)", "Answer(id=null, text=null, correct=false)", "CreatePostRequest(text=null, username=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=null, username=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        post50.setLikes((java.util.List<java.lang.String>) strList71);
        java.lang.Integer int74 = post50.getId();
        java.lang.Integer int75 = post50.getId();
        ma.glasnost.orika.MappingContext mappingContext76 = null;
        createPostRequestToPostMapper10.mapAtoB(createPostRequest31, post50, mappingContext76);
        com.vntu.marenko.ualearning.server.model.Answer answer78 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str79 = answer78.getText();
        boolean boolean80 = createPostRequest31.equals((java.lang.Object) answer78);
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(date18);
        org.junit.Assert.assertNotNull(createPostRequestType22);
        org.junit.Assert.assertNotNull(postType24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertNotNull(mapperFacade49);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(date54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("TagDto(id=0, name=null)");
        java.lang.String str7 = testDescription0.toString();
        com.vntu.marenko.ualearning.server.model.Result result8 = new com.vntu.marenko.ualearning.server.model.Result();
        result8.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user11 = new com.vntu.marenko.ualearning.server.model.User();
        user11.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean15 = user11.equals((java.lang.Object) test14);
        user11.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result8.setUser(user11);
        boolean boolean19 = testDescription0.equals((java.lang.Object) user11);
        com.vntu.marenko.ualearning.server.model.Post post20 = new com.vntu.marenko.ualearning.server.model.Post();
        post20.setText("");
        java.lang.String str23 = post20.toString();
        java.lang.Integer int24 = post20.getId();
        java.lang.String[] strArray49 = new java.lang.String[] { "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "LoginRequest(login=null, password=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))", "", "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)", "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)", "Question(id=null, text=null, answers=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "Result(id=null, user=null, test=null, submitted=false, answers=null)", "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)", "ResultDescription(id=null, testId=100, testName=null, mark=0)", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)", "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)", "Question(id=null, text=null, answers=null)", "CreatePostRequest(text=null, username=null)", "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)", "QuestionDto(id=10, text=null, answers=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        post20.setLikes((java.util.List<java.lang.String>) strList50);
        boolean boolean53 = testDescription0.equals((java.lang.Object) post20);
        java.lang.String str54 = testDescription0.toString();
        java.lang.String str55 = testDescription0.getNameTest();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str7, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str23, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str54, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "TagDto(id=0, name=null)" + "'", str55, "TagDto(id=0, name=null)");
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType17 = createPostRequestToPostMapper0.getAType();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl19 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository18);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository20 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper21 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig22 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl23 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository26 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper27 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository24, testRepository25, answerRepository26);
        ma.glasnost.orika.MapperFacade mapperFacade28 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType30 = submitResultRequestToDomainMapper27.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper31 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper32 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean33 = createPostRequestToPostMapper32.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper34 = null;
        ma.glasnost.orika.MapperFacade mapperFacade35 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl23, submitResultRequestToDomainMapper27, resultToDescriptionMapper31, createPostRequestToPostMapper32, postToDtoMapper34);
        postToDtoMapper21.setMapperFacade(mapperFacade35);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig38 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl39 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository42 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper43 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository40, testRepository41, answerRepository42);
        ma.glasnost.orika.MapperFacade mapperFacade44 = null;
        submitResultRequestToDomainMapper43.setMapperFacade(mapperFacade44);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType46 = submitResultRequestToDomainMapper43.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper47 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper48 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean49 = createPostRequestToPostMapper48.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper50 = null;
        ma.glasnost.orika.MapperFacade mapperFacade51 = mapperConfig38.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl39, submitResultRequestToDomainMapper43, resultToDescriptionMapper47, createPostRequestToPostMapper48, postToDtoMapper50);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl52 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository53 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository54 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository55 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper56 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository53, testRepository54, answerRepository55);
        ma.glasnost.orika.MapperFacade mapperFacade57 = null;
        submitResultRequestToDomainMapper56.setMapperFacade(mapperFacade57);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType59 = submitResultRequestToDomainMapper56.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper60 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig61 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl62 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository63 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository65 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper66 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository63, testRepository64, answerRepository65);
        ma.glasnost.orika.MapperFacade mapperFacade67 = null;
        submitResultRequestToDomainMapper66.setMapperFacade(mapperFacade67);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType69 = submitResultRequestToDomainMapper66.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper70 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper71 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean72 = createPostRequestToPostMapper71.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper73 = null;
        ma.glasnost.orika.MapperFacade mapperFacade74 = mapperConfig61.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl62, submitResultRequestToDomainMapper66, resultToDescriptionMapper70, createPostRequestToPostMapper71, postToDtoMapper73);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig38.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl52, submitResultRequestToDomainMapper56, resultToDescriptionMapper60, createPostRequestToPostMapper71, postToDtoMapper75);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl77 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository20, mapperFacade35, userRepository37, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl52);
        com.vntu.marenko.ualearning.server.controller.UserController userController78 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl19, mapperFacade35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper79 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig80 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl81 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository82 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository83 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository84 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper85 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository82, testRepository83, answerRepository84);
        ma.glasnost.orika.MapperFacade mapperFacade86 = null;
        submitResultRequestToDomainMapper85.setMapperFacade(mapperFacade86);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType88 = submitResultRequestToDomainMapper85.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper89 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper90 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean91 = createPostRequestToPostMapper90.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper92 = null;
        ma.glasnost.orika.MapperFacade mapperFacade93 = mapperConfig80.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl81, submitResultRequestToDomainMapper85, resultToDescriptionMapper89, createPostRequestToPostMapper90, postToDtoMapper92);
        postToDtoMapper79.setMapperFacade(mapperFacade93);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController95 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl19, mapperFacade93);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository96 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl97 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository96);
        com.vntu.marenko.ualearning.server.controller.PostController postController98 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade93, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl97);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade93);
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(createPostRequestType17);
        org.junit.Assert.assertNotNull(resultType30);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(mapperFacade35);
        org.junit.Assert.assertNotNull(resultType46);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
        org.junit.Assert.assertNotNull(mapperFacade51);
        org.junit.Assert.assertNotNull(resultType59);
        org.junit.Assert.assertNotNull(resultType69);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
        org.junit.Assert.assertNotNull(mapperFacade74);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(resultType88);
        org.junit.Assert.assertEquals("'" + boolean91 + "' != '" + false + "'", boolean91, false);
        org.junit.Assert.assertNotNull(mapperFacade93);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.String str2 = question0.getText();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.User user3 = userServiceImpl1.getUser("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository25 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl26 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository24, tagRepository25);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper27 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig28 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType36 = submitResultRequestToDomainMapper33.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper37 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper38 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean39 = createPostRequestToPostMapper38.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper40 = null;
        ma.glasnost.orika.MapperFacade mapperFacade41 = mapperConfig28.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl29, submitResultRequestToDomainMapper33, resultToDescriptionMapper37, createPostRequestToPostMapper38, postToDtoMapper40);
        postToDtoMapper27.setMapperFacade(mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.TestController testController43 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl26, mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController44 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl23, mapperFacade41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList46 = resultServiceImpl23.getResultsForUser("LoginRequest(login=null, password=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(resultType36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(mapperFacade41);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto4 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto4.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean9 = answerDto7.equals((java.lang.Object) markComputerImpl8);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        int int14 = answerDto11.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto15 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl16 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean17 = answerDto15.equals((java.lang.Object) markComputerImpl16);
        int int18 = answerDto15.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto19.setText("hi!");
        java.lang.String str22 = answerDto19.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray23 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto7, answerDto10, answerDto11, answerDto15, answerDto19 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList24 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList24, answerDtoArray23);
        questionDto4.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList24);
        questionDto4.setId((int) (short) -1);
        int int29 = questionDto4.getId();
        boolean boolean30 = tag0.equals((java.lang.Object) int29);
        java.lang.String str31 = tag0.toString();
        java.lang.String str32 = tag0.getName();
        tag0.setName("ResultDto(id=0, user=null, test=null, submitted=false, answers=null, mark=0)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Tag(id=null, name=null)" + "'", str31, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        createPostRequest0.setText("User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)");
        java.lang.String str6 = createPostRequest0.getText();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)" + "'", str6, "User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)");
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        userDto0.setSurname("hi!");
        boolean boolean7 = userDto0.equals((java.lang.Object) 52);
        java.lang.String str8 = userDto0.getEmail();
        java.lang.String str9 = userDto0.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.Result result1 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user2 = new com.vntu.marenko.ualearning.server.model.User();
        user2.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test5 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean6 = user2.equals((java.lang.Object) test5);
        result1.setUser(user2);
        result0.setUser(user2);
        result0.setSubmitted(false);
        result0.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.model.Result result13 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int14 = result13.getId();
        com.vntu.marenko.ualearning.server.model.Test test15 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int16 = test15.getId();
        java.lang.Integer int17 = test15.getId();
        result13.setTest(test15);
        java.lang.Integer int19 = result13.getId();
        com.vntu.marenko.ualearning.server.model.Test test20 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int21 = test20.getId();
        java.lang.Integer int22 = test20.getId();
        test20.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int25 = test20.getCompletedCounter();
        java.lang.Integer int26 = test20.getCompletedCounter();
        result13.setTest(test20);
        com.vntu.marenko.ualearning.server.model.User user28 = result13.getUser();
        com.vntu.marenko.ualearning.server.model.Test test29 = result13.getTest();
        com.vntu.marenko.ualearning.server.model.Test test30 = result13.getTest();
        result0.setTest(test30);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription32 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int33 = resultDescription32.getId();
        java.lang.String str34 = resultDescription32.getTestName();
        resultDescription32.setTestId((java.lang.Integer) 100);
        java.lang.String str37 = resultDescription32.getTestName();
        java.lang.Integer int38 = resultDescription32.getId();
        java.lang.String str39 = resultDescription32.toString();
        java.lang.String str40 = resultDescription32.toString();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper41 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType42 = createPostRequestToPostMapper41.getBType();
        com.vntu.marenko.ualearning.server.model.Post post43 = new com.vntu.marenko.ualearning.server.model.Post();
        post43.setText("");
        java.lang.String str46 = post43.toString();
        post43.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest49 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest49.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext52 = null;
        createPostRequestToPostMapper41.mapBtoA(post43, createPostRequest49, mappingContext52);
        com.vntu.marenko.ualearning.server.model.Post post54 = new com.vntu.marenko.ualearning.server.model.Post();
        post54.setText("");
        java.lang.String str57 = post54.toString();
        java.lang.Integer int58 = post54.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest59 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str60 = createPostRequest59.getUsername();
        java.lang.String str61 = createPostRequest59.toString();
        ma.glasnost.orika.MappingContext mappingContext62 = null;
        createPostRequestToPostMapper41.mapBtoA(post54, createPostRequest59, mappingContext62);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto64 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str65 = postDto64.getLogin();
        java.lang.String[] strArray70 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        postDto64.setLikes((java.util.List<java.lang.String>) strList71);
        post54.setLikes((java.util.List<java.lang.String>) strList71);
        post54.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        boolean boolean77 = resultDescription32.equals((java.lang.Object) post54);
        boolean boolean78 = result0.equals((java.lang.Object) resultDescription32);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(user28);
        org.junit.Assert.assertNotNull(test29);
        org.junit.Assert.assertNotNull(test30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str39, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str40, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertNotNull(postType42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str46, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str57, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str61, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str54 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto55 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto55.setId(1);
        int int58 = tagDto55.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto59 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto59.setId(1);
        java.lang.String str62 = tagDto59.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto63 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str64 = tagDto63.toString();
        java.lang.String str65 = tagDto63.getName();
        com.vntu.marenko.ualearning.server.model.Test test66 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int67 = test66.getId();
        java.lang.Integer int68 = test66.getId();
        test66.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList71 = test66.getTags();
        boolean boolean72 = tagDto63.equals((java.lang.Object) tagList71);
        tagDto63.setName("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto75 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str76 = tagDto75.toString();
        java.lang.String str77 = tagDto75.getName();
        java.lang.String str78 = tagDto75.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto79 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str80 = tagDto79.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray81 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto55, tagDto59, tagDto63, tagDto75, tagDto79 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList82 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList82, tagDtoArray81);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList82);
        testDto0.setDescriptionTest("Post(id=10, text=, timestamp=null, user=null, likes=null)");
        testDto0.setCompletedCounter((java.lang.Integer) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])" + "'", str54, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "TagDto(id=0, name=null)" + "'", str64, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(tagList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "TagDto(id=0, name=null)" + "'", str76, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "TagDto(id=0, name=null)" + "'", str80, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNotNull(tagDtoArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer0.setId((java.lang.Integer) 0);
        answer0.setCorrect(false);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper16 = null;
        ma.glasnost.orika.Mapper[] mapperArray18 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray19 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray18;
        objMapperArray19[0] = objMapper16;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.setUsedMappers(objMapperArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(mapperArray18);
        org.junit.Assert.assertNotNull(objMapperArray19);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (short) 10);
        java.lang.String str3 = userDto0.getEmail();
        int int4 = userDto0.getAge();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        user5.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType14 = submitResultRequestToDomainMapper11.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade15);
        boolean boolean17 = user5.equals((java.lang.Object) submitResultRequestToDomainMapper11);
        com.vntu.marenko.ualearning.server.model.Result result18 = new com.vntu.marenko.ualearning.server.model.Result();
        result18.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user21 = new com.vntu.marenko.ualearning.server.model.User();
        user21.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean25 = user21.equals((java.lang.Object) test24);
        user21.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result18.setUser(user21);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest29 = null;
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        submitResultRequestToDomainMapper11.mapBtoA(result18, submitResultRequest29, mappingContext30);
        com.vntu.marenko.ualearning.server.model.User user32 = result18.getUser();
        com.vntu.marenko.ualearning.server.model.User user33 = result18.getUser();
        result18.setId((java.lang.Integer) 100);
        boolean boolean36 = userDto0.equals((java.lang.Object) result18);
        userDto0.setName("User(login=null, password=null, name=null, surname=null, age=0, institution=null, email=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), rating=0)");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(submitResultRequestType14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNotNull(user33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.Integer int17 = post14.getId();
        java.util.Date date18 = post14.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = null;
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper10.mapBtoA(post14, createPostRequest19, mappingContext20);
        java.lang.String[] strArray34 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "TagDto(id=0, name=null)", "LoginRequest(login=null, password=null)", "Answer(id=null, text=null, correct=false)", "CreatePostRequest(text=null, username=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=null, username=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        post14.setLikes((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = post14.getId();
        java.lang.Integer int39 = post14.getId();
        post14.setUser("QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!)])");
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(date18);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating(0);
        userDto0.setInstitution("UserRequest(login=null, password=null, name=null, surname=null, age=100, institution=null, email=UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0))");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto5 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str6 = postDto5.getLogin();
        postDto5.setTimestamp("");
        postDto5.setId((int) (byte) 0);
        postDto5.setId((int) (byte) 10);
        postDto5.setTimestamp("AnswerDto(id=0, text=Tag(id=null, name=null))");
        boolean boolean15 = userDto0.equals((java.lang.Object) "AnswerDto(id=0, text=Tag(id=null, name=null))");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user1 = new com.vntu.marenko.ualearning.server.model.User();
        user1.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean5 = user1.equals((java.lang.Object) test4);
        result0.setUser(user1);
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int8 = test7.getId();
        java.lang.Integer int9 = test7.getId();
        test7.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        result0.setTest(test7);
        test7.setId((java.lang.Integer) (-1));
        java.lang.Integer int15 = test7.getCompletedCounter();
        java.lang.String str16 = test7.getDescriptionTest();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str16, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId(0);
        postDto0.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        java.lang.String str5 = postDto0.getText();
        postDto0.setText("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.lang.String str8 = postDto0.getLogin();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str5, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getSurname();
        java.lang.String str4 = userDto0.getInstitution();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper3 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = resultToDescriptionMapper3.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper3.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType6 = resultToDescriptionMapper3.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType7 = resultToDescriptionMapper3.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper8 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean9 = createPostRequestToPostMapper8.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig10 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl11 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType18 = submitResultRequestToDomainMapper15.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper19 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper20 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean21 = createPostRequestToPostMapper20.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = null;
        ma.glasnost.orika.MapperFacade mapperFacade23 = mapperConfig10.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl11, submitResultRequestToDomainMapper15, resultToDescriptionMapper19, createPostRequestToPostMapper20, postToDtoMapper22);
        createPostRequestToPostMapper8.setMapperFacade(mapperFacade23);
        resultToDescriptionMapper3.setMapperFacade(mapperFacade23);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController26 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = userServiceImpl1.login("Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))", "PostDto(id=100, text=null, timestamp=null, login=null, likes=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertNotNull(resultDescriptionType6);
        org.junit.Assert.assertNotNull(resultType7);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNotNull(resultType18);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNotNull(mapperFacade23);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating(0);
        java.lang.String str3 = userDto0.getLogin();
        userDto0.setSurname("LoginRequest(login=null, password=hi!)");
        userDto0.setName("");
        java.lang.String str8 = userDto0.getName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setAge((int) '4');
        user0.setEmail("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        user0.setPassword("Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
        java.lang.String str9 = user0.toString();
        user0.setSurname("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)" + "'", str9, "User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("LoginRequest(login=Tag(id=null, name=null), password=null)");
        java.lang.Object obj4 = null;
        boolean boolean5 = createPostRequest0.equals(obj4);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        int int1 = testDescription0.getId();
        java.lang.String str2 = testDescription0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "TestDescription(id=0, nameTest=null)" + "'", str2, "TestDescription(id=0, nameTest=null)");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str54 = testDto0.toString();
        java.lang.String str55 = testDto0.toString();
        testDto0.setId(35);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])" + "'", str54, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])" + "'", str55, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        test0.setId((java.lang.Integer) 1);
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList7 = test0.getQuestions();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(questionList7);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.model.Question question6 = new com.vntu.marenko.ualearning.server.model.Question();
        question6.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str9 = question6.getText();
        boolean boolean10 = resultDto0.equals((java.lang.Object) str9);
        java.lang.String str11 = resultDto0.toString();
        int int12 = resultDto0.getId();
        resultDto0.setMark((long) (-1));
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str9, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ResultDto(id=100, user=null, test=null, submitted=false, answers=null, mark=0)" + "'", str11, "ResultDto(id=100, user=null, test=null, submitted=false, answers=null, mark=0)");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        com.vntu.marenko.ualearning.server.model.Post post13 = new com.vntu.marenko.ualearning.server.model.Post();
        post13.setText("");
        java.lang.String str16 = post13.toString();
        java.lang.Integer int17 = post13.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest18 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str19 = createPostRequest18.getUsername();
        java.lang.String str20 = createPostRequest18.toString();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper0.mapBtoA(post13, createPostRequest18, mappingContext21);
        java.lang.String str23 = createPostRequest18.toString();
        java.lang.String str24 = createPostRequest18.getText();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str16, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str20, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str23, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        java.lang.String[] strArray6 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        postDto0.setLikes((java.util.List<java.lang.String>) strList7);
        java.lang.String str10 = postDto0.getText();
        postDto0.setText("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        java.lang.String str13 = postDto0.getTimestamp();
        postDto0.setId((int) 'a');
        java.util.List<java.lang.String> strList16 = null;
        postDto0.setLikes(strList16);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int8 = test3.getCompletedCounter();
        result0.setTest(test3);
        com.vntu.marenko.ualearning.server.model.Test test10 = result0.getTest();
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList11 = test10.getQuestions();
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(test10);
        org.junit.Assert.assertNull(questionList11);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType2 = createPostRequestToPostMapper0.getAType();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest17 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest17.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post20 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper13.mapAtoB(createPostRequest17, post20, mappingContext21);
        com.vntu.marenko.ualearning.server.model.Post post23 = new com.vntu.marenko.ualearning.server.model.Post();
        post23.setText("");
        java.lang.String str26 = post23.toString();
        java.util.Date date27 = null;
        post23.setTimestamp(date27);
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest17, post23, mappingContext29);
        java.lang.String str31 = createPostRequest17.getText();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertNotNull(createPostRequestType2);
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str26, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str31, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType19 = postToDtoMapper0.getBType();
        java.lang.Boolean boolean20 = postToDtoMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto21 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str22 = postDto21.getLogin();
        postDto21.setTimestamp("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        java.lang.Integer int29 = post25.getId();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        postToDtoMapper0.mapBtoA(postDto21, post25, mappingContext30);
        postDto21.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository35 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl36 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository34, tagRepository35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig38 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl39 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository42 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper43 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository40, testRepository41, answerRepository42);
        ma.glasnost.orika.MapperFacade mapperFacade44 = null;
        submitResultRequestToDomainMapper43.setMapperFacade(mapperFacade44);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType46 = submitResultRequestToDomainMapper43.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper47 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper48 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean49 = createPostRequestToPostMapper48.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper50 = null;
        ma.glasnost.orika.MapperFacade mapperFacade51 = mapperConfig38.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl39, submitResultRequestToDomainMapper43, resultToDescriptionMapper47, createPostRequestToPostMapper48, postToDtoMapper50);
        postToDtoMapper37.setMapperFacade(mapperFacade51);
        com.vntu.marenko.ualearning.server.controller.TestController testController53 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl36, mapperFacade51);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl55 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository54);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper56 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig57 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl58 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository59 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository60 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository61 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper62 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository59, testRepository60, answerRepository61);
        ma.glasnost.orika.MapperFacade mapperFacade63 = null;
        submitResultRequestToDomainMapper62.setMapperFacade(mapperFacade63);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType65 = submitResultRequestToDomainMapper62.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper66 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper67 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean68 = createPostRequestToPostMapper67.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper69 = null;
        ma.glasnost.orika.MapperFacade mapperFacade70 = mapperConfig57.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl58, submitResultRequestToDomainMapper62, resultToDescriptionMapper66, createPostRequestToPostMapper67, postToDtoMapper69);
        postToDtoMapper56.setMapperFacade(mapperFacade70);
        com.vntu.marenko.ualearning.server.controller.UserController userController72 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl55, mapperFacade70);
        com.vntu.marenko.ualearning.server.controller.TestController testController73 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl36, mapperFacade70);
        boolean boolean74 = postDto21.equals((java.lang.Object) testServiceImpl36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList76 = testServiceImpl36.getTestsWithTag((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertNotNull(postType18);
        org.junit.Assert.assertNotNull(postDtoType19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(resultType46);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
        org.junit.Assert.assertNotNull(mapperFacade51);
        org.junit.Assert.assertNotNull(resultType65);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
        org.junit.Assert.assertNotNull(mapperFacade70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.String str7 = testDescription0.getNameTest();
        java.lang.Class<?> wildcardClass8 = testDescription0.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str7, "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str54 = testDto0.getDescriptionTest();
        testDto0.setId((int) '4');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        java.lang.Boolean boolean4 = resultToDescriptionMapper1.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig5 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl6 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository9 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper10 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository7, testRepository8, answerRepository9);
        ma.glasnost.orika.MapperFacade mapperFacade11 = null;
        submitResultRequestToDomainMapper10.setMapperFacade(mapperFacade11);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType13 = submitResultRequestToDomainMapper10.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper14 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper15 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean16 = createPostRequestToPostMapper15.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper17 = null;
        ma.glasnost.orika.MapperFacade mapperFacade18 = mapperConfig5.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl6, submitResultRequestToDomainMapper10, resultToDescriptionMapper14, createPostRequestToPostMapper15, postToDtoMapper17);
        resultToDescriptionMapper1.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.MapperFacade mapperFacade25 = null;
        submitResultRequestToDomainMapper24.setMapperFacade(mapperFacade25);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType27 = submitResultRequestToDomainMapper24.getAType();
        com.vntu.marenko.ualearning.server.model.Result result28 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int29 = result28.getId();
        com.vntu.marenko.ualearning.server.model.Test test30 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int31 = test30.getId();
        java.lang.Integer int32 = test30.getId();
        result28.setTest(test30);
        java.lang.Integer int34 = result28.getId();
        com.vntu.marenko.ualearning.server.model.Test test35 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int36 = test35.getId();
        java.lang.Integer int37 = test35.getId();
        test35.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int40 = test35.getCompletedCounter();
        java.lang.Integer int41 = test35.getCompletedCounter();
        result28.setTest(test35);
        com.vntu.marenko.ualearning.server.model.User user43 = result28.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest44 = null;
        ma.glasnost.orika.MappingContext mappingContext45 = null;
        submitResultRequestToDomainMapper24.mapBtoA(result28, submitResultRequest44, mappingContext45);
        java.lang.String str47 = result28.toString();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest48 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str49 = userRequest48.getInstitution();
        userRequest48.setEmail("AnswerDto(id=0, text=null)");
        userRequest48.setInstitution("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        userRequest48.setPassword("Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription56 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int57 = resultDescription56.getId();
        java.lang.Integer int58 = resultDescription56.getId();
        boolean boolean59 = userRequest48.equals((java.lang.Object) resultDescription56);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto60 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto60.setInstitution("");
        userDto60.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.String str65 = userDto60.getName();
        boolean boolean66 = resultDescription56.equals((java.lang.Object) userDto60);
        resultDescription56.setTestName("QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!)])");
        ma.glasnost.orika.MappingContext mappingContext69 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.mapAtoB(result28, resultDescription56, mappingContext69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(resultType13);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(mapperFacade18);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(submitResultRequestType27);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(user43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Result(id=null, user=null, test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)" + "'", str47, "Result(id=null, user=null, test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        java.lang.String str2 = loginRequest0.toString();
        loginRequest0.setLogin("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        java.lang.String str5 = loginRequest0.toString();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper7 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper8 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType9 = createPostRequestToPostMapper8.getBType();
        com.vntu.marenko.ualearning.server.model.Post post10 = new com.vntu.marenko.ualearning.server.model.Post();
        post10.setText("");
        java.lang.String str13 = post10.toString();
        post10.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest16 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest16.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext19 = null;
        createPostRequestToPostMapper8.mapBtoA(post10, createPostRequest16, mappingContext19);
        com.vntu.marenko.ualearning.server.model.Post post21 = new com.vntu.marenko.ualearning.server.model.Post();
        post21.setText("");
        java.lang.String str24 = post21.toString();
        java.lang.Integer int25 = post21.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest26 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str27 = createPostRequest26.getUsername();
        java.lang.String str28 = createPostRequest26.toString();
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        createPostRequestToPostMapper8.mapBtoA(post21, createPostRequest26, mappingContext29);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper31 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType32 = createPostRequestToPostMapper31.getBType();
        com.vntu.marenko.ualearning.server.model.Post post33 = new com.vntu.marenko.ualearning.server.model.Post();
        post33.setText("");
        java.lang.String str36 = post33.toString();
        post33.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest39 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest39.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext42 = null;
        createPostRequestToPostMapper31.mapBtoA(post33, createPostRequest39, mappingContext42);
        ma.glasnost.orika.MappingContext mappingContext44 = null;
        createPostRequestToPostMapper7.mapAtoB(createPostRequest26, post33, mappingContext44);
        boolean boolean46 = answerDto6.equals((java.lang.Object) mappingContext44);
        int int47 = answerDto6.getId();
        answerDto6.setId((int) '4');
        boolean boolean50 = loginRequest0.equals((java.lang.Object) '4');
        loginRequest0.setLogin("Result(id=100, user=null, test=null, submitted=false, answers=null)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str2, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginRequest(login=Result(id=null, user=null, test=null, submitted=false, answers=null), password=null)" + "'", str5, "LoginRequest(login=Result(id=null, user=null, test=null, submitted=false, answers=null), password=null)");
        org.junit.Assert.assertNotNull(postType9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str13, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str24, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str28, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str36, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setLogin("TagDto(id=0, name=null)");
        java.lang.String str3 = userDto0.getSurname();
        java.lang.String str4 = userDto0.getInstitution();
        java.lang.String str5 = userDto0.getSurname();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest0.setTestId((int) (byte) 100);
        int int5 = submitResultRequest0.getTestId();
        submitResultRequest0.setUserLogin("SubmitResultRequest(userLogin=null, testId=0, answers=null)");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl22 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository25 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper26 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository23, testRepository24, answerRepository25);
        ma.glasnost.orika.MapperFacade mapperFacade27 = null;
        submitResultRequestToDomainMapper26.setMapperFacade(mapperFacade27);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType29 = submitResultRequestToDomainMapper26.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper30 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig31 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl32 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository35 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper36 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository33, testRepository34, answerRepository35);
        ma.glasnost.orika.MapperFacade mapperFacade37 = null;
        submitResultRequestToDomainMapper36.setMapperFacade(mapperFacade37);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType39 = submitResultRequestToDomainMapper36.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper40 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper41 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean42 = createPostRequestToPostMapper41.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper43 = null;
        ma.glasnost.orika.MapperFacade mapperFacade44 = mapperConfig31.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl32, submitResultRequestToDomainMapper36, resultToDescriptionMapper40, createPostRequestToPostMapper41, postToDtoMapper43);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper45 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade46 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl22, submitResultRequestToDomainMapper26, resultToDescriptionMapper30, createPostRequestToPostMapper41, postToDtoMapper45);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper47 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType48 = createPostRequestToPostMapper47.getBType();
        com.vntu.marenko.ualearning.server.model.Post post49 = new com.vntu.marenko.ualearning.server.model.Post();
        post49.setText("");
        java.lang.String str52 = post49.toString();
        post49.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest55 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest55.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext58 = null;
        createPostRequestToPostMapper47.mapBtoA(post49, createPostRequest55, mappingContext58);
        com.vntu.marenko.ualearning.server.model.Post post60 = new com.vntu.marenko.ualearning.server.model.Post();
        post60.setText("");
        java.lang.String str63 = post60.toString();
        java.lang.Integer int64 = post60.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest65 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str66 = createPostRequest65.getUsername();
        java.lang.String str67 = createPostRequest65.toString();
        ma.glasnost.orika.MappingContext mappingContext68 = null;
        createPostRequestToPostMapper47.mapBtoA(post60, createPostRequest65, mappingContext68);
        java.lang.String str70 = createPostRequest65.toString();
        com.vntu.marenko.ualearning.server.model.Post post71 = new com.vntu.marenko.ualearning.server.model.Post();
        post71.setText("");
        java.lang.String str74 = post71.toString();
        post71.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext77 = null;
        createPostRequestToPostMapper41.mapAtoB(createPostRequest65, post71, mappingContext77);
        boolean boolean79 = submitResultRequest0.equals((java.lang.Object) createPostRequest65);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertNotNull(resultType29);
        org.junit.Assert.assertNotNull(resultType39);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
        org.junit.Assert.assertNotNull(mapperFacade44);
        org.junit.Assert.assertNotNull(mapperFacade46);
        org.junit.Assert.assertNotNull(postType48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str52, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str63, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str67, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str70, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str74, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getTestId();
        java.lang.String str7 = resultDescription0.getTestName();
        resultDescription0.setTestName("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)");
        java.lang.Integer int10 = resultDescription0.getTestId();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        int int8 = userRequest0.getAge();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto9 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str10 = testDto9.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto11 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str12 = tagDto11.toString();
        java.lang.String str13 = tagDto11.getName();
        com.vntu.marenko.ualearning.server.model.User user14 = new com.vntu.marenko.ualearning.server.model.User();
        long long15 = user14.getRating();
        user14.setLogin("hi!");
        boolean boolean18 = tagDto11.equals((java.lang.Object) user14);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto19 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str20 = tagDto19.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto21 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto21.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto24 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str25 = tagDto24.toString();
        java.lang.String str26 = tagDto24.getName();
        com.vntu.marenko.ualearning.server.model.Test test27 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int28 = test27.getId();
        java.lang.Integer int29 = test27.getId();
        test27.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList32 = test27.getTags();
        boolean boolean33 = tagDto24.equals((java.lang.Object) tagList32);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto34 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto34.setId(1);
        boolean boolean38 = tagDto34.equals((java.lang.Object) (-1L));
        int int39 = tagDto34.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto40 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto40.setId(1);
        java.lang.String str43 = tagDto40.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto44 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str45 = tagDto44.toString();
        java.lang.String str46 = tagDto44.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto47 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str48 = tagDto47.toString();
        java.lang.String str49 = tagDto47.getName();
        com.vntu.marenko.ualearning.server.model.Test test50 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int51 = test50.getId();
        java.lang.Integer int52 = test50.getId();
        test50.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList55 = test50.getTags();
        boolean boolean56 = tagDto47.equals((java.lang.Object) tagList55);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray57 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto11, tagDto19, tagDto21, tagDto24, tagDto34, tagDto40, tagDto44, tagDto47 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList58 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList58, tagDtoArray57);
        testDto9.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList58);
        testDto9.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.Integer int63 = testDto9.getCompletedCounter();
        testDto9.setDescriptionTest("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        boolean boolean66 = userRequest0.equals((java.lang.Object) "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        userRequest0.setEmail("Answer(id=0, text=null, correct=false)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str10, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "TagDto(id=0, name=null)" + "'", str12, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "TagDto(id=0, name=null)" + "'", str20, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "TagDto(id=0, name=null)" + "'", str25, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(tagList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "TagDto(id=0, name=null)" + "'", str45, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "TagDto(id=0, name=null)" + "'", str48, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(tagList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(tagDtoArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto0.setText("hi!");
        int int3 = answerDto0.getId();
        java.lang.String str4 = answerDto0.getText();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        post0.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str6 = post0.getUser();
        post0.setText("Question(id=null, text=null, answers=null)");
        post0.setText("UserRequest(login=CreatePostRequest(text=null, username=null), password=QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null), name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int8 = test3.getCompletedCounter();
        result0.setTest(test3);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList10 = result0.getAnswers();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList11 = result0.getAnswers();
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(answerList10);
        org.junit.Assert.assertNull(answerList11);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getPassword();
        userRequest0.setInstitution("Answer(id=-1, text=null, correct=true)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest0.setTestId((int) (byte) 100);
        submitResultRequest0.setUserLogin("SubmitResultRequest(userLogin=ResultDescription(id=null, testId=100, testName=null, mark=0), testId=0, answers=[1, 1, 100, 0, 0])");
        java.lang.String str7 = submitResultRequest0.getUserLogin();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SubmitResultRequest(userLogin=ResultDescription(id=null, testId=100, testName=null, mark=0), testId=0, answers=[1, 1, 100, 0, 0])" + "'", str7, "SubmitResultRequest(userLogin=ResultDescription(id=null, testId=100, testName=null, mark=0), testId=0, answers=[1, 1, 100, 0, 0])");
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        long long4 = resultDto0.getMark();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList5 = resultDto0.getAnswers();
        resultDto0.setSubmitted(false);
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(answerDtoList5);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getInstitution();
        java.lang.String str5 = user0.getLogin();
        java.lang.String str6 = user0.toString();
        java.lang.String str7 = user0.getLogin();
        java.lang.String str8 = user0.getInstitution();
        java.lang.String str9 = user0.getName();
        user0.setName("CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=null)");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)" + "'", str6, "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getEmail();
        java.lang.String str4 = userRequest0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto18 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        int int19 = postDto18.getId();
        postDto18.setId((int) (byte) -1);
        java.lang.String str22 = postDto18.getLogin();
        postDto18.setTimestamp("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        java.lang.Integer int29 = post25.getId();
        java.util.Date date30 = null;
        post25.setTimestamp(date30);
        java.lang.Integer int32 = post25.getId();
        java.lang.Integer int33 = post25.getId();
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        postToDtoMapper0.mapBtoA(postDto18, post25, mappingContext34);
        int int36 = postDto18.getId();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto0.setLogin("Tag(id=null, name=null)");
        java.lang.String str7 = userDto0.getLogin();
        java.lang.String str8 = userDto0.getEmail();
        userDto0.setAge((int) '4');
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Tag(id=null, name=null)" + "'", str7, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int8 = test3.getCompletedCounter();
        result0.setTest(test3);
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList10 = test3.getQuestions();
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(questionList10);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.Integer int3 = post0.getId();
        post0.setId((java.lang.Integer) (-1));
        java.util.Date date6 = null;
        post0.setTimestamp(date6);
        java.lang.String str8 = post0.toString();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Post(id=-1, text=, timestamp=null, user=null, likes=null)" + "'", str8, "Post(id=-1, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository21 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper22 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository19, testRepository20, answerRepository21);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType23 = submitResultRequestToDomainMapper22.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        submitResultRequestToDomainMapper22.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository41 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl42 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository41);
        com.vntu.marenko.ualearning.server.controller.PostController postController43 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade38, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl42);
        com.vntu.marenko.ualearning.server.controller.PostController postController44 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade16, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl42);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post46 = postServiceImpl42.getPost(100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNotNull(resultType23);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper81 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper82 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        java.lang.Boolean boolean83 = resultToDescriptionMapper82.favorsExtension();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + false + "'", boolean83, false);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str1 = user0.getEmail();
        java.lang.String str2 = user0.getSurname();
        user0.setEmail("Answer(id=null, text=null, correct=false)");
        int int5 = user0.getAge();
        java.lang.String str6 = user0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Answer(id=null, text=null, correct=false)" + "'", str6, "Answer(id=null, text=null, correct=false)");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        int int52 = testDto0.getId();
        java.lang.String str53 = testDto0.getDescriptionTest();
        java.lang.String str54 = testDto0.getDescriptionTest();
        java.util.List<com.vntu.marenko.ualearning.server.dto.QuestionDto> questionDtoList55 = testDto0.getQuestions();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(questionDtoList55);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper2 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType3 = createPostRequestToPostMapper2.getBType();
        com.vntu.marenko.ualearning.server.model.Post post4 = new com.vntu.marenko.ualearning.server.model.Post();
        post4.setText("");
        java.lang.String str7 = post4.toString();
        post4.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest10 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest10.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext13 = null;
        createPostRequestToPostMapper2.mapBtoA(post4, createPostRequest10, mappingContext13);
        com.vntu.marenko.ualearning.server.model.Post post15 = new com.vntu.marenko.ualearning.server.model.Post();
        post15.setText("");
        java.lang.String str18 = post15.toString();
        java.lang.Integer int19 = post15.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest20 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str21 = createPostRequest20.getUsername();
        java.lang.String str22 = createPostRequest20.toString();
        ma.glasnost.orika.MappingContext mappingContext23 = null;
        createPostRequestToPostMapper2.mapBtoA(post15, createPostRequest20, mappingContext23);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper25 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType26 = createPostRequestToPostMapper25.getBType();
        com.vntu.marenko.ualearning.server.model.Post post27 = new com.vntu.marenko.ualearning.server.model.Post();
        post27.setText("");
        java.lang.String str30 = post27.toString();
        post27.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest33 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest33.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext36 = null;
        createPostRequestToPostMapper25.mapBtoA(post27, createPostRequest33, mappingContext36);
        ma.glasnost.orika.MappingContext mappingContext38 = null;
        createPostRequestToPostMapper1.mapAtoB(createPostRequest20, post27, mappingContext38);
        boolean boolean40 = answerDto0.equals((java.lang.Object) mappingContext38);
        int int41 = answerDto0.getId();
        answerDto0.setText("Post(id=null, text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), timestamp=Sat Jun 18 18:46:57 EEST 2022, user=null, likes=null)");
        org.junit.Assert.assertNotNull(postType3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str7, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str18, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str22, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str30, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.toString();
        userRequest0.setLogin("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        userRequest0.setLogin("Tag(id=null, name=ResultDescription(id=null, testId=100, testName=null, mark=0))");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str3, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (short) 10);
        userDto0.setLogin("");
        int int5 = userDto0.getAge();
        userDto0.setAge(0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        result7.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user10 = new com.vntu.marenko.ualearning.server.model.User();
        user10.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean14 = user10.equals((java.lang.Object) test13);
        user10.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result7.setUser(user10);
        com.vntu.marenko.ualearning.server.model.Question question18 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int19 = question18.getId();
        java.lang.Integer int20 = question18.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer21 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer22 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer22.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray25 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer21, answer22 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList26 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList26, answerArray25);
        question18.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        result7.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        result0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList26);
        result0.setId((java.lang.Integer) 52);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(answerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.lang.Integer int4 = post0.getId();
        java.util.Date date5 = null;
        post0.setTimestamp(date5);
        java.lang.String str7 = post0.getText();
        java.util.Date date8 = post0.getTimestamp();
        java.lang.Integer int9 = post0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(date8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest2 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str3 = userRequest2.getName();
        java.lang.String str4 = userRequest2.getName();
        java.lang.String str5 = userRequest2.getName();
        boolean boolean6 = loginRequest0.equals((java.lang.Object) userRequest2);
        userRequest2.setName("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType19 = postToDtoMapper0.getBType();
        java.lang.Boolean boolean20 = postToDtoMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto21 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str22 = postDto21.getLogin();
        postDto21.setTimestamp("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        java.lang.Integer int29 = post25.getId();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        postToDtoMapper0.mapBtoA(postDto21, post25, mappingContext30);
        postDto21.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository35 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl36 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository34, tagRepository35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig38 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl39 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository42 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper43 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository40, testRepository41, answerRepository42);
        ma.glasnost.orika.MapperFacade mapperFacade44 = null;
        submitResultRequestToDomainMapper43.setMapperFacade(mapperFacade44);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType46 = submitResultRequestToDomainMapper43.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper47 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper48 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean49 = createPostRequestToPostMapper48.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper50 = null;
        ma.glasnost.orika.MapperFacade mapperFacade51 = mapperConfig38.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl39, submitResultRequestToDomainMapper43, resultToDescriptionMapper47, createPostRequestToPostMapper48, postToDtoMapper50);
        postToDtoMapper37.setMapperFacade(mapperFacade51);
        com.vntu.marenko.ualearning.server.controller.TestController testController53 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl36, mapperFacade51);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl55 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository54);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper56 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig57 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl58 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository59 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository60 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository61 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper62 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository59, testRepository60, answerRepository61);
        ma.glasnost.orika.MapperFacade mapperFacade63 = null;
        submitResultRequestToDomainMapper62.setMapperFacade(mapperFacade63);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType65 = submitResultRequestToDomainMapper62.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper66 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper67 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean68 = createPostRequestToPostMapper67.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper69 = null;
        ma.glasnost.orika.MapperFacade mapperFacade70 = mapperConfig57.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl58, submitResultRequestToDomainMapper62, resultToDescriptionMapper66, createPostRequestToPostMapper67, postToDtoMapper69);
        postToDtoMapper56.setMapperFacade(mapperFacade70);
        com.vntu.marenko.ualearning.server.controller.UserController userController72 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl55, mapperFacade70);
        com.vntu.marenko.ualearning.server.controller.TestController testController73 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl36, mapperFacade70);
        boolean boolean74 = postDto21.equals((java.lang.Object) testServiceImpl36);
        postDto21.setId(1);
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto77 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto77.setId(100);
        resultDto77.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto82 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto82.setRating((int) (byte) -1);
        userDto82.setLogin("LoginRequest(login=null, password=null)");
        resultDto77.setUser(userDto82);
        boolean boolean88 = postDto21.equals((java.lang.Object) resultDto77);
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertNotNull(postType18);
        org.junit.Assert.assertNotNull(postDtoType19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(resultType46);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
        org.junit.Assert.assertNotNull(mapperFacade51);
        org.junit.Assert.assertNotNull(resultType65);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
        org.junit.Assert.assertNotNull(mapperFacade70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        com.vntu.marenko.ualearning.server.model.User user26 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str27 = user26.getEmail();
        java.lang.String str28 = user26.getSurname();
        result7.setUser(user26);
        result7.setId((java.lang.Integer) 0);
        com.vntu.marenko.ualearning.server.model.User user32 = null;
        result7.setUser(user32);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList34 = result7.getAnswers();
        java.lang.String str35 = result7.toString();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(answerList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Result(id=0, user=null, test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)" + "'", str35, "Result(id=0, user=null, test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setEmail("hi!");
        user25.setSurname("hi!");
        user25.setInstitution("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        boolean boolean32 = questionDto0.equals((java.lang.Object) user25);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList33 = questionDto0.getAnswers();
        questionDto0.setId((int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(answerDtoList33);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType23 = createPostRequestToPostMapper22.getBType();
        com.vntu.marenko.ualearning.server.model.Post post24 = new com.vntu.marenko.ualearning.server.model.Post();
        post24.setText("");
        java.lang.String str27 = post24.toString();
        post24.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest30 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest30.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext33 = null;
        createPostRequestToPostMapper22.mapBtoA(post24, createPostRequest30, mappingContext33);
        com.vntu.marenko.ualearning.server.model.Post post35 = new com.vntu.marenko.ualearning.server.model.Post();
        post35.setText("");
        java.lang.String str38 = post35.toString();
        java.lang.Integer int39 = post35.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest40 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str41 = createPostRequest40.getUsername();
        java.lang.String str42 = createPostRequest40.toString();
        ma.glasnost.orika.MappingContext mappingContext43 = null;
        createPostRequestToPostMapper22.mapBtoA(post35, createPostRequest40, mappingContext43);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper52 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig53 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl54 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository56 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository57 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper58 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository55, testRepository56, answerRepository57);
        ma.glasnost.orika.MapperFacade mapperFacade59 = null;
        submitResultRequestToDomainMapper58.setMapperFacade(mapperFacade59);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType61 = submitResultRequestToDomainMapper58.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper62 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper63 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean64 = createPostRequestToPostMapper63.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper65 = null;
        ma.glasnost.orika.MapperFacade mapperFacade66 = mapperConfig53.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl54, submitResultRequestToDomainMapper58, resultToDescriptionMapper62, createPostRequestToPostMapper63, postToDtoMapper65);
        postToDtoMapper52.setMapperFacade(mapperFacade66);
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade66);
        createPostRequestToPostMapper22.setMapperFacade(mapperFacade66);
        com.vntu.marenko.ualearning.server.controller.TestController testController70 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade66);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto72 = testController70.getTest((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(postType23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str27, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str38, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str42, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertNotNull(resultType61);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(mapperFacade66);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto0.setLogin("Tag(id=null, name=null)");
        userDto0.setInstitution("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        java.lang.String str9 = userDto0.getSurname();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str9, "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.lang.String str3 = resultDto0.toString();
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto4 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto4.setId(100);
        resultDto4.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto9 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto9.setRating((int) (byte) -1);
        userDto9.setLogin("LoginRequest(login=null, password=null)");
        resultDto4.setUser(userDto9);
        resultDto0.setUser(userDto9);
        resultDto0.setSubmitted(true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ResultDto(id=0, user=null, test=null, submitted=false, answers=null, mark=0)" + "'", str3, "ResultDto(id=0, user=null, test=null, submitted=false, answers=null, mark=0)");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        com.vntu.marenko.ualearning.server.model.Result result1 = new com.vntu.marenko.ualearning.server.model.Result();
        result1.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int5 = test4.getId();
        java.lang.Integer int6 = test4.getId();
        test4.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int9 = test4.getCompletedCounter();
        result1.setTest(test4);
        com.vntu.marenko.ualearning.server.model.Test test11 = result1.getTest();
        java.lang.String str12 = test11.toString();
        boolean boolean13 = question0.equals((java.lang.Object) str12);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList14 = question0.getAnswers();
        com.vntu.marenko.ualearning.server.model.Result result15 = new com.vntu.marenko.ualearning.server.model.Result();
        result15.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test18 = result15.getTest();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList19 = result15.getAnswers();
        com.vntu.marenko.ualearning.server.model.Question question20 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str21 = question20.getText();
        java.lang.Integer int22 = question20.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService23 = null;
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController25 = new com.vntu.marenko.ualearning.server.controller.TestController(testService23, mapperFacade24);
        boolean boolean26 = question20.equals((java.lang.Object) testController25);
        com.vntu.marenko.ualearning.server.model.Result result27 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int28 = result27.getId();
        com.vntu.marenko.ualearning.server.model.Test test29 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int30 = test29.getId();
        java.lang.Integer int31 = test29.getId();
        result27.setTest(test29);
        java.lang.Integer int33 = result27.getId();
        com.vntu.marenko.ualearning.server.model.Result result34 = new com.vntu.marenko.ualearning.server.model.Result();
        result34.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user37 = new com.vntu.marenko.ualearning.server.model.User();
        user37.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test40 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean41 = user37.equals((java.lang.Object) test40);
        user37.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result34.setUser(user37);
        com.vntu.marenko.ualearning.server.model.Question question45 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int46 = question45.getId();
        java.lang.Integer int47 = question45.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer48 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer49 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer49.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray52 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer48, answer49 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList53 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList53, answerArray52);
        question45.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList53);
        result34.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList53);
        result27.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList53);
        question20.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList53);
        result15.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList53);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList53);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(test11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)" + "'", str12, "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(answerList14);
        org.junit.Assert.assertNull(test18);
        org.junit.Assert.assertNull(answerList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(answerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        answer0.setId((java.lang.Integer) 100);
        answer0.setCorrect(false);
        boolean boolean6 = answer0.isCorrect();
        boolean boolean8 = answer0.equals((java.lang.Object) "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        java.lang.String str9 = answer0.getText();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.Integer int3 = post0.getId();
        java.util.Date date4 = post0.getTimestamp();
        com.vntu.marenko.ualearning.server.model.Post post5 = new com.vntu.marenko.ualearning.server.model.Post();
        post5.setText("");
        java.util.Date date8 = null;
        post5.setTimestamp(date8);
        java.lang.String str10 = post5.getUser();
        java.util.Date date11 = null;
        post5.setTimestamp(date11);
        java.lang.String str13 = post5.getText();
        java.lang.String[] strArray54 = new java.lang.String[] { "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)", "TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))", "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])", "LoginRequest(login=null, password=hi!)", "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "Answer(id=null, text=null, correct=false)", "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)", "LoginRequest(login=Result(id=null, user=null, test=null, submitted=false, answers=null), password=null)", "CreatePostRequest(text=null, username=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)", "Result(id=null, user=null, test=null, submitted=false, answers=null)", "TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))", "ResultDto(id=0, user=null, test=null, submitted=false, answers=null, mark=0)", "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)", "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)", "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)", "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "QuestionDto(id=10, text=null, answers=null)", "ResultDescription(id=null, testId=100, testName=null, mark=0)", "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)", "ResultDescription(id=null, testId=100, testName=null, mark=0)", "hi!", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))", "Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))", "LoginRequest(login=null, password=hi!)", "CreatePostRequest(text=null, username=null)", "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)", "ResultDescription(id=null, testId=100, testName=null, mark=0)" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        post5.setLikes((java.util.List<java.lang.String>) strList55);
        post0.setLikes((java.util.List<java.lang.String>) strList55);
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto59 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto59.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto62 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean64 = answerDto62.equals((java.lang.Object) markComputerImpl63);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto65 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto66 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl67 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean68 = answerDto66.equals((java.lang.Object) markComputerImpl67);
        int int69 = answerDto66.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto70 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl71 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean72 = answerDto70.equals((java.lang.Object) markComputerImpl71);
        int int73 = answerDto70.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto74 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto74.setText("hi!");
        java.lang.String str77 = answerDto74.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray78 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto62, answerDto65, answerDto66, answerDto70, answerDto74 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList79 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList79, answerDtoArray78);
        questionDto59.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList79);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList82 = questionDto59.getAnswers();
        boolean boolean83 = post0.equals((java.lang.Object) answerDtoList82);
        java.util.List<java.lang.String> strList84 = post0.getLikes();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(date4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(answerDtoList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strList84);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        java.lang.String[] strArray6 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        postDto0.setLikes((java.util.List<java.lang.String>) strList7);
        java.lang.String str10 = postDto0.getText();
        postDto0.setText("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        postDto0.setId((int) '#');
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean9 = answerDto7.equals((java.lang.Object) markComputerImpl8);
        int int10 = answerDto7.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        int int14 = answerDto11.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto15 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto15.setText("hi!");
        java.lang.String str18 = answerDto15.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto6, answerDto7, answerDto11, answerDto15 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList20 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList20, answerDtoArray19);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList20);
        java.lang.String str23 = questionDto0.getText();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto24 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int25 = testDto24.getId();
        testDto24.setId((int) (byte) 100);
        java.lang.String str28 = testDto24.toString();
        boolean boolean29 = questionDto0.equals((java.lang.Object) str28);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "TestDto(id=100, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str28, "TestDto(id=100, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = postToDtoMapper0.getAType();
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper2 = null;
        ma.glasnost.orika.Mapper[] mapperArray4 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray5 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray4;
        objMapperArray5[0] = objMapper2;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.setUsedMappers(objMapperArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertNotNull(mapperArray4);
        org.junit.Assert.assertNotNull(objMapperArray5);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("TagDto(id=0, name=null)");
        java.lang.String str7 = testDescription0.toString();
        com.vntu.marenko.ualearning.server.model.Result result8 = new com.vntu.marenko.ualearning.server.model.Result();
        result8.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user11 = new com.vntu.marenko.ualearning.server.model.User();
        user11.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean15 = user11.equals((java.lang.Object) test14);
        user11.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result8.setUser(user11);
        boolean boolean19 = testDescription0.equals((java.lang.Object) user11);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest20 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        boolean boolean21 = testDescription0.equals((java.lang.Object) createPostRequest20);
        java.lang.String str22 = testDescription0.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str7, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str22, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId(0);
        postDto0.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        postDto0.setTimestamp("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray8 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList9 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList9, tagArray8);
        test7.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList9);
        boolean boolean12 = postDto0.equals((java.lang.Object) test7);
        java.lang.String str13 = test7.getDescriptionTest();
        org.junit.Assert.assertNotNull(tagArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        java.lang.String str5 = testDescription0.getNameTest();
        java.lang.String str6 = testDescription0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str5, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))" + "'", str6, "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))");
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setMark(1L);
        java.lang.String str5 = resultDescription0.getTestName();
        resultDescription0.setId((java.lang.Integer) 100);
        long long8 = resultDescription0.getMark();
        resultDescription0.setTestId((java.lang.Integer) 97);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        java.lang.String str3 = user0.getEmail();
        long long4 = user0.getRating();
        user0.setRating((long) (short) 100);
        java.lang.String str7 = user0.getName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto2 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str3 = postDto2.getLogin();
        java.lang.String[] strArray8 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        postDto2.setLikes((java.util.List<java.lang.String>) strList9);
        postDto2.setTimestamp("Question(id=null, text=null, answers=null)");
        int int14 = postDto2.getId();
        boolean boolean15 = tag0.equals((java.lang.Object) postDto2);
        java.lang.Integer int16 = tag0.getId();
        tag0.setId((java.lang.Integer) (-1));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        java.lang.String str2 = userDto0.getLogin();
        int int3 = userDto0.getRating();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.String str9 = resultDescription4.toString();
        boolean boolean10 = userDto0.equals((java.lang.Object) str9);
        java.lang.String str11 = userDto0.getLogin();
        java.lang.String str12 = userDto0.getEmail();
        userDto0.setName("Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
        userDto0.setAge((int) (byte) -1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str9, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        long long1 = user0.getRating();
        user0.setLogin("hi!");
        com.vntu.marenko.ualearning.server.model.Question question4 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int5 = question4.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList6 = null;
        question4.setAnswers(answerList6);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType14 = submitResultRequestToDomainMapper11.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.model.User user17 = new com.vntu.marenko.ualearning.server.model.User();
        user17.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType26 = submitResultRequestToDomainMapper23.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade27 = null;
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade27);
        boolean boolean29 = user17.equals((java.lang.Object) submitResultRequestToDomainMapper23);
        com.vntu.marenko.ualearning.server.model.Result result30 = new com.vntu.marenko.ualearning.server.model.Result();
        result30.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user33 = new com.vntu.marenko.ualearning.server.model.User();
        user33.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test36 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean37 = user33.equals((java.lang.Object) test36);
        user33.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result30.setUser(user33);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest41 = null;
        ma.glasnost.orika.MappingContext mappingContext42 = null;
        submitResultRequestToDomainMapper23.mapBtoA(result30, submitResultRequest41, mappingContext42);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest44 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest44.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int47 = submitResultRequest44.getTestId();
        ma.glasnost.orika.MappingContext mappingContext48 = null;
        submitResultRequestToDomainMapper11.mapBtoA(result30, submitResultRequest44, mappingContext48);
        com.vntu.marenko.ualearning.server.model.Question question50 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str51 = question50.getText();
        java.lang.Integer int52 = question50.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService53 = null;
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController55 = new com.vntu.marenko.ualearning.server.controller.TestController(testService53, mapperFacade54);
        boolean boolean56 = question50.equals((java.lang.Object) testController55);
        com.vntu.marenko.ualearning.server.model.Result result57 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int58 = result57.getId();
        com.vntu.marenko.ualearning.server.model.Test test59 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int60 = test59.getId();
        java.lang.Integer int61 = test59.getId();
        result57.setTest(test59);
        java.lang.Integer int63 = result57.getId();
        com.vntu.marenko.ualearning.server.model.Result result64 = new com.vntu.marenko.ualearning.server.model.Result();
        result64.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user67 = new com.vntu.marenko.ualearning.server.model.User();
        user67.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test70 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean71 = user67.equals((java.lang.Object) test70);
        user67.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result64.setUser(user67);
        com.vntu.marenko.ualearning.server.model.Question question75 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int76 = question75.getId();
        java.lang.Integer int77 = question75.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer78 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer79 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer79.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray82 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer78, answer79 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList83 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList83, answerArray82);
        question75.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList83);
        result64.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList83);
        result57.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList83);
        question50.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList83);
        result30.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList83);
        question4.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList83);
        boolean boolean91 = user0.equals((java.lang.Object) question4);
        java.lang.String str92 = question4.getText();
        question4.setId((java.lang.Integer) 97);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(submitResultRequestType14);
        org.junit.Assert.assertNotNull(submitResultRequestType26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(answerArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int1 = submitResultRequest0.getTestId();
        java.lang.Integer[] intArray5 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.ArrayList<java.lang.Integer> intList6 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList6, intArray5);
        submitResultRequest0.setAnswers((java.util.List<java.lang.Integer>) intList6);
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray10 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList11 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList11, tagArray10);
        test9.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList11);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray14 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList15 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList15, tagArray14);
        test9.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList15);
        java.lang.String str18 = test9.getNameTest();
        java.lang.String str19 = test9.getNameTest();
        boolean boolean20 = submitResultRequest0.equals((java.lang.Object) test9);
        test9.setDescriptionTest("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        java.lang.String str23 = test9.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(tagArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tagArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Test(id=null, nameTest=null, descriptionTest=TestDescription(id=-1, nameTest=TagDto(id=0, name=null)), completedCounter=null, questions=null, tags=[])" + "'", str23, "Test(id=null, nameTest=null, descriptionTest=TestDescription(id=-1, nameTest=TagDto(id=0, name=null)), completedCounter=null, questions=null, tags=[])");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        boolean boolean4 = tagDto0.equals((java.lang.Object) (-1L));
        int int5 = tagDto0.getId();
        java.lang.String str6 = tagDto0.toString();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper8 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = resultToDescriptionMapper8.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = resultToDescriptionMapper8.getAType();
        java.lang.Boolean boolean11 = resultToDescriptionMapper8.favorsExtension();
        boolean boolean12 = tagDto0.equals((java.lang.Object) resultToDescriptionMapper8);
        java.lang.String str13 = tagDto0.getName();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TagDto(id=1, name=null)" + "'", str6, "TagDto(id=1, name=null)");
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto0.setId((int) (byte) -1);
        java.lang.String str3 = answerDto0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "AnswerDto(id=-1, text=null)" + "'", str3, "AnswerDto(id=-1, text=null)");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.toString();
        answer0.setText("LoginRequest(login=null, password=null)");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest4 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str5 = userRequest4.getInstitution();
        java.lang.String str6 = userRequest4.getPassword();
        boolean boolean7 = answer0.equals((java.lang.Object) userRequest4);
        java.lang.String str8 = userRequest4.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Answer(id=null, text=null, correct=false)" + "'", str1, "Answer(id=null, text=null, correct=false)");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str8, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = answerDto0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        answerDto0.setText("Tag(id=null, name=null)");
        answerDto0.setId((int) (short) -1);
        java.lang.String str17 = answerDto0.toString();
        java.lang.String str18 = answerDto0.getText();
        answerDto0.setId((int) (byte) 100);
        answerDto0.setText("Question(id=35, text=null, answers=null)");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AnswerDto(id=-1, text=Tag(id=null, name=null))" + "'", str17, "AnswerDto(id=-1, text=Tag(id=null, name=null))");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Tag(id=null, name=null)" + "'", str18, "Tag(id=null, name=null)");
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean9 = answerDto7.equals((java.lang.Object) markComputerImpl8);
        int int10 = answerDto7.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        int int14 = answerDto11.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto15 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto15.setText("hi!");
        java.lang.String str18 = answerDto15.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto6, answerDto7, answerDto11, answerDto15 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList20 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList20, answerDtoArray19);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList20);
        questionDto0.setId((int) (short) -1);
        int int25 = questionDto0.getId();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList26 = questionDto0.getAnswers();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(answerDtoList26);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest7 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int8 = submitResultRequest7.getTestId();
        submitResultRequest7.setTestId((int) (byte) -1);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription11 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription11.setId((java.lang.Integer) 0);
        resultDescription11.setMark(1L);
        java.lang.String str16 = resultDescription11.toString();
        java.lang.String str17 = resultDescription11.toString();
        boolean boolean18 = submitResultRequest7.equals((java.lang.Object) resultDescription11);
        java.lang.String str19 = submitResultRequest7.toString();
        submitResultRequest7.setTestId((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto22 = resultController6.submitTest(submitResultRequest7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str16, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str17, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "SubmitResultRequest(userLogin=null, testId=-1, answers=null)" + "'", str19, "SubmitResultRequest(userLogin=null, testId=-1, answers=null)");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        java.lang.String str3 = tagDto0.getName();
        tagDto0.setId((int) 'a');
        tagDto0.setId((int) (short) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.UserDto userDto20 = userController18.getUser("TestDescription(id=0, nameTest=TagDto(id=0, name=null))");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        java.lang.String[] strArray6 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        postDto0.setLikes((java.util.List<java.lang.String>) strList7);
        java.lang.String str10 = postDto0.getText();
        postDto0.setText("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        java.lang.String str13 = postDto0.getTimestamp();
        java.lang.String str14 = postDto0.getTimestamp();
        java.lang.String str15 = postDto0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PostDto(id=0, text=User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0), timestamp=null, login=null, likes=[LoginRequest(login=null, password=null), CreatePostRequest(text=null, username=null), Answer(id=null, text=null, correct=false), User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)])" + "'", str15, "PostDto(id=0, text=User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0), timestamp=null, login=null, likes=[LoginRequest(login=null, password=null), CreatePostRequest(text=null, username=null), Answer(id=null, text=null, correct=false), User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)])");
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getEmail();
        userRequest0.setLogin("CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=null)");
        userRequest0.setSurname("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        java.lang.String str8 = userRequest0.getSurname();
        java.lang.String str9 = userRequest0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str8, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType22 = submitResultRequestToDomainMapper19.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper23 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig24 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl25 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository28 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper29 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository26, testRepository27, answerRepository28);
        ma.glasnost.orika.MapperFacade mapperFacade30 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType32 = submitResultRequestToDomainMapper29.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper33 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper34 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean35 = createPostRequestToPostMapper34.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper36 = null;
        ma.glasnost.orika.MapperFacade mapperFacade37 = mapperConfig24.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl25, submitResultRequestToDomainMapper29, resultToDescriptionMapper33, createPostRequestToPostMapper34, postToDtoMapper36);
        postToDtoMapper23.setMapperFacade(mapperFacade37);
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade37);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig42 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl43 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository46 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper47 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository44, testRepository45, answerRepository46);
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        submitResultRequestToDomainMapper47.setMapperFacade(mapperFacade48);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType50 = submitResultRequestToDomainMapper47.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper51 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper52 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean53 = createPostRequestToPostMapper52.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper54 = null;
        ma.glasnost.orika.MapperFacade mapperFacade55 = mapperConfig42.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl43, submitResultRequestToDomainMapper47, resultToDescriptionMapper51, createPostRequestToPostMapper52, postToDtoMapper54);
        createPostRequestToPostMapper40.setMapperFacade(mapperFacade55);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository57 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository58 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository59 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper60 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository57, testRepository58, answerRepository59);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType61 = submitResultRequestToDomainMapper60.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        submitResultRequestToDomainMapper60.setMapperFacade(mapperFacade76);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository79 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl80 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository79);
        com.vntu.marenko.ualearning.server.controller.PostController postController81 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade76, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController82 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade55, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController83 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade37, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.controller.PostController postController84 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade14, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl80);
        com.vntu.marenko.ualearning.server.model.Post post85 = new com.vntu.marenko.ualearning.server.model.Post();
        post85.setText("");
        java.lang.String str88 = post85.toString();
        java.lang.Integer int89 = post85.getId();
        java.util.Date date90 = null;
        post85.setTimestamp(date90);
        java.lang.String str92 = post85.getText();
        java.util.List<java.lang.String> strList93 = post85.getLikes();
        java.util.Date date94 = null;
        post85.setTimestamp(date94);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post96 = postServiceImpl80.savePost(post85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType22);
        org.junit.Assert.assertNotNull(resultType32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNotNull(mapperFacade37);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(resultType50);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(mapperFacade55);
        org.junit.Assert.assertNotNull(resultType61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str88, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user1 = new com.vntu.marenko.ualearning.server.model.User();
        user1.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean5 = user1.equals((java.lang.Object) test4);
        result0.setUser(user1);
        java.lang.String str7 = user1.getPassword();
        java.lang.Class<?> wildcardClass8 = user1.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto0.setText("hi!");
        int int3 = answerDto0.getId();
        answerDto0.setText("Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.service.UserService userService23 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController40 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService23, mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController41 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList43 = resultServiceImpl4.getResultsForUser("AnswerDto(id=0, text=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.Result result1 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user2 = new com.vntu.marenko.ualearning.server.model.User();
        user2.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test5 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean6 = user2.equals((java.lang.Object) test5);
        result1.setUser(user2);
        result0.setUser(user2);
        result0.setSubmitted(false);
        com.vntu.marenko.ualearning.server.model.User user11 = result0.getUser();
        user11.setSurname("PostDto(id=100, text=null, timestamp=null, login=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(user11);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper3.getBType();
        ma.glasnost.orika.Mapper[] mapperArray28 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray29 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray28;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertNotNull(mapperArray28);
        org.junit.Assert.assertNotNull(objMapperArray29);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        java.lang.String str8 = userRequest0.getLogin();
        java.lang.String str9 = userRequest0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str9, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("hi!");
        user0.setInstitution("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.String str7 = user0.toString();
        java.lang.String str8 = user0.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)" + "'", str7, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)" + "'", str8, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        com.vntu.marenko.ualearning.server.model.User user9 = new com.vntu.marenko.ualearning.server.model.User();
        user9.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType18 = submitResultRequestToDomainMapper15.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade19);
        boolean boolean21 = user9.equals((java.lang.Object) submitResultRequestToDomainMapper15);
        com.vntu.marenko.ualearning.server.model.Result result22 = new com.vntu.marenko.ualearning.server.model.Result();
        result22.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test28 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean29 = user25.equals((java.lang.Object) test28);
        user25.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result22.setUser(user25);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest33 = null;
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        submitResultRequestToDomainMapper15.mapBtoA(result22, submitResultRequest33, mappingContext34);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest36.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int39 = submitResultRequest36.getTestId();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result22, submitResultRequest36, mappingContext40);
        submitResultRequest36.setUserLogin("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        java.lang.String str44 = submitResultRequest36.getUserLogin();
        java.util.List<java.lang.Integer> intList45 = submitResultRequest36.getAnswers();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(submitResultRequestType18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)" + "'", str44, "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        org.junit.Assert.assertNull(intList45);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper3 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = resultToDescriptionMapper3.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription5 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int6 = resultDescription5.getId();
        long long7 = resultDescription5.getMark();
        com.vntu.marenko.ualearning.server.model.Result result8 = new com.vntu.marenko.ualearning.server.model.Result();
        result8.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test11 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int12 = test11.getId();
        java.lang.Integer int13 = test11.getId();
        test11.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int16 = test11.getCompletedCounter();
        result8.setTest(test11);
        com.vntu.marenko.ualearning.server.model.Test test18 = result8.getTest();
        ma.glasnost.orika.MappingContext mappingContext19 = null;
        resultToDescriptionMapper3.mapBtoA(resultDescription5, result8, mappingContext19);
        com.vntu.marenko.ualearning.server.model.Result result21 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.String str22 = result21.toString();
        ma.glasnost.orika.MappingContext mappingContext23 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription5, result21, mappingContext23);
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(test18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Result(id=null, user=null, test=null, submitted=false, answers=null)" + "'", str22, "Result(id=null, user=null, test=null, submitted=false, answers=null)");
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        userDto0.setName("hi!");
        int int4 = userDto0.getAge();
        int int5 = userDto0.getRating();
        userDto0.setAge(0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        com.vntu.marenko.ualearning.server.model.User user26 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str27 = user26.getEmail();
        java.lang.String str28 = user26.getSurname();
        result7.setUser(user26);
        java.lang.String str30 = user26.getSurname();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        long long4 = resultDto0.getMark();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList5 = resultDto0.getAnswers();
        com.vntu.marenko.ualearning.server.dto.UserDto userDto6 = resultDto0.getUser();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList7 = resultDto0.getAnswers();
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(answerDtoList5);
        org.junit.Assert.assertNull(userDto6);
        org.junit.Assert.assertNull(answerDtoList7);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int5 = test0.getCompletedCounter();
        java.lang.Integer int6 = test0.getCompletedCounter();
        java.lang.String str7 = test0.getDescriptionTest();
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList8 = test0.getQuestions();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str7, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(questionList8);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = answerDto0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        answerDto0.setText("Tag(id=null, name=null)");
        int int15 = answerDto0.getId();
        answerDto0.setText("AnswerDto(id=-1, text=Tag(id=null, name=null))");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        java.lang.String str6 = userRequest0.getLogin();
        userRequest0.setPassword("TestDescription(id=0, nameTest=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str4 = createPostRequest0.getText();
        java.lang.String str5 = createPostRequest0.toString();
        java.lang.String str6 = createPostRequest0.getText();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str4, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)" + "'", str5, "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str6, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper9 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType10 = createPostRequestToPostMapper9.getBType();
        com.vntu.marenko.ualearning.server.model.Post post11 = new com.vntu.marenko.ualearning.server.model.Post();
        post11.setText("");
        java.lang.String str14 = post11.toString();
        post11.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest17 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest17.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper9.mapBtoA(post11, createPostRequest17, mappingContext20);
        com.vntu.marenko.ualearning.server.model.Post post22 = new com.vntu.marenko.ualearning.server.model.Post();
        post22.setText("");
        java.lang.String str25 = post22.toString();
        java.lang.Integer int26 = post22.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest27 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str28 = createPostRequest27.getUsername();
        java.lang.String str29 = createPostRequest27.toString();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        createPostRequestToPostMapper9.mapBtoA(post22, createPostRequest27, mappingContext30);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer35 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl36 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository32, mapperFacade33, userRepository34, markComputer35);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper37 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean38 = createPostRequestToPostMapper37.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig39 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl40 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.MapperFacade mapperFacade45 = null;
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade45);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType47 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper48 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper49 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean50 = createPostRequestToPostMapper49.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper51 = null;
        ma.glasnost.orika.MapperFacade mapperFacade52 = mapperConfig39.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl40, submitResultRequestToDomainMapper44, resultToDescriptionMapper48, createPostRequestToPostMapper49, postToDtoMapper51);
        createPostRequestToPostMapper37.setMapperFacade(mapperFacade52);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController54 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl36, mapperFacade52);
        createPostRequestToPostMapper9.setMapperFacade(mapperFacade52);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController56 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade52);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList58 = resultServiceImpl4.getResultsForUser("Question(id=35, text=null, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str14, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str25, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str29, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(resultType47);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(mapperFacade52);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        resultDto0.setSubmitted(true);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto25 = resultDto0.getTest();
        resultDto0.setMark((long) (short) 10);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto28 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int29 = testDto28.getId();
        int int30 = testDto28.getId();
        testDto28.setCompletedCounter((java.lang.Integer) 0);
        resultDto0.setTest(testDto28);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList34 = resultDto0.getAnswers();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto35 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str36 = questionDto35.getText();
        int int37 = questionDto35.getId();
        questionDto35.setId(10);
        java.lang.String str40 = questionDto35.toString();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto41 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl42 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean43 = answerDto41.equals((java.lang.Object) markComputerImpl42);
        java.lang.String str44 = answerDto41.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto45 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto45.setText("hi!");
        java.lang.String str48 = answerDto45.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto49 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper50 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper51 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType52 = createPostRequestToPostMapper51.getBType();
        com.vntu.marenko.ualearning.server.model.Post post53 = new com.vntu.marenko.ualearning.server.model.Post();
        post53.setText("");
        java.lang.String str56 = post53.toString();
        post53.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest59 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest59.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext62 = null;
        createPostRequestToPostMapper51.mapBtoA(post53, createPostRequest59, mappingContext62);
        com.vntu.marenko.ualearning.server.model.Post post64 = new com.vntu.marenko.ualearning.server.model.Post();
        post64.setText("");
        java.lang.String str67 = post64.toString();
        java.lang.Integer int68 = post64.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest69 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str70 = createPostRequest69.getUsername();
        java.lang.String str71 = createPostRequest69.toString();
        ma.glasnost.orika.MappingContext mappingContext72 = null;
        createPostRequestToPostMapper51.mapBtoA(post64, createPostRequest69, mappingContext72);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper74 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType75 = createPostRequestToPostMapper74.getBType();
        com.vntu.marenko.ualearning.server.model.Post post76 = new com.vntu.marenko.ualearning.server.model.Post();
        post76.setText("");
        java.lang.String str79 = post76.toString();
        post76.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest82 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest82.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext85 = null;
        createPostRequestToPostMapper74.mapBtoA(post76, createPostRequest82, mappingContext85);
        ma.glasnost.orika.MappingContext mappingContext87 = null;
        createPostRequestToPostMapper50.mapAtoB(createPostRequest69, post76, mappingContext87);
        boolean boolean89 = answerDto49.equals((java.lang.Object) mappingContext87);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray90 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto41, answerDto45, answerDto49 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList91 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList91, answerDtoArray90);
        questionDto35.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList91);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList91);
        resultDto0.setMark((-1L));
        int int97 = resultDto0.getId();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(testDto25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(answerDtoList34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str40, "QuestionDto(id=10, text=null, answers=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(postType52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str56, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str67, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str71, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str79, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(answerDtoArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType6 = submitResultRequestToDomainMapper3.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType7 = submitResultRequestToDomainMapper3.getBType();
        java.lang.Boolean boolean8 = submitResultRequestToDomainMapper3.favorsExtension();
        org.junit.Assert.assertNotNull(resultType6);
        org.junit.Assert.assertNotNull(resultType7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository1 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig19 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.MapperFacade mapperFacade25 = null;
        submitResultRequestToDomainMapper24.setMapperFacade(mapperFacade25);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType27 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean30 = createPostRequestToPostMapper29.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper31 = null;
        ma.glasnost.orika.MapperFacade mapperFacade32 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper31);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl33 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository36 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper37 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository34, testRepository35, answerRepository36);
        ma.glasnost.orika.MapperFacade mapperFacade38 = null;
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade38);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType40 = submitResultRequestToDomainMapper37.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper41 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig42 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl43 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository46 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper47 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository44, testRepository45, answerRepository46);
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        submitResultRequestToDomainMapper47.setMapperFacade(mapperFacade48);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType50 = submitResultRequestToDomainMapper47.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper51 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper52 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean53 = createPostRequestToPostMapper52.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper54 = null;
        ma.glasnost.orika.MapperFacade mapperFacade55 = mapperConfig42.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl43, submitResultRequestToDomainMapper47, resultToDescriptionMapper51, createPostRequestToPostMapper52, postToDtoMapper54);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper56 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade57 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33, submitResultRequestToDomainMapper37, resultToDescriptionMapper41, createPostRequestToPostMapper52, postToDtoMapper56);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl58 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository1, mapperFacade16, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33);
        com.vntu.marenko.ualearning.server.controller.UserController userController59 = new com.vntu.marenko.ualearning.server.controller.UserController(userService0, mapperFacade16);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.UserDto userDto61 = userController59.getUser("PostDto(id=0, text=User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0), timestamp=null, login=null, likes=[LoginRequest(login=null, password=null), CreatePostRequest(text=null, username=null), Answer(id=null, text=null, correct=false), User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)])");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNotNull(resultType27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(mapperFacade32);
        org.junit.Assert.assertNotNull(resultType40);
        org.junit.Assert.assertNotNull(resultType50);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(mapperFacade55);
        org.junit.Assert.assertNotNull(mapperFacade57);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        java.lang.String str2 = loginRequest0.getLogin();
        loginRequest0.setPassword("hi!");
        loginRequest0.setLogin("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        java.lang.String str7 = loginRequest0.getLogin();
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription8 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription8.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription8.setId((-1));
        testDescription8.setNameTest("TagDto(id=0, name=null)");
        java.lang.String str15 = testDescription8.toString();
        java.lang.String str16 = testDescription8.getNameTest();
        testDescription8.setId((int) (byte) 0);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest19 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str20 = loginRequest19.toString();
        java.lang.String str21 = loginRequest19.getLogin();
        loginRequest19.setPassword("hi!");
        loginRequest19.setLogin("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        boolean boolean26 = testDescription8.equals((java.lang.Object) loginRequest19);
        int int27 = testDescription8.getId();
        boolean boolean28 = loginRequest0.equals((java.lang.Object) testDescription8);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)" + "'", str7, "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str15, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str20, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig19 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.MapperFacade mapperFacade25 = null;
        submitResultRequestToDomainMapper24.setMapperFacade(mapperFacade25);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType27 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean30 = createPostRequestToPostMapper29.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper31 = null;
        ma.glasnost.orika.MapperFacade mapperFacade32 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper31);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository34 = null;
        ma.glasnost.orika.MapperFacade mapperFacade35 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository36 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto37 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl38 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean39 = answerDto37.equals((java.lang.Object) markComputerImpl38);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository34, mapperFacade35, userRepository36, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl38);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl41 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository18, mapperFacade32, userRepository33, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl38);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl42 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade15, userRepository17, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl38);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper43 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl38);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(mapperFacade32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType19 = postToDtoMapper0.getBType();
        java.lang.Boolean boolean20 = postToDtoMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto21 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str22 = postDto21.getLogin();
        postDto21.setTimestamp("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        java.lang.Integer int29 = post25.getId();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        postToDtoMapper0.mapBtoA(postDto21, post25, mappingContext30);
        postDto21.setId((int) (short) -1);
        postDto21.setTimestamp("Result(id=100, user=null, test=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), submitted=false, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
        postDto21.setTimestamp("");
        postDto21.setLogin("TestDescription(id=0, nameTest=null)");
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertNotNull(postType18);
        org.junit.Assert.assertNotNull(postDtoType19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int3 = submitResultRequest0.getTestId();
        java.lang.String str4 = submitResultRequest0.getUserLogin();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str4, "QuestionDto(id=10, text=null, answers=null)");
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        int int1 = postDto0.getId();
        postDto0.setId((int) (byte) -1);
        java.lang.String str4 = postDto0.getTimestamp();
        java.lang.String str5 = postDto0.toString();
        postDto0.setId((int) (short) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PostDto(id=-1, text=null, timestamp=null, login=null, likes=null)" + "'", str5, "PostDto(id=-1, text=null, timestamp=null, login=null, likes=null)");
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.Integer int3 = post0.getId();
        java.util.Date date4 = post0.getTimestamp();
        java.lang.String str5 = post0.toString();
        java.util.Date date6 = post0.getTimestamp();
        java.lang.String str7 = post0.toString();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(date4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(date6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str7, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper3 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getLogin();
        com.vntu.marenko.ualearning.server.model.User user2 = new com.vntu.marenko.ualearning.server.model.User();
        boolean boolean3 = loginRequest0.equals((java.lang.Object) user2);
        java.lang.String str4 = loginRequest0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean7 = user3.equals((java.lang.Object) test6);
        user3.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result0.setUser(user3);
        int int11 = user3.getAge();
        user3.setLogin("");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto14 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto15 = null;
        resultDto14.setTest(testDto15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        int int20 = answerDto17.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto21 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto21.setText("hi!");
        java.lang.String str24 = answerDto21.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto25 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean27 = answerDto25.equals((java.lang.Object) markComputerImpl26);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto28 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean30 = answerDto28.equals((java.lang.Object) markComputerImpl29);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray31 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto17, answerDto21, answerDto25, answerDto28 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList32 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32, answerDtoArray31);
        resultDto14.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList32);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto35 = resultDto14.getTest();
        long long36 = resultDto14.getMark();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto37 = resultDto14.getTest();
        boolean boolean38 = user3.equals((java.lang.Object) resultDto14);
        user3.setAge(0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(answerDtoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(testDto35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(testDto37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId(0);
        postDto0.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        postDto0.setTimestamp("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray8 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList9 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList9, tagArray8);
        test7.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList9);
        boolean boolean12 = postDto0.equals((java.lang.Object) test7);
        postDto0.setLogin("Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
        org.junit.Assert.assertNotNull(tagArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        int int2 = postDto0.getId();
        postDto0.setId((-1));
        java.lang.String str5 = postDto0.getText();
        postDto0.setText("ResultDto(id=100, user=UserDto(login=LoginRequest(login=null, password=null), name=null, surname=null, age=0, institution=null, email=null, rating=-1), test=null, submitted=false, answers=null, mark=0)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType2 = createPostRequestToPostMapper1.getBType();
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        post3.setText("");
        java.lang.String str6 = post3.toString();
        post3.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest9 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest9.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        createPostRequestToPostMapper1.mapBtoA(post3, createPostRequest9, mappingContext12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.String str17 = post14.toString();
        java.lang.Integer int18 = post14.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str20 = createPostRequest19.getUsername();
        java.lang.String str21 = createPostRequest19.toString();
        ma.glasnost.orika.MappingContext mappingContext22 = null;
        createPostRequestToPostMapper1.mapBtoA(post14, createPostRequest19, mappingContext22);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest19, post26, mappingContext37);
        createPostRequest19.setText("Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
        java.lang.String str41 = createPostRequest19.toString();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository44 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper45 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository42, testRepository43, answerRepository44);
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade46);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType48 = submitResultRequestToDomainMapper45.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade49);
        com.vntu.marenko.ualearning.server.model.User user51 = new com.vntu.marenko.ualearning.server.model.User();
        user51.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository56 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper57 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository54, testRepository55, answerRepository56);
        ma.glasnost.orika.MapperFacade mapperFacade58 = null;
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade58);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType60 = submitResultRequestToDomainMapper57.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade61 = null;
        submitResultRequestToDomainMapper57.setMapperFacade(mapperFacade61);
        boolean boolean63 = user51.equals((java.lang.Object) submitResultRequestToDomainMapper57);
        com.vntu.marenko.ualearning.server.model.Result result64 = new com.vntu.marenko.ualearning.server.model.Result();
        result64.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user67 = new com.vntu.marenko.ualearning.server.model.User();
        user67.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test70 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean71 = user67.equals((java.lang.Object) test70);
        user67.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result64.setUser(user67);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest75 = null;
        ma.glasnost.orika.MappingContext mappingContext76 = null;
        submitResultRequestToDomainMapper57.mapBtoA(result64, submitResultRequest75, mappingContext76);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest78 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest78.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int81 = submitResultRequest78.getTestId();
        ma.glasnost.orika.MappingContext mappingContext82 = null;
        submitResultRequestToDomainMapper45.mapBtoA(result64, submitResultRequest78, mappingContext82);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto84 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto84.setText("hi!");
        java.lang.String str87 = answerDto84.getText();
        boolean boolean88 = submitResultRequest78.equals((java.lang.Object) answerDto84);
        boolean boolean89 = createPostRequest19.equals((java.lang.Object) boolean88);
        java.lang.String str90 = createPostRequest19.getText();
        org.junit.Assert.assertNotNull(postType2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str17, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str21, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "CreatePostRequest(text=Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)), username=null)" + "'", str41, "CreatePostRequest(text=Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)), username=null)");
        org.junit.Assert.assertNotNull(submitResultRequestType48);
        org.junit.Assert.assertNotNull(submitResultRequestType60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))" + "'", str90, "Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.util.Date date4 = post0.getTimestamp();
        com.vntu.marenko.ualearning.server.model.Post post5 = new com.vntu.marenko.ualearning.server.model.Post();
        post5.setText("");
        java.lang.Integer int8 = post5.getId();
        post5.setUser("QuestionDto(id=0, text=null, answers=null)");
        boolean boolean11 = post0.equals((java.lang.Object) post5);
        post5.setUser("TestDto(id=100, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.String str14 = post5.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(date4);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Post(id=null, text=, timestamp=null, user=TestDto(id=100, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), likes=null)" + "'", str14, "Post(id=null, text=, timestamp=null, user=TestDto(id=100, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), likes=null)");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest3 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str4 = userRequest3.getName();
        java.lang.String str5 = userRequest3.getName();
        boolean boolean6 = result0.equals((java.lang.Object) str5);
        java.lang.String str7 = result0.toString();
        com.vntu.marenko.ualearning.server.model.User user8 = new com.vntu.marenko.ualearning.server.model.User();
        user8.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test11 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean12 = user8.equals((java.lang.Object) test11);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList13 = test11.getTags();
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList14 = test11.getTags();
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList15 = test11.getTags();
        result0.setTest(test11);
        result0.setSubmitted(true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Result(id=100, user=null, test=null, submitted=false, answers=null)" + "'", str7, "Result(id=100, user=null, test=null, submitted=false, answers=null)");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(tagList13);
        org.junit.Assert.assertNull(tagList14);
        org.junit.Assert.assertNull(tagList15);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        user0.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str7 = user0.getEmail();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str7, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        post0.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str6 = post0.getUser();
        java.lang.Integer int7 = post0.getId();
        java.util.Date date8 = null;
        post0.setTimestamp(date8);
        post0.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Test test4 = testServiceImpl2.getTest((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = tag0.equals((java.lang.Object) createPostRequest23);
        createPostRequest23.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto46 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto46.setId(1);
        java.lang.String str49 = tagDto46.getName();
        java.lang.String str50 = tagDto46.toString();
        boolean boolean51 = createPostRequest23.equals((java.lang.Object) tagDto46);
        com.vntu.marenko.ualearning.server.model.Question question52 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int53 = question52.getId();
        java.lang.Integer int54 = question52.getId();
        question52.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.model.Answer answer57 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str58 = answer57.getText();
        java.lang.String str59 = answer57.getText();
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray60 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer57 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList61 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList61, answerArray60);
        question52.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList61);
        boolean boolean64 = createPostRequest23.equals((java.lang.Object) question52);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "TagDto(id=1, name=null)" + "'", str50, "TagDto(id=1, name=null)");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(answerArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType19 = postToDtoMapper0.getBType();
        java.lang.Boolean boolean20 = postToDtoMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto21 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str22 = postDto21.getLogin();
        postDto21.setTimestamp("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        post25.setText("");
        java.lang.String str28 = post25.toString();
        java.lang.Integer int29 = post25.getId();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        postToDtoMapper0.mapBtoA(postDto21, post25, mappingContext30);
        postDto21.setId((int) (short) -1);
        postDto21.setTimestamp("Result(id=100, user=null, test=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), submitted=false, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto36 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto36.setId(100);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList39 = resultDto36.getAnswers();
        int int40 = resultDto36.getId();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto41 = resultDto36.getTest();
        boolean boolean42 = postDto21.equals((java.lang.Object) resultDto36);
        java.util.List<java.lang.String> strList43 = postDto21.getLikes();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertNotNull(postType18);
        org.junit.Assert.assertNotNull(postDtoType19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str28, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(answerDtoList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNull(testDto41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(strList43);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int8 = test3.getCompletedCounter();
        result0.setTest(test3);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList10 = result0.getAnswers();
        boolean boolean11 = result0.isSubmitted();
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(answerList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        java.lang.String str4 = userDto0.toString();
        java.lang.String str5 = userDto0.getLogin();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=, email=null, rating=0)" + "'", str4, "UserDto(login=null, name=null, surname=null, age=0, institution=, email=null, rating=0)");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        answer0.setId((java.lang.Integer) (-1));
        answer0.setCorrect(true);
        java.lang.String str6 = answer0.toString();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription7 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription7.setId((java.lang.Integer) 0);
        resultDescription7.setTestName("hi!");
        java.lang.String str12 = resultDescription7.getTestName();
        java.lang.Integer int13 = resultDescription7.getTestId();
        resultDescription7.setMark((long) 10);
        boolean boolean16 = answer0.equals((java.lang.Object) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Answer(id=-1, text=null, correct=true)" + "'", str6, "Answer(id=-1, text=null, correct=true)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        java.lang.String str3 = submitResultRequest0.getUserLogin();
        java.util.List<java.lang.Integer> intList4 = submitResultRequest0.getAnswers();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str3, "QuestionDto(id=10, text=null, answers=null)");
        org.junit.Assert.assertNull(intList4);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto0.setLogin("Tag(id=null, name=null)");
        userDto0.setInstitution("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        java.lang.String str9 = userDto0.getInstitution();
        userDto0.setInstitution("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        int int12 = userDto0.getAge();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)" + "'", str9, "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.toString();
        answer0.setText("LoginRequest(login=null, password=null)");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest4 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str5 = userRequest4.getInstitution();
        java.lang.String str6 = userRequest4.getPassword();
        boolean boolean7 = answer0.equals((java.lang.Object) userRequest4);
        java.lang.Integer int8 = answer0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Answer(id=null, text=null, correct=false)" + "'", str1, "Answer(id=null, text=null, correct=false)");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        result0.setSubmitted(false);
        com.vntu.marenko.ualearning.server.model.Question question5 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int6 = question5.getId();
        java.lang.Integer int7 = question5.getId();
        question5.setId((java.lang.Integer) 1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType16 = submitResultRequestToDomainMapper13.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.model.User user19 = new com.vntu.marenko.ualearning.server.model.User();
        user19.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType28 = submitResultRequestToDomainMapper25.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade29);
        boolean boolean31 = user19.equals((java.lang.Object) submitResultRequestToDomainMapper25);
        com.vntu.marenko.ualearning.server.model.Result result32 = new com.vntu.marenko.ualearning.server.model.Result();
        result32.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user35 = new com.vntu.marenko.ualearning.server.model.User();
        user35.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test38 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean39 = user35.equals((java.lang.Object) test38);
        user35.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result32.setUser(user35);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest43 = null;
        ma.glasnost.orika.MappingContext mappingContext44 = null;
        submitResultRequestToDomainMapper25.mapBtoA(result32, submitResultRequest43, mappingContext44);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest46 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest46.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int49 = submitResultRequest46.getTestId();
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        submitResultRequestToDomainMapper13.mapBtoA(result32, submitResultRequest46, mappingContext50);
        com.vntu.marenko.ualearning.server.model.Question question52 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str53 = question52.getText();
        java.lang.Integer int54 = question52.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController57 = new com.vntu.marenko.ualearning.server.controller.TestController(testService55, mapperFacade56);
        boolean boolean58 = question52.equals((java.lang.Object) testController57);
        com.vntu.marenko.ualearning.server.model.Result result59 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int60 = result59.getId();
        com.vntu.marenko.ualearning.server.model.Test test61 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int62 = test61.getId();
        java.lang.Integer int63 = test61.getId();
        result59.setTest(test61);
        java.lang.Integer int65 = result59.getId();
        com.vntu.marenko.ualearning.server.model.Result result66 = new com.vntu.marenko.ualearning.server.model.Result();
        result66.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user69 = new com.vntu.marenko.ualearning.server.model.User();
        user69.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test72 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean73 = user69.equals((java.lang.Object) test72);
        user69.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result66.setUser(user69);
        com.vntu.marenko.ualearning.server.model.Question question77 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int78 = question77.getId();
        java.lang.Integer int79 = question77.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer80 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer81 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer81.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray84 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer80, answer81 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList85 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList85, answerArray84);
        question77.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList85);
        result66.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList85);
        result59.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList85);
        question52.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList85);
        result32.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList85);
        question5.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList85);
        result0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList85);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(submitResultRequestType16);
        org.junit.Assert.assertNotNull(submitResultRequestType28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(answerArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        com.vntu.marenko.ualearning.server.model.User user12 = new com.vntu.marenko.ualearning.server.model.User();
        user12.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType21 = submitResultRequestToDomainMapper18.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade22 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade22);
        boolean boolean24 = user12.equals((java.lang.Object) submitResultRequestToDomainMapper18);
        com.vntu.marenko.ualearning.server.model.Result result25 = new com.vntu.marenko.ualearning.server.model.Result();
        result25.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user28 = new com.vntu.marenko.ualearning.server.model.User();
        user28.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test31 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean32 = user28.equals((java.lang.Object) test31);
        user28.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result25.setUser(user28);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = null;
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        submitResultRequestToDomainMapper18.mapBtoA(result25, submitResultRequest36, mappingContext37);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest39 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest39.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int42 = submitResultRequest39.getTestId();
        ma.glasnost.orika.MappingContext mappingContext43 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result25, submitResultRequest39, mappingContext43);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl46 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository45);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.UserController userController63 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl46, mapperFacade61);
        boolean boolean64 = submitResultRequest39.equals((java.lang.Object) mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade61);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList67 = testServiceImpl2.getTestsWithTag(35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertNotNull(submitResultRequestType21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.toString();
        userRequest0.setLogin("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        userRequest0.setSurname("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str3, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        answer0.setId((java.lang.Integer) (-1));
        answer0.setId((java.lang.Integer) 0);
        answer0.setCorrect(true);
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setInstitution("hi!");
        java.lang.String str3 = user0.toString();
        user0.setSurname("QuestionDto(id=35, text=null, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!)])");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str3, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        java.lang.String str2 = userDto0.getLogin();
        int int3 = userDto0.getRating();
        java.lang.String str4 = userDto0.getName();
        java.lang.String str5 = userDto0.getInstitution();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController25 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl23, mapperFacade24);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository28 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper29 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository26, testRepository27, answerRepository28);
        ma.glasnost.orika.MapperFacade mapperFacade30 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType32 = submitResultRequestToDomainMapper29.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade33 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade33);
        com.vntu.marenko.ualearning.server.model.User user35 = new com.vntu.marenko.ualearning.server.model.User();
        user35.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType44 = submitResultRequestToDomainMapper41.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade45 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade45);
        boolean boolean47 = user35.equals((java.lang.Object) submitResultRequestToDomainMapper41);
        com.vntu.marenko.ualearning.server.model.Result result48 = new com.vntu.marenko.ualearning.server.model.Result();
        result48.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user51 = new com.vntu.marenko.ualearning.server.model.User();
        user51.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test54 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean55 = user51.equals((java.lang.Object) test54);
        user51.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result48.setUser(user51);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest59 = null;
        ma.glasnost.orika.MappingContext mappingContext60 = null;
        submitResultRequestToDomainMapper41.mapBtoA(result48, submitResultRequest59, mappingContext60);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest62 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest62.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int65 = submitResultRequest62.getTestId();
        ma.glasnost.orika.MappingContext mappingContext66 = null;
        submitResultRequestToDomainMapper29.mapBtoA(result48, submitResultRequest62, mappingContext66);
        submitResultRequest62.setTestId((-1));
        submitResultRequest62.setUserLogin("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
        com.vntu.marenko.ualearning.server.model.Post post72 = new com.vntu.marenko.ualearning.server.model.Post();
        post72.setText("");
        java.util.Date date75 = null;
        post72.setTimestamp(date75);
        boolean boolean77 = submitResultRequest62.equals((java.lang.Object) post72);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto78 = resultController25.submitTest(submitResultRequest62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType32);
        org.junit.Assert.assertNotNull(submitResultRequestType44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        int int23 = resultDto0.getId();
        boolean boolean24 = resultDto0.isSubmitted();
        resultDto0.setMark((long) 52);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        int int52 = testDto0.getId();
        testDto0.setId((int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        int int3 = resultDto0.getId();
        long long4 = resultDto0.getMark();
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str6 = userDto5.toString();
        java.lang.String str7 = userDto5.getLogin();
        userDto5.setLogin("hi!");
        resultDto0.setUser(userDto5);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto11 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto11.setInstitution("");
        java.lang.String str14 = userDto11.getInstitution();
        userDto11.setEmail("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        resultDto0.setUser(userDto11);
        resultDto0.setSubmitted(false);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto20 = resultDto0.getUser();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str6, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(userDto20);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getPassword();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        ma.glasnost.orika.MapperFacade mapperFacade3 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto5 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl6 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean7 = answerDto5.equals((java.lang.Object) markComputerImpl6);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl8 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade3, userRepository4, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl6);
        boolean boolean9 = loginRequest0.equals((java.lang.Object) resultServiceImpl8);
        loginRequest0.setPassword("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto12 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto12.setId((int) '#');
        boolean boolean15 = loginRequest0.equals((java.lang.Object) questionDto12);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl17 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository16);
        boolean boolean18 = questionDto12.equals((java.lang.Object) userServiceImpl17);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper19 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean20 = createPostRequestToPostMapper19.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig21 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl22 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository25 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper26 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository23, testRepository24, answerRepository25);
        ma.glasnost.orika.MapperFacade mapperFacade27 = null;
        submitResultRequestToDomainMapper26.setMapperFacade(mapperFacade27);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType29 = submitResultRequestToDomainMapper26.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper30 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper31 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean32 = createPostRequestToPostMapper31.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper33 = null;
        ma.glasnost.orika.MapperFacade mapperFacade34 = mapperConfig21.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl22, submitResultRequestToDomainMapper26, resultToDescriptionMapper30, createPostRequestToPostMapper31, postToDtoMapper33);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl35 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository37 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository38 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper39 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository36, testRepository37, answerRepository38);
        ma.glasnost.orika.MapperFacade mapperFacade40 = null;
        submitResultRequestToDomainMapper39.setMapperFacade(mapperFacade40);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType42 = submitResultRequestToDomainMapper39.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper43 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig44 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl45 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository48 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper49 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository46, testRepository47, answerRepository48);
        ma.glasnost.orika.MapperFacade mapperFacade50 = null;
        submitResultRequestToDomainMapper49.setMapperFacade(mapperFacade50);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType52 = submitResultRequestToDomainMapper49.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper53 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper54 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean55 = createPostRequestToPostMapper54.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper56 = null;
        ma.glasnost.orika.MapperFacade mapperFacade57 = mapperConfig44.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl45, submitResultRequestToDomainMapper49, resultToDescriptionMapper53, createPostRequestToPostMapper54, postToDtoMapper56);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig21.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl35, submitResultRequestToDomainMapper39, resultToDescriptionMapper43, createPostRequestToPostMapper54, postToDtoMapper58);
        createPostRequestToPostMapper19.setMapperFacade(mapperFacade59);
        com.vntu.marenko.ualearning.server.controller.UserController userController61 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl17, mapperFacade59);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.UserDto> userDtoList62 = userController61.rating();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNotNull(resultType29);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(mapperFacade34);
        org.junit.Assert.assertNotNull(resultType42);
        org.junit.Assert.assertNotNull(resultType52);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
        org.junit.Assert.assertNotNull(mapperFacade57);
        org.junit.Assert.assertNotNull(mapperFacade59);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        java.lang.Boolean boolean4 = resultToDescriptionMapper1.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig5 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl6 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository9 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper10 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository7, testRepository8, answerRepository9);
        ma.glasnost.orika.MapperFacade mapperFacade11 = null;
        submitResultRequestToDomainMapper10.setMapperFacade(mapperFacade11);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType13 = submitResultRequestToDomainMapper10.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper14 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper15 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean16 = createPostRequestToPostMapper15.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper17 = null;
        ma.glasnost.orika.MapperFacade mapperFacade18 = mapperConfig5.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl6, submitResultRequestToDomainMapper10, resultToDescriptionMapper14, createPostRequestToPostMapper15, postToDtoMapper17);
        resultToDescriptionMapper1.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType20 = resultToDescriptionMapper1.getBType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription21 = null;
        com.vntu.marenko.ualearning.server.model.Result result22 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int23 = result22.getId();
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int25 = test24.getId();
        java.lang.Integer int26 = test24.getId();
        result22.setTest(test24);
        java.lang.Integer int28 = result22.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList29 = result22.getAnswers();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription21, result22, mappingContext30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType32 = resultToDescriptionMapper1.getBType();
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(resultType13);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(mapperFacade18);
        org.junit.Assert.assertNotNull(resultDescriptionType20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(answerList29);
        org.junit.Assert.assertNotNull(resultDescriptionType32);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        userDto0.setName("SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)");
        userDto0.setAge((int) ' ');
        userDto0.setSurname("TagDto(id=1, name=null)");
        userDto0.setLogin("Tag(id=null, name=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setMark((long) (short) 0);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto6 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int7 = testDto6.getId();
        int int8 = testDto6.getId();
        testDto6.setCompletedCounter((java.lang.Integer) 0);
        testDto6.setId((int) (short) 10);
        resultDto0.setTest(testDto6);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto14 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto14.setInstitution("");
        java.lang.String str17 = userDto14.getEmail();
        java.lang.String str18 = userDto14.getLogin();
        resultDto0.setUser(userDto14);
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        questionDto0.setId(10);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList5 = questionDto0.getAnswers();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(answerDtoList5);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.Integer int17 = post14.getId();
        java.util.Date date18 = post14.getTimestamp();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = null;
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper10.mapBtoA(post14, createPostRequest19, mappingContext20);
        java.lang.String[] strArray34 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "TagDto(id=0, name=null)", "LoginRequest(login=null, password=null)", "Answer(id=null, text=null, correct=false)", "CreatePostRequest(text=null, username=null)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=null, username=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)", "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "Post(id=null, text=, timestamp=null, user=null, likes=null)" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        post14.setLikes((java.util.List<java.lang.String>) strList35);
        java.util.List<java.lang.String> strList38 = post14.getLikes();
        post14.setId((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(date18);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strList38);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer0.setCorrect(false);
        answer0.setCorrect(false);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getTestId();
        long long7 = resultDescription0.getMark();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest22 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest22.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper18.mapAtoB(createPostRequest22, post25, mappingContext26);
        boolean boolean28 = resultDescription0.equals((java.lang.Object) createPostRequestToPostMapper18);
        com.vntu.marenko.ualearning.server.model.Post post29 = new com.vntu.marenko.ualearning.server.model.Post();
        post29.setText("");
        java.lang.String str32 = post29.toString();
        java.lang.Integer int33 = post29.getId();
        post29.setText("Answer(id=null, text=null, correct=false)");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper37 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType38 = createPostRequestToPostMapper37.getBType();
        com.vntu.marenko.ualearning.server.model.Post post39 = new com.vntu.marenko.ualearning.server.model.Post();
        post39.setText("");
        java.lang.String str42 = post39.toString();
        post39.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest45 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest45.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext48 = null;
        createPostRequestToPostMapper37.mapBtoA(post39, createPostRequest45, mappingContext48);
        com.vntu.marenko.ualearning.server.model.Post post50 = new com.vntu.marenko.ualearning.server.model.Post();
        post50.setText("");
        java.lang.String str53 = post50.toString();
        java.lang.Integer int54 = post50.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest55 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str56 = createPostRequest55.getUsername();
        java.lang.String str57 = createPostRequest55.toString();
        ma.glasnost.orika.MappingContext mappingContext58 = null;
        createPostRequestToPostMapper37.mapBtoA(post50, createPostRequest55, mappingContext58);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper60 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType61 = createPostRequestToPostMapper60.getBType();
        com.vntu.marenko.ualearning.server.model.Post post62 = new com.vntu.marenko.ualearning.server.model.Post();
        post62.setText("");
        java.lang.String str65 = post62.toString();
        post62.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest68 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest68.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext71 = null;
        createPostRequestToPostMapper60.mapBtoA(post62, createPostRequest68, mappingContext71);
        ma.glasnost.orika.MappingContext mappingContext73 = null;
        createPostRequestToPostMapper36.mapAtoB(createPostRequest55, post62, mappingContext73);
        ma.glasnost.orika.MappingContext mappingContext75 = null;
        createPostRequestToPostMapper18.mapBtoA(post29, createPostRequest55, mappingContext75);
        java.lang.Boolean boolean77 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest78 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str79 = createPostRequest78.getUsername();
        createPostRequest78.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str82 = createPostRequest78.toString();
        java.lang.String str83 = createPostRequest78.getUsername();
        com.vntu.marenko.ualearning.server.model.Post post84 = new com.vntu.marenko.ualearning.server.model.Post();
        post84.setText("");
        java.lang.String str87 = post84.toString();
        java.lang.Integer int88 = post84.getId();
        java.util.Date date89 = null;
        post84.setTimestamp(date89);
        java.lang.String str91 = post84.getText();
        java.lang.String str92 = post84.getUser();
        ma.glasnost.orika.MappingContext mappingContext93 = null;
        createPostRequestToPostMapper18.mapAtoB(createPostRequest78, post84, mappingContext93);
        createPostRequest78.setUsername("Post(id=-1, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str32, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(postType38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str42, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str53, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str57, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str65, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + boolean77 + "' != '" + false + "'", boolean77, false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)" + "'", str82, "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str87, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper1.getBType();
        java.lang.Boolean boolean18 = postToDtoMapper1.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper19 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType20 = createPostRequestToPostMapper19.getBType();
        com.vntu.marenko.ualearning.server.model.Post post21 = new com.vntu.marenko.ualearning.server.model.Post();
        post21.setText("");
        java.lang.String str24 = post21.toString();
        post21.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest27 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest27.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        createPostRequestToPostMapper19.mapBtoA(post21, createPostRequest27, mappingContext30);
        com.vntu.marenko.ualearning.server.model.Post post32 = new com.vntu.marenko.ualearning.server.model.Post();
        post32.setText("");
        java.lang.String str35 = post32.toString();
        java.lang.Integer int36 = post32.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest37 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str38 = createPostRequest37.getUsername();
        java.lang.String str39 = createPostRequest37.toString();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper19.mapBtoA(post32, createPostRequest37, mappingContext40);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository44 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper45 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository42, testRepository43, answerRepository44);
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade46);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType48 = submitResultRequestToDomainMapper45.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper49 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig50 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl51 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository52 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository53 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository54 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper55 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository52, testRepository53, answerRepository54);
        ma.glasnost.orika.MapperFacade mapperFacade56 = null;
        submitResultRequestToDomainMapper55.setMapperFacade(mapperFacade56);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType58 = submitResultRequestToDomainMapper55.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper59 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper60 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean61 = createPostRequestToPostMapper60.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = null;
        ma.glasnost.orika.MapperFacade mapperFacade63 = mapperConfig50.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl51, submitResultRequestToDomainMapper55, resultToDescriptionMapper59, createPostRequestToPostMapper60, postToDtoMapper62);
        postToDtoMapper49.setMapperFacade(mapperFacade63);
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade63);
        createPostRequestToPostMapper19.setMapperFacade(mapperFacade63);
        postToDtoMapper1.setMapperFacade(mapperFacade63);
        com.vntu.marenko.ualearning.server.controller.UserController userController68 = new com.vntu.marenko.ualearning.server.controller.UserController(userService0, mapperFacade63);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.UserDto userDto70 = userController68.getUser("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(postType20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str24, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str35, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str39, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(resultType48);
        org.junit.Assert.assertNotNull(resultType58);
        org.junit.Assert.assertEquals("'" + boolean61 + "' != '" + false + "'", boolean61, false);
        org.junit.Assert.assertNotNull(mapperFacade63);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer0 = null;
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper(markComputer0);
        ma.glasnost.orika.Mapper[] mapperArray3 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray4 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray3;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.setUsedMappers(objMapperArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mapperArray3);
        org.junit.Assert.assertNotNull(objMapperArray4);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl21 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository20);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.UserController userController38 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl21, mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.TestController testController39 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade36);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Test test41 = testServiceImpl2.getTest((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper3 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = resultToDescriptionMapper3.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper3.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType6 = resultToDescriptionMapper3.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType7 = resultToDescriptionMapper3.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper8 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean9 = createPostRequestToPostMapper8.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig10 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl11 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType18 = submitResultRequestToDomainMapper15.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper19 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper20 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean21 = createPostRequestToPostMapper20.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = null;
        ma.glasnost.orika.MapperFacade mapperFacade23 = mapperConfig10.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl11, submitResultRequestToDomainMapper15, resultToDescriptionMapper19, createPostRequestToPostMapper20, postToDtoMapper22);
        createPostRequestToPostMapper8.setMapperFacade(mapperFacade23);
        resultToDescriptionMapper3.setMapperFacade(mapperFacade23);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController26 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade23);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest27 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str28 = loginRequest27.toString();
        java.lang.String str29 = loginRequest27.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = authorisationController26.login(loginRequest27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertNotNull(resultDescriptionType6);
        org.junit.Assert.assertNotNull(resultType7);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNotNull(resultType18);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
        org.junit.Assert.assertNotNull(mapperFacade23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str28, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str29, "LoginRequest(login=null, password=null)");
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        java.lang.String str4 = userDto0.getInstitution();
        java.lang.String str5 = userDto0.getSurname();
        userDto0.setSurname("");
        java.lang.String str8 = userDto0.getName();
        java.lang.String str9 = userDto0.getInstitution();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer3 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer4 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer4.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray7 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer3, answer4 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList8 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList8, answerArray7);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList8);
        com.vntu.marenko.ualearning.server.model.Result result11 = new com.vntu.marenko.ualearning.server.model.Result();
        result11.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user14 = new com.vntu.marenko.ualearning.server.model.User();
        user14.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test17 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean18 = user14.equals((java.lang.Object) test17);
        user14.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result11.setUser(user14);
        com.vntu.marenko.ualearning.server.model.Question question22 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int23 = question22.getId();
        java.lang.Integer int24 = question22.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer25 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer26 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer26.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray29 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer25, answer26 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList30 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList30, answerArray29);
        question22.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList30);
        result11.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList30);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList30);
        question0.setText("Question(id=35, text=null, answers=[Answer(id=null, text=null, correct=false)])");
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(answerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(answerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int5 = test0.getCompletedCounter();
        java.lang.Integer int6 = test0.getCompletedCounter();
        java.lang.Integer int7 = test0.getCompletedCounter();
        java.lang.String str8 = test0.getDescriptionTest();
        test0.setId((java.lang.Integer) 0);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList11 = test0.getTags();
        com.vntu.marenko.ualearning.server.model.Result result12 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int13 = result12.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        result12.setTest(test14);
        java.lang.Integer int18 = result12.getId();
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int20 = test19.getId();
        java.lang.Integer int21 = test19.getId();
        test19.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int24 = test19.getCompletedCounter();
        java.lang.Integer int25 = test19.getCompletedCounter();
        result12.setTest(test19);
        com.vntu.marenko.ualearning.server.model.Test test27 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray28 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList29 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList29, tagArray28);
        test27.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList29);
        test19.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList29);
        test0.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList29);
        test0.setCompletedCounter((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str8, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(tagList11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(tagArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag0.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str3 = tag0.toString();
        tag0.setId((java.lang.Integer) 35);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))" + "'", str3, "Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        java.lang.Integer int3 = resultDescription0.getTestId();
        java.lang.String str4 = resultDescription0.getTestName();
        java.lang.String str5 = resultDescription0.toString();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=0)" + "'", str5, "ResultDescription(id=0, testId=null, testName=null, mark=0)");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getPassword();
        java.lang.String str4 = userRequest0.getEmail();
        userRequest0.setSurname("UserRequest(login=LoginRequest(login=Tag(id=null, name=null), password=null), password=Question(id=null, text=null, answers=null), name=null, surname=null, age=0, institution=null, email=null)");
        userRequest0.setAge(100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer0.setText("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        boolean boolean3 = answer0.isCorrect();
        answer0.setText("Answer(id=100, text=null, correct=false)");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        int int2 = testDto0.getId();
        testDto0.setCompletedCounter((java.lang.Integer) 0);
        java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList5 = testDto0.getTags();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto6 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str7 = testDto6.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto8 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str9 = tagDto8.toString();
        java.lang.String str10 = tagDto8.getName();
        com.vntu.marenko.ualearning.server.model.User user11 = new com.vntu.marenko.ualearning.server.model.User();
        long long12 = user11.getRating();
        user11.setLogin("hi!");
        boolean boolean15 = tagDto8.equals((java.lang.Object) user11);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto16 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str17 = tagDto16.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto18 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto18.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto21 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str22 = tagDto21.toString();
        java.lang.String str23 = tagDto21.getName();
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int25 = test24.getId();
        java.lang.Integer int26 = test24.getId();
        test24.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList29 = test24.getTags();
        boolean boolean30 = tagDto21.equals((java.lang.Object) tagList29);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        boolean boolean35 = tagDto31.equals((java.lang.Object) (-1L));
        int int36 = tagDto31.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto37 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto37.setId(1);
        java.lang.String str40 = tagDto37.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto41 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str42 = tagDto41.toString();
        java.lang.String str43 = tagDto41.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto44 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str45 = tagDto44.toString();
        java.lang.String str46 = tagDto44.getName();
        com.vntu.marenko.ualearning.server.model.Test test47 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int48 = test47.getId();
        java.lang.Integer int49 = test47.getId();
        test47.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList52 = test47.getTags();
        boolean boolean53 = tagDto44.equals((java.lang.Object) tagList52);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray54 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto8, tagDto16, tagDto18, tagDto21, tagDto31, tagDto37, tagDto41, tagDto44 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList55 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList55, tagDtoArray54);
        testDto6.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList55);
        testDto6.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str60 = testDto6.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto61 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto61.setId(1);
        int int64 = tagDto61.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto65 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto65.setId(1);
        java.lang.String str68 = tagDto65.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto69 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str70 = tagDto69.toString();
        java.lang.String str71 = tagDto69.getName();
        com.vntu.marenko.ualearning.server.model.Test test72 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int73 = test72.getId();
        java.lang.Integer int74 = test72.getId();
        test72.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList77 = test72.getTags();
        boolean boolean78 = tagDto69.equals((java.lang.Object) tagList77);
        tagDto69.setName("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto81 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str82 = tagDto81.toString();
        java.lang.String str83 = tagDto81.getName();
        java.lang.String str84 = tagDto81.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto85 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str86 = tagDto85.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray87 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto61, tagDto65, tagDto69, tagDto81, tagDto85 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList88 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList88, tagDtoArray87);
        testDto6.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList88);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList88);
        testDto0.setNameTest("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.dto.QuestionDto> questionDtoList94 = testDto0.getQuestions();
        testDto0.setCompletedCounter((java.lang.Integer) 52);
        testDto0.setId((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(tagDtoList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str7, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "TagDto(id=0, name=null)" + "'", str9, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "TagDto(id=0, name=null)" + "'", str17, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "TagDto(id=0, name=null)" + "'", str22, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(tagList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "TagDto(id=0, name=null)" + "'", str42, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "TagDto(id=0, name=null)" + "'", str45, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(tagList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(tagDtoArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])" + "'", str60, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "TagDto(id=0, name=null)" + "'", str70, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(tagList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "TagDto(id=0, name=null)" + "'", str82, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "TagDto(id=0, name=null)" + "'", str86, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNotNull(tagDtoArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(questionDtoList94);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.toString();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList2 = questionDto0.getAnswers();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "QuestionDto(id=0, text=null, answers=null)" + "'", str1, "QuestionDto(id=0, text=null, answers=null)");
        org.junit.Assert.assertNull(answerDtoList2);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        createPostRequest0.setText("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        com.vntu.marenko.ualearning.server.model.Result result6 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user8 = new com.vntu.marenko.ualearning.server.model.User();
        user8.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test11 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean12 = user8.equals((java.lang.Object) test11);
        result7.setUser(user8);
        result6.setUser(user8);
        boolean boolean15 = createPostRequest0.equals((java.lang.Object) result6);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto16 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str17 = postDto16.getLogin();
        java.lang.String[] strArray22 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        postDto16.setLikes((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = postDto16.getText();
        boolean boolean27 = result6.equals((java.lang.Object) postDto16);
        com.vntu.marenko.ualearning.server.model.Test test28 = result6.getTest();
        com.vntu.marenko.ualearning.server.model.Test test29 = result6.getTest();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(test28);
        org.junit.Assert.assertNull(test29);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("hi!");
        user0.setRating((long) '#');
        user0.setEmail("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        long long9 = user0.getRating();
        user0.setRating((long) (short) 100);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 35L + "'", long9 == 35L);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        java.lang.String str2 = loginRequest0.toString();
        java.lang.String str3 = loginRequest0.toString();
        loginRequest0.setLogin("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.lang.String str6 = loginRequest0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str2, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str3, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginRequest(login=ResultDescription(id=null, testId=100, testName=null, mark=0), password=null)" + "'", str6, "LoginRequest(login=ResultDescription(id=null, testId=100, testName=null, mark=0), password=null)");
    }
}
