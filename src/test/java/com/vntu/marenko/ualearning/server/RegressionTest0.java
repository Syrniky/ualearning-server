package com.vntu.marenko.ualearning.server;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = testController2.getTest((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList4 = testController2.getTestDescriptionsForTag(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList4 = testController2.getTestDescriptionsForTag((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.UserController userController2 = new com.vntu.marenko.ualearning.server.controller.UserController(userService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.UserDto> userDtoList3 = userController2.rating();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = testController2.getTest((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest2 = null;
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext4 = null;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper0.mapAtoB(createPostRequest2, post3, mappingContext4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto4 = postController2.getPost(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        java.lang.Class<?> wildcardClass5 = test3.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto10 = resultController8.getResult((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto4 = postController2.getPost((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper5 = null;
        ma.glasnost.orika.Mapper[] mapperArray7 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray8 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray7;
        objMapperArray8[0] = objMapper5;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers(objMapperArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(mapperArray7);
        org.junit.Assert.assertNotNull(objMapperArray8);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList6 = resultServiceImpl4.getResultsForUser("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getInstitution();
        long long5 = user0.getRating();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList10 = resultServiceImpl4.getResultsForUser("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str8 = post2.getUser();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post9 = postServiceImpl1.savePost(post2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str8, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList3 = postServiceImpl1.getPostsForUser("Answer(id=null, text=null, correct=false)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest3 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto4 = postController2.createPost(createPostRequest3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto6 = resultServiceImpl4.getResult((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post6 = postServiceImpl1.savePost(post2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList10 = resultController8.getResultsForUser("ResultDescription(id=0, testId=null, testName=null, mark=1)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoList4 = postController2.getPostsForUser("Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto4 = postController2.getPost((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Test test4 = testServiceImpl2.getTest((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest5 = null;
        com.vntu.marenko.ualearning.server.model.Result result6 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int7 = result6.getId();
        com.vntu.marenko.ualearning.server.model.Test test8 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int9 = test8.getId();
        java.lang.Integer int10 = test8.getId();
        result6.setTest(test8);
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.mapAtoB(submitResultRequest5, result6, mappingContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList3 = testController2.getTestDescriptions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList8 = resultController6.getResultsForUser("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList4 = testServiceImpl2.getTestsWithTag((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.Integer int5 = post2.getId();
        java.util.Date date6 = post2.getTimestamp();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post7 = postServiceImpl1.savePost(post2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(date6);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList4 = testServiceImpl2.getTestsWithTag((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = testController2.getTest((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList8 = resultController6.getResultsForUser("TagDto(id=0, name=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto8 = resultController6.getResult((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.User> userList2 = userServiceImpl1.top10();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto24 = resultServiceImpl4.submitResult(submitResultRequest23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.User user3 = userServiceImpl1.getUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto25 = resultServiceImpl23.submitResult(submitResultRequest24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        com.vntu.marenko.ualearning.server.model.Post post16 = new com.vntu.marenko.ualearning.server.model.Post();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto17 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.mapAtoB(post16, postDto17, mappingContext18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        long long5 = resultDescription0.getMark();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto10 = resultServiceImpl4.getResult(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        java.lang.String str5 = resultDescription0.getTestName();
        resultDescription0.setTestName("Tag(id=null, name=null)");
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList3 = testServiceImpl2.getAllTests();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto4 = postController2.getPost((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController17 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService0, mapperFacade15);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest18 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str19 = userRequest18.getInstitution();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = authorisationController17.register(userRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoList4 = postController2.getPostsForUser("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.lang.Integer int4 = post0.getId();
        java.util.Date date5 = null;
        post0.setTimestamp(date5);
        java.lang.String str7 = post0.getText();
        java.lang.Integer int8 = post0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList8 = resultController6.getResultsForUser("Tag(id=null, name=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList3 = postServiceImpl1.getPostsForUser("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("hi!");
        user0.setEmail("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        user0.setInstitution("ResultDescription(id=0, testId=null, testName=null, mark=1)");
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        int int7 = testDescription0.getId();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl6 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto8 = resultServiceImpl6.getResult((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post3 = postServiceImpl1.getPost((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        java.lang.String str5 = test3.toString();
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList6 = test3.getTags();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str5, "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertNull(tagList6);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.UserDto> userDtoList61 = userController60.rating();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto10 = resultController8.submitTest(submitResultRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str1 = question0.getText();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService3 = null;
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController5 = new com.vntu.marenko.ualearning.server.controller.TestController(testService3, mapperFacade4);
        boolean boolean6 = question0.equals((java.lang.Object) testController5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList7 = testController5.getTestDescriptions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.User user62 = userServiceImpl1.getUser("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.String str6 = resultDescription0.getTestName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList3 = postServiceImpl1.getPostsForUser("CreatePostRequest(text=null, username=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str1 = question0.getText();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService3 = null;
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController5 = new com.vntu.marenko.ualearning.server.controller.TestController(testService3, mapperFacade4);
        boolean boolean6 = question0.equals((java.lang.Object) testController5);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto8 = testController5.getTest((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest14 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest14.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post17 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        createPostRequestToPostMapper10.mapAtoB(createPostRequest14, post17, mappingContext18);
        java.lang.Class<?> wildcardClass20 = createPostRequestToPostMapper10.getClass();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList6 = resultServiceImpl4.getResultsForUser("QuestionDto(id=10, text=null, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        java.lang.String str1 = answerDto0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "AnswerDto(id=0, text=null)" + "'", str1, "AnswerDto(id=0, text=null)");
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("QuestionDto(id=0, text=null, answers=null)");
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest14 = null;
        com.vntu.marenko.ualearning.server.model.Result result15 = new com.vntu.marenko.ualearning.server.model.Result();
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper5.mapAtoB(submitResultRequest14, result15, mappingContext16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto25 = resultServiceImpl23.getResult((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository22 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository22);
        com.vntu.marenko.ualearning.server.controller.PostController postController24 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade19, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList26 = postServiceImpl23.getPostsForUser("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository22 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository22);
        com.vntu.marenko.ualearning.server.controller.PostController postController24 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade19, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl23);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest25 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest25.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto28 = postController24.createPost(createPostRequest25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post3 = postServiceImpl1.getPost(100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository5 = null;
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer8 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository5, mapperFacade6, userRepository7, markComputer8);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig12 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl13 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository16 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper17 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository14, testRepository15, answerRepository16);
        ma.glasnost.orika.MapperFacade mapperFacade18 = null;
        submitResultRequestToDomainMapper17.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper17.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper21 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = null;
        ma.glasnost.orika.MapperFacade mapperFacade25 = mapperConfig12.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl13, submitResultRequestToDomainMapper17, resultToDescriptionMapper21, createPostRequestToPostMapper22, postToDtoMapper24);
        createPostRequestToPostMapper10.setMapperFacade(mapperFacade25);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController27 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl9, mapperFacade25);
        boolean boolean28 = test0.equals((java.lang.Object) resultController27);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest29 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto30 = resultController27.submitTest(submitResultRequest29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(mapperFacade25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        java.lang.Integer int6 = post2.getId();
        java.util.Date date7 = null;
        post2.setTimestamp(date7);
        java.lang.String str9 = post2.getText();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post10 = postServiceImpl1.savePost(post2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        java.lang.String str5 = user0.getEmail();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str5, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController17 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService0, mapperFacade15);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest18 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = authorisationController17.login(loginRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.User> userList78 = userServiceImpl1.top10();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = testController2.getTest(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest78 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str79 = userRequest78.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto80 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto80.setId((int) '#');
        boolean boolean83 = userRequest78.equals((java.lang.Object) '#');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = authorisationController77.register(userRequest78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository22 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository22);
        com.vntu.marenko.ualearning.server.controller.PostController postController24 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade19, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl23);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper25 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType26 = createPostRequestToPostMapper25.getBType();
        com.vntu.marenko.ualearning.server.model.Post post27 = new com.vntu.marenko.ualearning.server.model.Post();
        post27.setText("");
        java.lang.String str30 = post27.toString();
        post27.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest33 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest33.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext36 = null;
        createPostRequestToPostMapper25.mapBtoA(post27, createPostRequest33, mappingContext36);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post38 = postServiceImpl23.savePost(post27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
        org.junit.Assert.assertNotNull(postType26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str30, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList8 = resultController6.getResultsForUser("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoList4 = postController2.getPostsForUser("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = tag0.equals((java.lang.Object) createPostRequest23);
        java.lang.String str44 = tag0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto6 = resultServiceImpl4.getResult((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList10 = resultController8.getResultsForUser("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        java.lang.Integer int6 = post2.getId();
        java.util.Date date7 = null;
        post2.setTimestamp(date7);
        java.lang.String str9 = post2.getText();
        java.util.List<java.lang.String> strList10 = post2.getLikes();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post11 = postServiceImpl1.savePost(post2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest78 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str79 = userRequest78.getName();
        java.lang.String str80 = userRequest78.getName();
        java.lang.String str81 = userRequest78.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = authorisationController77.register(userRequest78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str81, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        int int2 = tagDto0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post44 = postServiceImpl40.getPost((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository8);
        boolean boolean10 = userRequest0.equals((java.lang.Object) postServiceImpl9);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post12 = postServiceImpl9.getPost((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper33, postToDtoMapper37);
        com.vntu.marenko.ualearning.server.model.Result result39 = new com.vntu.marenko.ualearning.server.model.Result();
        result39.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user42 = new com.vntu.marenko.ualearning.server.model.User();
        user42.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test45 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean46 = user42.equals((java.lang.Object) test45);
        user42.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result39.setUser(user42);
        com.vntu.marenko.ualearning.server.model.Question question50 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int51 = question50.getId();
        java.lang.Integer int52 = question50.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer53 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer54 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer54.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray57 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer53, answer54 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList58 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList58, answerArray57);
        question50.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList58);
        result39.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList58);
        com.vntu.marenko.ualearning.server.model.Test test62 = result39.getTest();
        // The following exception was thrown during execution in test generation
        try {
            long long63 = markComputerImpl14.compute(result39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(answerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(test62);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl14 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl14, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper33, postToDtoMapper37);
        com.vntu.marenko.ualearning.server.model.Result result39 = new com.vntu.marenko.ualearning.server.model.Result();
        result39.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test42 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int43 = test42.getId();
        java.lang.Integer int44 = test42.getId();
        test42.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int47 = test42.getCompletedCounter();
        result39.setTest(test42);
        com.vntu.marenko.ualearning.server.model.Test test49 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Test test50 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray51 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList52 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList52, tagArray51);
        test50.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList52);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray55 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList56 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList56, tagArray55);
        test50.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList56);
        test49.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList56);
        result39.setTest(test49);
        // The following exception was thrown during execution in test generation
        try {
            long long61 = markComputerImpl14.compute(result39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(tagArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(tagArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str1 = user0.getEmail();
        user0.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        int int4 = user0.getAge();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper22 = null;
        ma.glasnost.orika.Mapper[] mapperArray24 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray25 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray24;
        objMapperArray25[0] = objMapper22;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers(objMapperArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
        org.junit.Assert.assertNotNull(mapperArray24);
        org.junit.Assert.assertNotNull(objMapperArray25);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController17 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService0, mapperFacade15);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest18 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str19 = loginRequest18.toString();
        java.lang.String str20 = loginRequest18.getLogin();
        loginRequest18.setPassword("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = authorisationController17.login(loginRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str19, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType19 = postToDtoMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post20 = new com.vntu.marenko.ualearning.server.model.Post();
        post20.setText("");
        java.lang.String str23 = post20.toString();
        post20.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str26 = post20.getUser();
        java.lang.Integer int27 = post20.getId();
        java.util.Date date28 = null;
        post20.setTimestamp(date28);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto30 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto30.setId(0);
        ma.glasnost.orika.MappingContext mappingContext33 = null;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.mapAtoB(post20, postDto30, mappingContext33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertNotNull(postType18);
        org.junit.Assert.assertNotNull(postDtoType19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str23, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str26, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository5 = null;
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer8 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository5, mapperFacade6, userRepository7, markComputer8);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig12 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl13 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository16 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper17 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository14, testRepository15, answerRepository16);
        ma.glasnost.orika.MapperFacade mapperFacade18 = null;
        submitResultRequestToDomainMapper17.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper17.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper21 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = null;
        ma.glasnost.orika.MapperFacade mapperFacade25 = mapperConfig12.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl13, submitResultRequestToDomainMapper17, resultToDescriptionMapper21, createPostRequestToPostMapper22, postToDtoMapper24);
        createPostRequestToPostMapper10.setMapperFacade(mapperFacade25);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController27 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl9, mapperFacade25);
        boolean boolean28 = test0.equals((java.lang.Object) resultController27);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest29 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest29.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest29.setTestId((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto34 = resultController27.submitTest(submitResultRequest29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(mapperFacade25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        testDescription0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        com.vntu.marenko.ualearning.server.model.Test test5 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int6 = test5.getId();
        java.lang.Integer int7 = test5.getId();
        test5.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int10 = test5.getCompletedCounter();
        java.lang.Integer int11 = test5.getId();
        boolean boolean12 = testDescription0.equals((java.lang.Object) int11);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = test2.getId();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList2 = null;
        question0.setAnswers(answerList2);
        question0.setId((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int1);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.User user62 = userServiceImpl1.getUser("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList22 = testController21.getTestDescriptions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository22 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository22);
        com.vntu.marenko.ualearning.server.controller.PostController postController24 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade19, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList26 = postServiceImpl23.getPostsForUser("Tag(id=null, name=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList8 = resultController6.getResultsForUser("QuestionDto(id=10, text=null, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl6 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4);
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        result7.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest10 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str11 = userRequest10.getName();
        java.lang.String str12 = userRequest10.getName();
        boolean boolean13 = result7.equals((java.lang.Object) str12);
        java.lang.String str14 = result7.toString();
        // The following exception was thrown during execution in test generation
        try {
            long long15 = markComputerImpl4.compute(result7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Result(id=100, user=null, test=null, submitted=false, answers=null)" + "'", str14, "Result(id=100, user=null, test=null, submitted=false, answers=null)");
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.Mapper[] mapperArray2 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray3 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray2;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mapperArray2);
        org.junit.Assert.assertNotNull(objMapperArray3);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        int int1 = postDto0.getId();
        int int2 = postDto0.getId();
        java.util.List<java.lang.String> strList3 = postDto0.getLikes();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strList3);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper2 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType3 = createPostRequestToPostMapper2.getBType();
        com.vntu.marenko.ualearning.server.model.Post post4 = new com.vntu.marenko.ualearning.server.model.Post();
        post4.setText("");
        java.lang.String str7 = post4.toString();
        post4.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest10 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest10.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext13 = null;
        createPostRequestToPostMapper2.mapBtoA(post4, createPostRequest10, mappingContext13);
        com.vntu.marenko.ualearning.server.model.Post post15 = new com.vntu.marenko.ualearning.server.model.Post();
        post15.setText("");
        java.lang.String str18 = post15.toString();
        java.lang.Integer int19 = post15.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest20 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str21 = createPostRequest20.getUsername();
        java.lang.String str22 = createPostRequest20.toString();
        ma.glasnost.orika.MappingContext mappingContext23 = null;
        createPostRequestToPostMapper2.mapBtoA(post15, createPostRequest20, mappingContext23);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper25 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType26 = createPostRequestToPostMapper25.getBType();
        com.vntu.marenko.ualearning.server.model.Post post27 = new com.vntu.marenko.ualearning.server.model.Post();
        post27.setText("");
        java.lang.String str30 = post27.toString();
        post27.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest33 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest33.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext36 = null;
        createPostRequestToPostMapper25.mapBtoA(post27, createPostRequest33, mappingContext36);
        ma.glasnost.orika.MappingContext mappingContext38 = null;
        createPostRequestToPostMapper1.mapAtoB(createPostRequest20, post27, mappingContext38);
        boolean boolean40 = answerDto0.equals((java.lang.Object) mappingContext38);
        java.lang.String str41 = answerDto0.toString();
        org.junit.Assert.assertNotNull(postType3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str7, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str18, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str22, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str30, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "AnswerDto(id=0, text=null)" + "'", str41, "AnswerDto(id=0, text=null)");
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList21 = testServiceImpl2.getTestsWithTag((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository5 = null;
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer8 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository5, mapperFacade6, userRepository7, markComputer8);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig12 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl13 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository16 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper17 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository14, testRepository15, answerRepository16);
        ma.glasnost.orika.MapperFacade mapperFacade18 = null;
        submitResultRequestToDomainMapper17.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper17.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper21 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = null;
        ma.glasnost.orika.MapperFacade mapperFacade25 = mapperConfig12.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl13, submitResultRequestToDomainMapper17, resultToDescriptionMapper21, createPostRequestToPostMapper22, postToDtoMapper24);
        createPostRequestToPostMapper10.setMapperFacade(mapperFacade25);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController27 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl9, mapperFacade25);
        boolean boolean28 = test0.equals((java.lang.Object) resultController27);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto30 = resultController27.getResult(10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(mapperFacade25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList22 = testServiceImpl2.getAllTests();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.service.UserService userService23 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController40 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService23, mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController41 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade38);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto43 = resultController41.getResult((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str1 = question0.getText();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService3 = null;
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController5 = new com.vntu.marenko.ualearning.server.controller.TestController(testService3, mapperFacade4);
        boolean boolean6 = question0.equals((java.lang.Object) testController5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList8 = testController5.getTestDescriptionsForTag((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList8 = test3.getTags();
        boolean boolean9 = tagDto0.equals((java.lang.Object) tagList8);
        tagDto0.setName("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(tagList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl6 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest7 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest7.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest7.setTestId((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto12 = resultServiceImpl6.submitResult(submitResultRequest7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str4 = createPostRequest0.toString();
        createPostRequest0.setUsername("QuestionDto(id=0, text=null, answers=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)" + "'", str4, "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)");
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag0.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType12 = submitResultRequestToDomainMapper9.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade13);
        boolean boolean15 = user3.equals((java.lang.Object) submitResultRequestToDomainMapper9);
        com.vntu.marenko.ualearning.server.model.Result result16 = new com.vntu.marenko.ualearning.server.model.Result();
        result16.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user19 = new com.vntu.marenko.ualearning.server.model.User();
        user19.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test22 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean23 = user19.equals((java.lang.Object) test22);
        user19.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result16.setUser(user19);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest27 = null;
        ma.glasnost.orika.MappingContext mappingContext28 = null;
        submitResultRequestToDomainMapper9.mapBtoA(result16, submitResultRequest27, mappingContext28);
        com.vntu.marenko.ualearning.server.model.User user30 = result16.getUser();
        com.vntu.marenko.ualearning.server.model.User user31 = result16.getUser();
        boolean boolean32 = tag0.equals((java.lang.Object) result16);
        java.lang.String str33 = tag0.toString();
        org.junit.Assert.assertNotNull(submitResultRequestType12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(user30);
        org.junit.Assert.assertNotNull(user31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))" + "'", str33, "Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig19 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.MapperFacade mapperFacade25 = null;
        submitResultRequestToDomainMapper24.setMapperFacade(mapperFacade25);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType27 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean30 = createPostRequestToPostMapper29.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper31 = null;
        ma.glasnost.orika.MapperFacade mapperFacade32 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper31);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository34 = null;
        ma.glasnost.orika.MapperFacade mapperFacade35 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository36 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto37 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl38 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean39 = answerDto37.equals((java.lang.Object) markComputerImpl38);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository34, mapperFacade35, userRepository36, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl38);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl41 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository18, mapperFacade32, userRepository33, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl38);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl42 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade15, userRepository17, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList44 = resultServiceImpl42.getResultsForUser("TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(mapperFacade32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag5 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag5.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag8 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag8.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Tag tag11 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str12 = tag11.toString();
        java.lang.String str13 = tag11.getName();
        java.lang.Integer int14 = tag11.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper15 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType17 = createPostRequestToPostMapper16.getBType();
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        post18.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest24 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest24.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext27 = null;
        createPostRequestToPostMapper16.mapBtoA(post18, createPostRequest24, mappingContext27);
        com.vntu.marenko.ualearning.server.model.Post post29 = new com.vntu.marenko.ualearning.server.model.Post();
        post29.setText("");
        java.lang.String str32 = post29.toString();
        java.lang.Integer int33 = post29.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest34 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str35 = createPostRequest34.getUsername();
        java.lang.String str36 = createPostRequest34.toString();
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper16.mapBtoA(post29, createPostRequest34, mappingContext37);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper39 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType40 = createPostRequestToPostMapper39.getBType();
        com.vntu.marenko.ualearning.server.model.Post post41 = new com.vntu.marenko.ualearning.server.model.Post();
        post41.setText("");
        java.lang.String str44 = post41.toString();
        post41.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest47.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        createPostRequestToPostMapper39.mapBtoA(post41, createPostRequest47, mappingContext50);
        ma.glasnost.orika.MappingContext mappingContext52 = null;
        createPostRequestToPostMapper15.mapAtoB(createPostRequest34, post41, mappingContext52);
        boolean boolean54 = tag11.equals((java.lang.Object) createPostRequest34);
        com.vntu.marenko.ualearning.server.model.Tag tag55 = new com.vntu.marenko.ualearning.server.model.Tag();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray56 = new com.vntu.marenko.ualearning.server.model.Tag[] { tag5, tag8, tag11, tag55 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList57 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList57, tagArray56);
        test0.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList57);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList60 = test0.getTags();
        test0.setId((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Tag(id=null, name=null)" + "'", str12, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(postType17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str32, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str36, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str44, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(tagArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(tagList60);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("hi!");
        java.lang.String str5 = user0.toString();
        java.lang.String str6 = user0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str5, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str6, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        java.lang.String str6 = userRequest0.getLogin();
        java.lang.String str7 = userRequest0.getInstitution();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig18 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl19 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper23.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper27 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean29 = createPostRequestToPostMapper28.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper30 = null;
        ma.glasnost.orika.MapperFacade mapperFacade31 = mapperConfig18.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl19, submitResultRequestToDomainMapper23, resultToDescriptionMapper27, createPostRequestToPostMapper28, postToDtoMapper30);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl32 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository35 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper36 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository33, testRepository34, answerRepository35);
        ma.glasnost.orika.MapperFacade mapperFacade37 = null;
        submitResultRequestToDomainMapper36.setMapperFacade(mapperFacade37);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType39 = submitResultRequestToDomainMapper36.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper40 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig41 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl42 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository45 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper46 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository43, testRepository44, answerRepository45);
        ma.glasnost.orika.MapperFacade mapperFacade47 = null;
        submitResultRequestToDomainMapper46.setMapperFacade(mapperFacade47);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType49 = submitResultRequestToDomainMapper46.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper50 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper51 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean52 = createPostRequestToPostMapper51.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper53 = null;
        ma.glasnost.orika.MapperFacade mapperFacade54 = mapperConfig41.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl42, submitResultRequestToDomainMapper46, resultToDescriptionMapper50, createPostRequestToPostMapper51, postToDtoMapper53);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig18.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl32, submitResultRequestToDomainMapper36, resultToDescriptionMapper40, createPostRequestToPostMapper51, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl57 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade15, userRepository17, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl32);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest58 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest58.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int61 = submitResultRequest58.getTestId();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto62 = resultServiceImpl57.submitResult(submitResultRequest58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(mapperFacade31);
        org.junit.Assert.assertNotNull(resultType39);
        org.junit.Assert.assertNotNull(resultType49);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + false + "'", boolean52, false);
        org.junit.Assert.assertNotNull(mapperFacade54);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType6 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper7 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        postToDtoMapper7.setMapperFacade(mapperFacade21);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade21);
        ma.glasnost.orika.Mapper[] mapperArray25 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray26 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray25;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType6);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertNotNull(mapperArray25);
        org.junit.Assert.assertNotNull(objMapperArray26);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList44 = postServiceImpl40.getPostsForUser("TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto25 = resultServiceImpl23.getResult((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getEmail();
        userDto0.setAge((int) (short) 0);
        userDto0.setRating(10);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.User> userList61 = userServiceImpl1.top10();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        int int3 = user0.getAge();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        com.vntu.marenko.ualearning.server.model.User user19 = new com.vntu.marenko.ualearning.server.model.User();
        user19.setSurname("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = userServiceImpl1.register(user19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = user0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository13 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl14 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository13);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository15 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig17 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository21 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper22 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository19, testRepository20, answerRepository21);
        ma.glasnost.orika.MapperFacade mapperFacade23 = null;
        submitResultRequestToDomainMapper22.setMapperFacade(mapperFacade23);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType25 = submitResultRequestToDomainMapper22.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper26 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper27 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean28 = createPostRequestToPostMapper27.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper29 = null;
        ma.glasnost.orika.MapperFacade mapperFacade30 = mapperConfig17.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18, submitResultRequestToDomainMapper22, resultToDescriptionMapper26, createPostRequestToPostMapper27, postToDtoMapper29);
        postToDtoMapper16.setMapperFacade(mapperFacade30);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig33 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper43 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean44 = createPostRequestToPostMapper43.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper45 = null;
        ma.glasnost.orika.MapperFacade mapperFacade46 = mapperConfig33.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper43, postToDtoMapper45);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig56 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl57 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository58 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository59 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository60 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper61 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository58, testRepository59, answerRepository60);
        ma.glasnost.orika.MapperFacade mapperFacade62 = null;
        submitResultRequestToDomainMapper61.setMapperFacade(mapperFacade62);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType64 = submitResultRequestToDomainMapper61.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper65 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper66 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean67 = createPostRequestToPostMapper66.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper68 = null;
        ma.glasnost.orika.MapperFacade mapperFacade69 = mapperConfig56.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl57, submitResultRequestToDomainMapper61, resultToDescriptionMapper65, createPostRequestToPostMapper66, postToDtoMapper68);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper70 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade71 = mapperConfig33.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper66, postToDtoMapper70);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl72 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository15, mapperFacade30, userRepository32, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47);
        com.vntu.marenko.ualearning.server.controller.UserController userController73 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl14, mapperFacade30);
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade30);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(resultType25);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNotNull(mapperFacade30);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
        org.junit.Assert.assertNotNull(mapperFacade46);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertNotNull(resultType64);
        org.junit.Assert.assertEquals("'" + boolean67 + "' != '" + false + "'", boolean67, false);
        org.junit.Assert.assertNotNull(mapperFacade69);
        org.junit.Assert.assertNotNull(mapperFacade71);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int3 = submitResultRequest0.getTestId();
        java.lang.String str4 = submitResultRequest0.toString();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)" + "'", str4, "SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)");
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        com.vntu.marenko.ualearning.server.model.Post post13 = new com.vntu.marenko.ualearning.server.model.Post();
        post13.setText("");
        java.lang.String str16 = post13.toString();
        java.lang.Integer int17 = post13.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest18 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str19 = createPostRequest18.getUsername();
        java.lang.String str20 = createPostRequest18.toString();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper0.mapBtoA(post13, createPostRequest18, mappingContext21);
        createPostRequest18.setText("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        createPostRequest18.setText("hi!");
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str16, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str20, "CreatePostRequest(text=null, username=null)");
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getTestId();
        resultDescription0.setMark((long) 10);
        resultDescription0.setTestId((java.lang.Integer) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper2 = null;
        ma.glasnost.orika.Mapper[] mapperArray4 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray5 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray4;
        objMapperArray5[0] = objMapper2;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper0.setUsedMappers(objMapperArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(mapperArray4);
        org.junit.Assert.assertNotNull(objMapperArray5);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        java.lang.String str2 = userDto0.getLogin();
        userDto0.setRating((int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 10);
        java.lang.String str3 = resultDescription0.getTestName();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        java.lang.String str2 = userRequest0.getPassword();
        userRequest0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=[])");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.model.User user61 = new com.vntu.marenko.ualearning.server.model.User();
        user61.setSurname("");
        java.lang.String str64 = user61.getEmail();
        long long65 = user61.getRating();
        user61.setRating((long) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str68 = userServiceImpl1.register(user61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setInstitution("hi!");
        java.lang.String str6 = user3.toString();
        java.lang.String str7 = user3.getEmail();
        java.lang.String str8 = user3.getEmail();
        boolean boolean9 = questionDto0.equals((java.lang.Object) str8);
        questionDto0.setId((int) (byte) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str6, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType16 = postToDtoMapper0.getBType();
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper17 = null;
        ma.glasnost.orika.Mapper[] mapperArray19 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray20 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray19;
        objMapperArray20[0] = objMapper17;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.setUsedMappers(objMapperArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postDtoType16);
        org.junit.Assert.assertNotNull(mapperArray19);
        org.junit.Assert.assertNotNull(objMapperArray20);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = testController2.getTest((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId((int) (byte) 100);
        java.lang.String str3 = postDto0.getText();
        int int4 = postDto0.getId();
        java.lang.Object obj5 = null;
        boolean boolean6 = postDto0.equals(obj5);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        questionDto0.setId(10);
        questionDto0.setText("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        java.lang.String str7 = questionDto0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)" + "'", str7, "QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository1 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig19 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.MapperFacade mapperFacade25 = null;
        submitResultRequestToDomainMapper24.setMapperFacade(mapperFacade25);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType27 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean30 = createPostRequestToPostMapper29.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper31 = null;
        ma.glasnost.orika.MapperFacade mapperFacade32 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper31);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl33 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository36 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper37 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository34, testRepository35, answerRepository36);
        ma.glasnost.orika.MapperFacade mapperFacade38 = null;
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade38);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType40 = submitResultRequestToDomainMapper37.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper41 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig42 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl43 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository46 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper47 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository44, testRepository45, answerRepository46);
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        submitResultRequestToDomainMapper47.setMapperFacade(mapperFacade48);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType50 = submitResultRequestToDomainMapper47.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper51 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper52 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean53 = createPostRequestToPostMapper52.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper54 = null;
        ma.glasnost.orika.MapperFacade mapperFacade55 = mapperConfig42.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl43, submitResultRequestToDomainMapper47, resultToDescriptionMapper51, createPostRequestToPostMapper52, postToDtoMapper54);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper56 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade57 = mapperConfig19.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33, submitResultRequestToDomainMapper37, resultToDescriptionMapper41, createPostRequestToPostMapper52, postToDtoMapper56);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl58 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository1, mapperFacade16, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33);
        com.vntu.marenko.ualearning.server.controller.UserController userController59 = new com.vntu.marenko.ualearning.server.controller.UserController(userService0, mapperFacade16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.UserDto> userDtoList60 = userController59.rating();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNotNull(resultType27);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(mapperFacade32);
        org.junit.Assert.assertNotNull(resultType40);
        org.junit.Assert.assertNotNull(resultType50);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(mapperFacade55);
        org.junit.Assert.assertNotNull(mapperFacade57);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository5 = null;
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer8 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository5, mapperFacade6, userRepository7, markComputer8);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig12 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl13 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository16 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper17 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository14, testRepository15, answerRepository16);
        ma.glasnost.orika.MapperFacade mapperFacade18 = null;
        submitResultRequestToDomainMapper17.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper17.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper21 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = null;
        ma.glasnost.orika.MapperFacade mapperFacade25 = mapperConfig12.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl13, submitResultRequestToDomainMapper17, resultToDescriptionMapper21, createPostRequestToPostMapper22, postToDtoMapper24);
        createPostRequestToPostMapper10.setMapperFacade(mapperFacade25);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController27 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl9, mapperFacade25);
        boolean boolean28 = test0.equals((java.lang.Object) resultController27);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList30 = resultController27.getResultsForUser("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(mapperFacade25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str1 = question0.getText();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList2 = question0.getAnswers();
        java.lang.String str3 = question0.getText();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(answerList2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        postDto0.setTimestamp("TagDto(id=1, name=null)");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Test test23 = testServiceImpl2.getTest((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl20 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository14, mapperFacade15, userRepository16, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType25 = submitResultRequestToDomainMapper24.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType30 = createPostRequestToPostMapper29.getBType();
        com.vntu.marenko.ualearning.server.model.Post post31 = new com.vntu.marenko.ualearning.server.model.Post();
        post31.setText("");
        java.lang.String str34 = post31.toString();
        post31.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest37 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest37.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper29.mapBtoA(post31, createPostRequest37, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Post post42 = new com.vntu.marenko.ualearning.server.model.Post();
        post42.setText("");
        java.lang.String str45 = post42.toString();
        java.lang.Integer int46 = post42.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str48 = createPostRequest47.getUsername();
        java.lang.String str49 = createPostRequest47.toString();
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        createPostRequestToPostMapper29.mapBtoA(post42, createPostRequest47, mappingContext50);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository52 = null;
        ma.glasnost.orika.MapperFacade mapperFacade53 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer55 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl56 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository52, mapperFacade53, userRepository54, markComputer55);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper57 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean58 = createPostRequestToPostMapper57.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig59 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl60 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository61 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository62 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository63 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper64 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository61, testRepository62, answerRepository63);
        ma.glasnost.orika.MapperFacade mapperFacade65 = null;
        submitResultRequestToDomainMapper64.setMapperFacade(mapperFacade65);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType67 = submitResultRequestToDomainMapper64.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper68 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper69 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean70 = createPostRequestToPostMapper69.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper71 = null;
        ma.glasnost.orika.MapperFacade mapperFacade72 = mapperConfig59.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl60, submitResultRequestToDomainMapper64, resultToDescriptionMapper68, createPostRequestToPostMapper69, postToDtoMapper71);
        createPostRequestToPostMapper57.setMapperFacade(mapperFacade72);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController74 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl56, mapperFacade72);
        createPostRequestToPostMapper29.setMapperFacade(mapperFacade72);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper76 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig77 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl78 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository79 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository80 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository81 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper82 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository79, testRepository80, answerRepository81);
        ma.glasnost.orika.MapperFacade mapperFacade83 = null;
        submitResultRequestToDomainMapper82.setMapperFacade(mapperFacade83);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType85 = submitResultRequestToDomainMapper82.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper86 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper87 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean88 = createPostRequestToPostMapper87.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper89 = null;
        ma.glasnost.orika.MapperFacade mapperFacade90 = mapperConfig77.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl78, submitResultRequestToDomainMapper82, resultToDescriptionMapper86, createPostRequestToPostMapper87, postToDtoMapper89);
        postToDtoMapper76.setMapperFacade(mapperFacade90);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType92 = postToDtoMapper76.getBType();
        java.lang.Boolean boolean93 = postToDtoMapper76.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade94 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper76);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper28.setUsedMappers(objMapperArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(resultType25);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertNotNull(postType30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str34, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str45, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str49, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(resultType67);
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + false + "'", boolean70, false);
        org.junit.Assert.assertNotNull(mapperFacade72);
        org.junit.Assert.assertNotNull(resultType85);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
        org.junit.Assert.assertNotNull(mapperFacade90);
        org.junit.Assert.assertNotNull(postDtoType92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
        org.junit.Assert.assertNotNull(mapperFacade94);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl6 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper7 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4);
        ma.glasnost.orika.Mapper[] mapperArray9 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray10 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray9;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper7.setUsedMappers(objMapperArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(mapperArray9);
        org.junit.Assert.assertNotNull(objMapperArray10);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto4 = postController2.getPost((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository25 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl26 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository24, tagRepository25);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper27 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig28 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType36 = submitResultRequestToDomainMapper33.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper37 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper38 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean39 = createPostRequestToPostMapper38.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper40 = null;
        ma.glasnost.orika.MapperFacade mapperFacade41 = mapperConfig28.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl29, submitResultRequestToDomainMapper33, resultToDescriptionMapper37, createPostRequestToPostMapper38, postToDtoMapper40);
        postToDtoMapper27.setMapperFacade(mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.TestController testController43 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl26, mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController44 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl23, mapperFacade41);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto46 = resultController44.getResult((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(resultType36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(mapperFacade41);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        com.vntu.marenko.ualearning.server.model.Tag tag1 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str2 = tag1.toString();
        java.lang.String str3 = tag1.toString();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest4 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str5 = userRequest4.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto6 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto6.setId((int) '#');
        boolean boolean9 = userRequest4.equals((java.lang.Object) '#');
        boolean boolean10 = tag1.equals((java.lang.Object) boolean9);
        boolean boolean11 = loginRequest0.equals((java.lang.Object) boolean10);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Tag(id=null, name=null)" + "'", str2, "Tag(id=null, name=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Tag(id=null, name=null)" + "'", str3, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        userDto0.setName("hi!");
        userDto0.setLogin("");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        com.vntu.marenko.ualearning.server.model.Tag tag3 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str4 = tag3.toString();
        java.lang.String str5 = tag3.getName();
        java.lang.Integer int6 = tag3.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper7 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper8 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType9 = createPostRequestToPostMapper8.getBType();
        com.vntu.marenko.ualearning.server.model.Post post10 = new com.vntu.marenko.ualearning.server.model.Post();
        post10.setText("");
        java.lang.String str13 = post10.toString();
        post10.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest16 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest16.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext19 = null;
        createPostRequestToPostMapper8.mapBtoA(post10, createPostRequest16, mappingContext19);
        com.vntu.marenko.ualearning.server.model.Post post21 = new com.vntu.marenko.ualearning.server.model.Post();
        post21.setText("");
        java.lang.String str24 = post21.toString();
        java.lang.Integer int25 = post21.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest26 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str27 = createPostRequest26.getUsername();
        java.lang.String str28 = createPostRequest26.toString();
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        createPostRequestToPostMapper8.mapBtoA(post21, createPostRequest26, mappingContext29);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper31 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType32 = createPostRequestToPostMapper31.getBType();
        com.vntu.marenko.ualearning.server.model.Post post33 = new com.vntu.marenko.ualearning.server.model.Post();
        post33.setText("");
        java.lang.String str36 = post33.toString();
        post33.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest39 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest39.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext42 = null;
        createPostRequestToPostMapper31.mapBtoA(post33, createPostRequest39, mappingContext42);
        ma.glasnost.orika.MappingContext mappingContext44 = null;
        createPostRequestToPostMapper7.mapAtoB(createPostRequest26, post33, mappingContext44);
        boolean boolean46 = tag3.equals((java.lang.Object) createPostRequest26);
        createPostRequest26.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        createPostRequest26.setUsername("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str51 = createPostRequest26.getUsername();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto52 = postController2.createPost(createPostRequest26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Tag(id=null, name=null)" + "'", str4, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(postType9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str13, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str24, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str28, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str36, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str51, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.model.Post post43 = new com.vntu.marenko.ualearning.server.model.Post();
        post43.setText("");
        java.lang.String str46 = post43.toString();
        java.util.Date date47 = post43.getTimestamp();
        com.vntu.marenko.ualearning.server.model.Post post48 = new com.vntu.marenko.ualearning.server.model.Post();
        post48.setText("");
        java.lang.Integer int51 = post48.getId();
        post48.setUser("QuestionDto(id=0, text=null, answers=null)");
        boolean boolean54 = post43.equals((java.lang.Object) post48);
        post43.setUser("TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post57 = postServiceImpl40.savePost(post43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str46, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(date47);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType17 = postToDtoMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType18 = postToDtoMapper0.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType19 = postToDtoMapper0.getBType();
        java.lang.Boolean boolean20 = postToDtoMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.model.Post post21 = new com.vntu.marenko.ualearning.server.model.Post();
        post21.setText("");
        java.lang.String str24 = post21.toString();
        java.lang.Integer int25 = post21.getId();
        java.util.Date date26 = null;
        post21.setTimestamp(date26);
        java.lang.String str28 = post21.getText();
        java.util.List<java.lang.String> strList29 = post21.getLikes();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto30 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto30.setId((int) (byte) 100);
        java.lang.String str33 = postDto30.getText();
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.mapAtoB(post21, postDto30, mappingContext34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertNotNull(postDtoType17);
        org.junit.Assert.assertNotNull(postType18);
        org.junit.Assert.assertNotNull(postDtoType19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str24, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        int int3 = resultDto0.getId();
        long long4 = resultDto0.getMark();
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = resultDto0.getUser();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto6 = resultDto0.getTest();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(userDto5);
        org.junit.Assert.assertNull(testDto6);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        int int3 = answerDto0.getId();
        answerDto0.setId((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl6 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto8 = resultServiceImpl6.getResult(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean7 = user3.equals((java.lang.Object) test6);
        user3.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result0.setUser(user3);
        com.vntu.marenko.ualearning.server.model.Question question11 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int12 = question11.getId();
        java.lang.Integer int13 = question11.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer14 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer15 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer15.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray18 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer14, answer15 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList19 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList19, answerArray18);
        question11.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList19);
        result0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList19);
        com.vntu.marenko.ualearning.server.model.Test test23 = result0.getTest();
        result0.setSubmitted(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(answerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(test23);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setName("");
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setNameTest("hi!");
        testDescription0.setId((int) (short) 1);
        testDescription0.setId(100);
        java.lang.String str9 = testDescription0.getNameTest();
        testDescription0.setNameTest("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest0.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        createPostRequest0.setUsername("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setAge((int) (byte) 1);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        com.vntu.marenko.ualearning.server.model.User user19 = new com.vntu.marenko.ualearning.server.model.User();
        user19.setInstitution("hi!");
        java.lang.String str22 = user19.getLogin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = userServiceImpl1.register(user19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        userDto0.setName("hi!");
        userDto0.setInstitution("Tag(id=null, name=null)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest78 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str79 = userRequest78.getName();
        java.lang.String str80 = userRequest78.getName();
        java.lang.String str81 = userRequest78.getPassword();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = authorisationController77.register(userRequest78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = user0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        com.vntu.marenko.ualearning.server.model.Result result13 = new com.vntu.marenko.ualearning.server.model.Result();
        result13.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user16 = new com.vntu.marenko.ualearning.server.model.User();
        user16.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean20 = user16.equals((java.lang.Object) test19);
        user16.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result13.setUser(user16);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = null;
        ma.glasnost.orika.MappingContext mappingContext25 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result13, submitResultRequest24, mappingContext25);
        java.lang.Boolean boolean27 = submitResultRequestToDomainMapper6.favorsExtension();
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper22 = null;
        ma.glasnost.orika.Mapper[] mapperArray24 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray25 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray24;
        objMapperArray25[0] = objMapper22;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers(objMapperArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
        org.junit.Assert.assertNotNull(mapperArray24);
        org.junit.Assert.assertNotNull(objMapperArray25);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        resultDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto5.setRating((int) (byte) -1);
        userDto5.setLogin("LoginRequest(login=null, password=null)");
        resultDto0.setUser(userDto5);
        resultDto0.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig14 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType22 = submitResultRequestToDomainMapper19.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper23 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean25 = createPostRequestToPostMapper24.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper26 = null;
        ma.glasnost.orika.MapperFacade mapperFacade27 = mapperConfig14.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl15, submitResultRequestToDomainMapper19, resultToDescriptionMapper23, createPostRequestToPostMapper24, postToDtoMapper26);
        postToDtoMapper13.setMapperFacade(mapperFacade27);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = postToDtoMapper13.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType30 = postToDtoMapper13.getBType();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository31 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig32 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl33 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository36 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper37 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository34, testRepository35, answerRepository36);
        ma.glasnost.orika.MapperFacade mapperFacade38 = null;
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade38);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType40 = submitResultRequestToDomainMapper37.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper41 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper42 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean43 = createPostRequestToPostMapper42.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper44 = null;
        ma.glasnost.orika.MapperFacade mapperFacade45 = mapperConfig32.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33, submitResultRequestToDomainMapper37, resultToDescriptionMapper41, createPostRequestToPostMapper42, postToDtoMapper44);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository47 = null;
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository49 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto50 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl51 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean52 = answerDto50.equals((java.lang.Object) markComputerImpl51);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl53 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository47, mapperFacade48, userRepository49, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl51);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl54 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository31, mapperFacade45, userRepository46, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl51);
        postToDtoMapper13.setMapperFacade(mapperFacade45);
        boolean boolean56 = resultDto0.equals((java.lang.Object) postToDtoMapper13);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto57 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str58 = postDto57.getLogin();
        postDto57.setTimestamp("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.model.Post post61 = new com.vntu.marenko.ualearning.server.model.Post();
        post61.setText("");
        java.lang.String str64 = post61.toString();
        post61.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str67 = post61.getUser();
        ma.glasnost.orika.MappingContext mappingContext68 = null;
        postToDtoMapper13.mapBtoA(postDto57, post61, mappingContext68);
        int int70 = postDto57.getId();
        org.junit.Assert.assertNotNull(resultType22);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(mapperFacade27);
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertNotNull(postDtoType30);
        org.junit.Assert.assertNotNull(resultType40);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + false + "'", boolean43, false);
        org.junit.Assert.assertNotNull(mapperFacade45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str64, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str67, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList44 = postServiceImpl40.getPostsForUser("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.Result result1 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user2 = new com.vntu.marenko.ualearning.server.model.User();
        user2.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test5 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean6 = user2.equals((java.lang.Object) test5);
        result1.setUser(user2);
        result0.setUser(user2);
        result0.setSubmitted(false);
        com.vntu.marenko.ualearning.server.model.User user11 = result0.getUser();
        result0.setSubmitted(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(user11);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str4 = createPostRequest0.getText();
        createPostRequest0.setUsername("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str4, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer3 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer4 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer4.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray7 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer3, answer4 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList8 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList8, answerArray7);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList8);
        question0.setId((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(answerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setInstitution("hi!");
        java.lang.String str6 = user3.toString();
        java.lang.String str7 = user3.getEmail();
        java.lang.String str8 = user3.getEmail();
        boolean boolean9 = questionDto0.equals((java.lang.Object) str8);
        int int10 = questionDto0.getId();
        questionDto0.setId((int) (byte) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str6, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto4 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto4.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean9 = answerDto7.equals((java.lang.Object) markComputerImpl8);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        int int14 = answerDto11.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto15 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl16 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean17 = answerDto15.equals((java.lang.Object) markComputerImpl16);
        int int18 = answerDto15.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto19.setText("hi!");
        java.lang.String str22 = answerDto19.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray23 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto7, answerDto10, answerDto11, answerDto15, answerDto19 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList24 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList24, answerDtoArray23);
        questionDto4.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList24);
        questionDto4.setId((int) (short) -1);
        int int29 = questionDto4.getId();
        boolean boolean30 = tag0.equals((java.lang.Object) int29);
        java.lang.Integer int31 = tag0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest78 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str79 = loginRequest78.toString();
        java.lang.String str80 = loginRequest78.getLogin();
        java.lang.String str81 = loginRequest78.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = authorisationController77.login(loginRequest78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str79, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str81, "LoginRequest(login=null, password=null)");
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        long long22 = resultDto0.getMark();
        com.vntu.marenko.ualearning.server.model.Tag tag23 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str24 = tag23.toString();
        java.lang.Integer int25 = tag23.getId();
        java.lang.String str26 = tag23.getName();
        boolean boolean27 = resultDto0.equals((java.lang.Object) str26);
        boolean boolean28 = resultDto0.isSubmitted();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Tag(id=null, name=null)" + "'", str24, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest14 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest14.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post17 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        createPostRequestToPostMapper10.mapAtoB(createPostRequest14, post17, mappingContext18);
        java.lang.Integer int20 = post17.getId();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList20 = testController19.getTestDescriptions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getEmail();
        userRequest0.setPassword("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoList44 = postController42.getPostsForUser("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setNameTest("hi!");
        testDescription0.setId((int) (short) 1);
        testDescription0.setId(100);
        java.lang.String str9 = testDescription0.getNameTest();
        testDescription0.setId((int) (short) 10);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest23.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto26 = resultController22.submitTest(submitResultRequest23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        com.vntu.marenko.ualearning.server.service.TestService testService0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController2 = new com.vntu.marenko.ualearning.server.controller.TestController(testService0, mapperFacade1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = testController2.getTest((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user1 = new com.vntu.marenko.ualearning.server.model.User();
        user1.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean5 = user1.equals((java.lang.Object) test4);
        result0.setUser(user1);
        user1.setAge((int) (byte) 1);
        java.lang.String str9 = user1.getName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        questionDto0.setId(10);
        questionDto0.setText("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = userServiceImpl1.login("CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType2 = createPostRequestToPostMapper1.getBType();
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        post3.setText("");
        java.lang.String str6 = post3.toString();
        post3.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest9 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest9.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        createPostRequestToPostMapper1.mapBtoA(post3, createPostRequest9, mappingContext12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.String str17 = post14.toString();
        java.lang.Integer int18 = post14.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str20 = createPostRequest19.getUsername();
        java.lang.String str21 = createPostRequest19.toString();
        ma.glasnost.orika.MappingContext mappingContext22 = null;
        createPostRequestToPostMapper1.mapBtoA(post14, createPostRequest19, mappingContext22);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest19, post26, mappingContext37);
        createPostRequest19.setText("TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))");
        org.junit.Assert.assertNotNull(postType2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str17, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str21, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper26 = null;
        ma.glasnost.orika.Mapper[] mapperArray28 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray29 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray28;
        objMapperArray29[0] = objMapper26;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers(objMapperArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNotNull(mapperArray28);
        org.junit.Assert.assertNotNull(objMapperArray29);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        com.vntu.marenko.ualearning.server.model.User user9 = new com.vntu.marenko.ualearning.server.model.User();
        user9.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType18 = submitResultRequestToDomainMapper15.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade19);
        boolean boolean21 = user9.equals((java.lang.Object) submitResultRequestToDomainMapper15);
        com.vntu.marenko.ualearning.server.model.Result result22 = new com.vntu.marenko.ualearning.server.model.Result();
        result22.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test28 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean29 = user25.equals((java.lang.Object) test28);
        user25.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result22.setUser(user25);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest33 = null;
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        submitResultRequestToDomainMapper15.mapBtoA(result22, submitResultRequest33, mappingContext34);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest36.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int39 = submitResultRequest36.getTestId();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result22, submitResultRequest36, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Test test42 = result22.getTest();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(submitResultRequestType18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(test42);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.service.UserService userService23 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController40 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService23, mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController41 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList43 = resultController41.getResultsForUser("LoginRequest(login=null, password=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        test0.setCompletedCounter((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int1);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.Mapper[] mapperArray2 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray3 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray2;
        // The following exception was thrown during execution in test generation
        try {
            postToDtoMapper0.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mapperArray2);
        org.junit.Assert.assertNotNull(objMapperArray3);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl20 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository14, mapperFacade15, userRepository16, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType25 = submitResultRequestToDomainMapper24.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType30 = createPostRequestToPostMapper29.getBType();
        com.vntu.marenko.ualearning.server.model.Post post31 = new com.vntu.marenko.ualearning.server.model.Post();
        post31.setText("");
        java.lang.String str34 = post31.toString();
        post31.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest37 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest37.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper29.mapBtoA(post31, createPostRequest37, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Post post42 = new com.vntu.marenko.ualearning.server.model.Post();
        post42.setText("");
        java.lang.String str45 = post42.toString();
        java.lang.Integer int46 = post42.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str48 = createPostRequest47.getUsername();
        java.lang.String str49 = createPostRequest47.toString();
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        createPostRequestToPostMapper29.mapBtoA(post42, createPostRequest47, mappingContext50);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository52 = null;
        ma.glasnost.orika.MapperFacade mapperFacade53 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer55 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl56 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository52, mapperFacade53, userRepository54, markComputer55);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper57 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean58 = createPostRequestToPostMapper57.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig59 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl60 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository61 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository62 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository63 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper64 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository61, testRepository62, answerRepository63);
        ma.glasnost.orika.MapperFacade mapperFacade65 = null;
        submitResultRequestToDomainMapper64.setMapperFacade(mapperFacade65);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType67 = submitResultRequestToDomainMapper64.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper68 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper69 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean70 = createPostRequestToPostMapper69.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper71 = null;
        ma.glasnost.orika.MapperFacade mapperFacade72 = mapperConfig59.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl60, submitResultRequestToDomainMapper64, resultToDescriptionMapper68, createPostRequestToPostMapper69, postToDtoMapper71);
        createPostRequestToPostMapper57.setMapperFacade(mapperFacade72);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController74 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl56, mapperFacade72);
        createPostRequestToPostMapper29.setMapperFacade(mapperFacade72);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper76 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig77 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl78 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository79 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository80 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository81 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper82 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository79, testRepository80, answerRepository81);
        ma.glasnost.orika.MapperFacade mapperFacade83 = null;
        submitResultRequestToDomainMapper82.setMapperFacade(mapperFacade83);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType85 = submitResultRequestToDomainMapper82.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper86 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper87 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean88 = createPostRequestToPostMapper87.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper89 = null;
        ma.glasnost.orika.MapperFacade mapperFacade90 = mapperConfig77.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl78, submitResultRequestToDomainMapper82, resultToDescriptionMapper86, createPostRequestToPostMapper87, postToDtoMapper89);
        postToDtoMapper76.setMapperFacade(mapperFacade90);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType92 = postToDtoMapper76.getBType();
        java.lang.Boolean boolean93 = postToDtoMapper76.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade94 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType95 = createPostRequestToPostMapper29.getBType();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(resultType25);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertNotNull(postType30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str34, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str45, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str49, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(resultType67);
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + false + "'", boolean70, false);
        org.junit.Assert.assertNotNull(mapperFacade72);
        org.junit.Assert.assertNotNull(resultType85);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
        org.junit.Assert.assertNotNull(mapperFacade90);
        org.junit.Assert.assertNotNull(postDtoType92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
        org.junit.Assert.assertNotNull(mapperFacade94);
        org.junit.Assert.assertNotNull(postType95);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto44 = postController42.getPost(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.String str6 = resultDescription0.toString();
        long long7 = resultDescription0.getMark();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str6, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.String str5 = userDto0.toString();
        userDto0.setSurname("Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)" + "'", str5, "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.User user62 = userServiceImpl1.getUser("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        java.lang.String str6 = userRequest0.getLogin();
        java.lang.String str7 = userRequest0.getName();
        java.lang.String str8 = userRequest0.toString();
        java.lang.String str9 = userRequest0.getSurname();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str8, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.Integer int3 = post0.getId();
        java.util.Date date4 = post0.getTimestamp();
        post0.setId((java.lang.Integer) (-1));
        post0.setUser("LoginRequest(login=null, password=null)");
        java.lang.String str9 = post0.getUser();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(date4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str9, "LoginRequest(login=null, password=null)");
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        answer0.setId((java.lang.Integer) (-1));
        java.lang.String str4 = answer0.getText();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setInstitution("hi!");
        java.lang.String str3 = user0.toString();
        java.lang.String str4 = user0.getEmail();
        java.lang.String str5 = user0.getEmail();
        java.lang.String str6 = user0.getInstitution();
        java.lang.String str7 = user0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str3, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str7, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        long long1 = user0.getRating();
        user0.setLogin("hi!");
        java.lang.Object obj4 = null;
        boolean boolean5 = user0.equals(obj4);
        java.lang.String str6 = user0.getEmail();
        java.lang.String str7 = user0.getEmail();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = resultDto0.getTest();
        org.junit.Assert.assertNull(testDto1);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository8);
        boolean boolean10 = userRequest0.equals((java.lang.Object) postServiceImpl9);
        userRequest0.setAge((int) (byte) 1);
        userRequest0.setAge((int) (byte) 100);
        java.lang.String str15 = userRequest0.getInstitution();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository25 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl26 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository24, tagRepository25);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper27 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig28 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType36 = submitResultRequestToDomainMapper33.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper37 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper38 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean39 = createPostRequestToPostMapper38.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper40 = null;
        ma.glasnost.orika.MapperFacade mapperFacade41 = mapperConfig28.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl29, submitResultRequestToDomainMapper33, resultToDescriptionMapper37, createPostRequestToPostMapper38, postToDtoMapper40);
        postToDtoMapper27.setMapperFacade(mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.TestController testController43 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl26, mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController44 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl23, mapperFacade41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList46 = resultController44.getResultsForUser("Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(resultType36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(mapperFacade41);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        java.lang.Boolean boolean13 = createPostRequestToPostMapper0.favorsExtension();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper0.favorsExtension();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription3 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int4 = resultDescription3.getId();
        java.lang.String str5 = resultDescription3.getTestName();
        resultDescription3.setTestId((java.lang.Integer) 100);
        java.lang.String str8 = resultDescription3.getTestName();
        java.lang.Integer int9 = resultDescription3.getId();
        java.lang.String str10 = resultDescription3.toString();
        java.lang.String str11 = resultDescription3.toString();
        com.vntu.marenko.ualearning.server.model.Result result12 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int13 = result12.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        result12.setTest(test14);
        java.lang.Integer int18 = result12.getId();
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int20 = test19.getId();
        java.lang.Integer int21 = test19.getId();
        test19.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int24 = test19.getCompletedCounter();
        java.lang.Integer int25 = test19.getCompletedCounter();
        result12.setTest(test19);
        com.vntu.marenko.ualearning.server.model.User user27 = result12.getUser();
        ma.glasnost.orika.MappingContext mappingContext28 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription3, result12, mappingContext28);
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str10, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str11, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(user27);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer0.setText("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        boolean boolean3 = answer0.isCorrect();
        answer0.setId((java.lang.Integer) 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto25 = resultServiceImpl23.submitResult(submitResultRequest24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto1 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto1.setId(1);
        boolean boolean5 = tagDto1.equals((java.lang.Object) (-1L));
        int int6 = tagDto1.getId();
        tagDto1.setId((int) '#');
        boolean boolean9 = answerDto0.equals((java.lang.Object) '#');
        java.lang.String str10 = answerDto0.getText();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        boolean boolean3 = questionDto0.equals((java.lang.Object) "Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getName();
        userRequest0.setSurname("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str6 = userRequest0.getPassword();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest7 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str8 = userRequest7.getName();
        java.lang.String str9 = userRequest7.getName();
        boolean boolean10 = userRequest0.equals((java.lang.Object) str9);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setAge((int) '4');
        user0.setEmail("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.String str7 = user0.getSurname();
        int int8 = user0.getAge();
        user0.setPassword("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("TagDto(id=0, name=null)");
        java.lang.String str7 = testDescription0.toString();
        com.vntu.marenko.ualearning.server.model.Result result8 = new com.vntu.marenko.ualearning.server.model.Result();
        result8.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user11 = new com.vntu.marenko.ualearning.server.model.User();
        user11.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean15 = user11.equals((java.lang.Object) test14);
        user11.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result8.setUser(user11);
        boolean boolean19 = testDescription0.equals((java.lang.Object) user11);
        long long20 = user11.getRating();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str7, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.model.Result result78 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user79 = new com.vntu.marenko.ualearning.server.model.User();
        user79.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test82 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean83 = user79.equals((java.lang.Object) test82);
        result78.setUser(user79);
        com.vntu.marenko.ualearning.server.model.User user85 = result78.getUser();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str86 = userServiceImpl1.register(user85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(user85);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController17 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService0, mapperFacade15);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest18 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str19 = loginRequest18.toString();
        java.lang.String str20 = loginRequest18.getLogin();
        loginRequest18.setPassword("hi!");
        loginRequest18.setLogin("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = authorisationController17.login(loginRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str19, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest78 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str79 = userRequest78.getInstitution();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = authorisationController77.register(userRequest78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController17 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService0, mapperFacade15);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest18 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str19 = loginRequest18.toString();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest20 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str21 = userRequest20.getName();
        java.lang.String str22 = userRequest20.getName();
        java.lang.String str23 = userRequest20.getName();
        boolean boolean24 = loginRequest18.equals((java.lang.Object) userRequest20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = authorisationController17.login(loginRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str19, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper9 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType10 = createPostRequestToPostMapper9.getBType();
        com.vntu.marenko.ualearning.server.model.Post post11 = new com.vntu.marenko.ualearning.server.model.Post();
        post11.setText("");
        java.lang.String str14 = post11.toString();
        post11.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest17 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest17.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper9.mapBtoA(post11, createPostRequest17, mappingContext20);
        com.vntu.marenko.ualearning.server.model.Post post22 = new com.vntu.marenko.ualearning.server.model.Post();
        post22.setText("");
        java.lang.String str25 = post22.toString();
        java.lang.Integer int26 = post22.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest27 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str28 = createPostRequest27.getUsername();
        java.lang.String str29 = createPostRequest27.toString();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        createPostRequestToPostMapper9.mapBtoA(post22, createPostRequest27, mappingContext30);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer35 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl36 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository32, mapperFacade33, userRepository34, markComputer35);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper37 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean38 = createPostRequestToPostMapper37.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig39 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl40 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.MapperFacade mapperFacade45 = null;
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade45);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType47 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper48 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper49 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean50 = createPostRequestToPostMapper49.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper51 = null;
        ma.glasnost.orika.MapperFacade mapperFacade52 = mapperConfig39.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl40, submitResultRequestToDomainMapper44, resultToDescriptionMapper48, createPostRequestToPostMapper49, postToDtoMapper51);
        createPostRequestToPostMapper37.setMapperFacade(mapperFacade52);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController54 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl36, mapperFacade52);
        createPostRequestToPostMapper9.setMapperFacade(mapperFacade52);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController56 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade52);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest57 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest57.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest57.setTestId((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto62 = resultServiceImpl4.submitResult(submitResultRequest57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str14, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str25, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str29, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(resultType47);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(mapperFacade52);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int5 = test0.getCompletedCounter();
        java.lang.Integer int6 = test0.getId();
        java.lang.String str7 = test0.toString();
        java.lang.String str8 = test0.getNameTest();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)" + "'", str7, "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest78 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str79 = userRequest78.getInstitution();
        userRequest78.setEmail("AnswerDto(id=0, text=null)");
        userRequest78.setPassword("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = authorisationController77.register(userRequest78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        userRequest0.setInstitution("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=[])");
        userRequest0.setEmail("");
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper9 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType10 = createPostRequestToPostMapper9.getBType();
        com.vntu.marenko.ualearning.server.model.Post post11 = new com.vntu.marenko.ualearning.server.model.Post();
        post11.setText("");
        java.lang.String str14 = post11.toString();
        post11.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest17 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest17.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext20 = null;
        createPostRequestToPostMapper9.mapBtoA(post11, createPostRequest17, mappingContext20);
        com.vntu.marenko.ualearning.server.model.Post post22 = new com.vntu.marenko.ualearning.server.model.Post();
        post22.setText("");
        java.lang.String str25 = post22.toString();
        java.lang.Integer int26 = post22.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest27 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str28 = createPostRequest27.getUsername();
        java.lang.String str29 = createPostRequest27.toString();
        ma.glasnost.orika.MappingContext mappingContext30 = null;
        createPostRequestToPostMapper9.mapBtoA(post22, createPostRequest27, mappingContext30);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer35 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl36 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository32, mapperFacade33, userRepository34, markComputer35);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper37 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean38 = createPostRequestToPostMapper37.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig39 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl40 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.MapperFacade mapperFacade45 = null;
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade45);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType47 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper48 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper49 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean50 = createPostRequestToPostMapper49.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper51 = null;
        ma.glasnost.orika.MapperFacade mapperFacade52 = mapperConfig39.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl40, submitResultRequestToDomainMapper44, resultToDescriptionMapper48, createPostRequestToPostMapper49, postToDtoMapper51);
        createPostRequestToPostMapper37.setMapperFacade(mapperFacade52);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController54 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl36, mapperFacade52);
        createPostRequestToPostMapper9.setMapperFacade(mapperFacade52);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController56 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade52);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList58 = resultController56.getResultsForUser("Result(id=null, user=null, test=null, submitted=false, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str14, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str25, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str29, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(resultType47);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(mapperFacade52);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setId((int) ' ');
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType33 = submitResultRequestToDomainMapper30.getAType();
        com.vntu.marenko.ualearning.server.model.Result result34 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int35 = result34.getId();
        com.vntu.marenko.ualearning.server.model.Test test36 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int37 = test36.getId();
        java.lang.Integer int38 = test36.getId();
        result34.setTest(test36);
        java.lang.Integer int40 = result34.getId();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int46 = test41.getCompletedCounter();
        java.lang.Integer int47 = test41.getCompletedCounter();
        result34.setTest(test41);
        com.vntu.marenko.ualearning.server.model.User user49 = result34.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest50 = null;
        ma.glasnost.orika.MappingContext mappingContext51 = null;
        submitResultRequestToDomainMapper30.mapBtoA(result34, submitResultRequest50, mappingContext51);
        com.vntu.marenko.ualearning.server.model.User user53 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str54 = user53.getEmail();
        java.lang.String str55 = user53.getSurname();
        result34.setUser(user53);
        boolean boolean57 = questionDto0.equals((java.lang.Object) result34);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList58 = questionDto0.getAnswers();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(submitResultRequestType33);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(user49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(answerDtoList58);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Test test4 = testServiceImpl2.getTest((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (byte) -1);
        userDto0.setLogin("LoginRequest(login=null, password=null)");
        userDto0.setAge((int) (byte) 0);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList23 = testServiceImpl2.getTestsWithTag(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setId((int) ' ');
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType33 = submitResultRequestToDomainMapper30.getAType();
        com.vntu.marenko.ualearning.server.model.Result result34 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int35 = result34.getId();
        com.vntu.marenko.ualearning.server.model.Test test36 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int37 = test36.getId();
        java.lang.Integer int38 = test36.getId();
        result34.setTest(test36);
        java.lang.Integer int40 = result34.getId();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int46 = test41.getCompletedCounter();
        java.lang.Integer int47 = test41.getCompletedCounter();
        result34.setTest(test41);
        com.vntu.marenko.ualearning.server.model.User user49 = result34.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest50 = null;
        ma.glasnost.orika.MappingContext mappingContext51 = null;
        submitResultRequestToDomainMapper30.mapBtoA(result34, submitResultRequest50, mappingContext51);
        com.vntu.marenko.ualearning.server.model.User user53 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str54 = user53.getEmail();
        java.lang.String str55 = user53.getSurname();
        result34.setUser(user53);
        boolean boolean57 = questionDto0.equals((java.lang.Object) result34);
        java.lang.String str58 = result34.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(submitResultRequestType33);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(user49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Result(id=null, user=User(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null, rating=0), test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)" + "'", str58, "Result(id=null, user=User(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null, rating=0), test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setEmail("hi!");
        user25.setSurname("hi!");
        user25.setInstitution("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        boolean boolean32 = questionDto0.equals((java.lang.Object) user25);
        java.lang.String str33 = user25.getPassword();
        java.lang.String str34 = user25.getEmail();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str1 = question0.getText();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService3 = null;
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController5 = new com.vntu.marenko.ualearning.server.controller.TestController(testService3, mapperFacade4);
        boolean boolean6 = question0.equals((java.lang.Object) testController5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList8 = testController5.getTestDescriptionsForTag((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.toString();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest3 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str4 = userRequest3.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto5 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto5.setId((int) '#');
        boolean boolean8 = userRequest3.equals((java.lang.Object) '#');
        boolean boolean9 = tag0.equals((java.lang.Object) boolean8);
        tag0.setName("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        tag0.setName("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        com.vntu.marenko.ualearning.server.model.User user14 = new com.vntu.marenko.ualearning.server.model.User();
        user14.setInstitution("hi!");
        java.lang.String str17 = user14.toString();
        java.lang.String str18 = user14.getEmail();
        java.lang.String str19 = user14.getEmail();
        java.lang.String str20 = user14.getInstitution();
        boolean boolean21 = tag0.equals((java.lang.Object) str20);
        java.lang.String str22 = tag0.getName();
        tag0.setId((java.lang.Integer) (-1));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Tag(id=null, name=null)" + "'", str2, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str17, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)" + "'", str22, "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper81 = null;
        ma.glasnost.orika.Mapper[] mapperArray83 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray84 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray83;
        objMapperArray84[0] = objMapper81;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper22.setUsedMappers(objMapperArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertNotNull(mapperArray83);
        org.junit.Assert.assertNotNull(objMapperArray84);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = tag0.equals((java.lang.Object) createPostRequest23);
        createPostRequest23.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        createPostRequest23.setUsername("CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str54 = testDto0.getDescriptionTest();
        java.lang.String str55 = testDto0.getNameTest();
        java.util.List<com.vntu.marenko.ualearning.server.dto.QuestionDto> questionDtoList56 = testDto0.getQuestions();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(questionDtoList56);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.Integer int1 = answer0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        test2.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        test2.setId((java.lang.Integer) 1);
        boolean boolean9 = answer0.equals((java.lang.Object) test2);
        java.lang.String str10 = test2.getNameTest();
        test2.setCompletedCounter((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = answerDto0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        answerDto0.setText("Tag(id=null, name=null)");
        int int15 = answerDto0.getId();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest16 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str17 = userRequest16.getName();
        java.lang.String str18 = userRequest16.getName();
        java.lang.String str19 = userRequest16.getName();
        boolean boolean20 = answerDto0.equals((java.lang.Object) userRequest16);
        java.lang.String str21 = answerDto0.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "AnswerDto(id=0, text=Tag(id=null, name=null))" + "'", str21, "AnswerDto(id=0, text=Tag(id=null, name=null))");
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto10 = resultController8.getResult(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.Integer int54 = testDto0.getCompletedCounter();
        java.util.List<com.vntu.marenko.ualearning.server.dto.QuestionDto> questionDtoList55 = testDto0.getQuestions();
        testDto0.setDescriptionTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=[])");
        java.lang.Integer int58 = testDto0.getCompletedCounter();
        java.lang.Integer int59 = testDto0.getCompletedCounter();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(questionDtoList55);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper3 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType4 = createPostRequestToPostMapper3.getBType();
        com.vntu.marenko.ualearning.server.model.Post post5 = new com.vntu.marenko.ualearning.server.model.Post();
        post5.setText("");
        java.lang.String str8 = post5.toString();
        post5.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest11 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest11.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext14 = null;
        createPostRequestToPostMapper3.mapBtoA(post5, createPostRequest11, mappingContext14);
        java.lang.String str16 = createPostRequest11.toString();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto17 = postController2.createPost(createPostRequest11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str8, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str16, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = answerDto0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        answerDto0.setText("Tag(id=null, name=null)");
        int int15 = answerDto0.getId();
        java.lang.String str16 = answerDto0.getText();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Tag(id=null, name=null)" + "'", str16, "Tag(id=null, name=null)");
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = tag0.equals((java.lang.Object) createPostRequest23);
        createPostRequest23.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        createPostRequest23.setUsername("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str48 = createPostRequest23.getText();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str48, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper81 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        com.vntu.marenko.ualearning.server.model.Result result82 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user83 = new com.vntu.marenko.ualearning.server.model.User();
        user83.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test86 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean87 = user83.equals((java.lang.Object) test86);
        result82.setUser(user83);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList89 = result82.getAnswers();
        result82.setId((java.lang.Integer) 10);
        // The following exception was thrown during execution in test generation
        try {
            long long92 = markComputerImpl2.compute(result82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(answerList89);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        postDto0.setTimestamp("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        postDto0.setLogin("QuestionDto(id=0, text=null, answers=null)");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.String str6 = resultDescription0.toString();
        resultDescription0.setMark((-1L));
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str6, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId(0);
        postDto0.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        java.lang.String str5 = postDto0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PostDto(id=0, text=UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null), timestamp=null, login=null, likes=null)" + "'", str5, "PostDto(id=0, text=UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null), timestamp=null, login=null, likes=null)");
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper2 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        postToDtoMapper2.setMapperFacade(mapperFacade16);
        com.vntu.marenko.ualearning.server.controller.UserController userController18 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade16);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.User user20 = userServiceImpl1.getUser("Question(id=-1, text=null, answers=[Answer(id=null, text=null, correct=false)])");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("hi!");
        java.lang.String str5 = user0.toString();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription6 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int7 = resultDescription6.getId();
        java.lang.Integer int8 = resultDescription6.getId();
        boolean boolean9 = user0.equals((java.lang.Object) int8);
        long long10 = user0.getRating();
        user0.setSurname("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str5, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("hi!");
        user0.setRating((long) '#');
        user0.setRating((-1L));
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = user0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        com.vntu.marenko.ualearning.server.model.Result result13 = new com.vntu.marenko.ualearning.server.model.Result();
        result13.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user16 = new com.vntu.marenko.ualearning.server.model.User();
        user16.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean20 = user16.equals((java.lang.Object) test19);
        user16.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result13.setUser(user16);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = null;
        ma.glasnost.orika.MappingContext mappingContext25 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result13, submitResultRequest24, mappingContext25);
        com.vntu.marenko.ualearning.server.model.User user27 = result13.getUser();
        com.vntu.marenko.ualearning.server.model.User user28 = result13.getUser();
        user28.setName("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertNotNull(user28);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setText("LoginRequest(login=null, password=null)");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getId();
        resultDescription0.setTestName("ResultDto(id=0, user=null, test=null, submitted=false, answers=null, mark=0)");
        java.lang.Integer int9 = resultDescription0.getId();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.toString();
        answer0.setText("LoginRequest(login=null, password=null)");
        java.lang.Integer int4 = answer0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Answer(id=null, text=null, correct=false)" + "'", str1, "Answer(id=null, text=null, correct=false)");
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController37 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade36);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest38 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int39 = submitResultRequest38.getTestId();
        java.lang.Integer[] intArray43 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.ArrayList<java.lang.Integer> intList44 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
        submitResultRequest38.setAnswers((java.util.List<java.lang.Integer>) intList44);
        com.vntu.marenko.ualearning.server.model.Test test47 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray48 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList49, tagArray48);
        test47.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList49);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray52 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList53 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList53, tagArray52);
        test47.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList53);
        java.lang.String str56 = test47.getNameTest();
        java.lang.String str57 = test47.getNameTest();
        boolean boolean58 = submitResultRequest38.equals((java.lang.Object) test47);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto59 = resultServiceImpl4.submitResult(submitResultRequest38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(tagArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(tagArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getTestId();
        long long7 = resultDescription0.getMark();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest22 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest22.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper18.mapAtoB(createPostRequest22, post25, mappingContext26);
        boolean boolean28 = resultDescription0.equals((java.lang.Object) createPostRequestToPostMapper18);
        com.vntu.marenko.ualearning.server.model.Post post29 = new com.vntu.marenko.ualearning.server.model.Post();
        post29.setText("");
        java.lang.String str32 = post29.toString();
        java.lang.Integer int33 = post29.getId();
        post29.setText("Answer(id=null, text=null, correct=false)");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper37 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType38 = createPostRequestToPostMapper37.getBType();
        com.vntu.marenko.ualearning.server.model.Post post39 = new com.vntu.marenko.ualearning.server.model.Post();
        post39.setText("");
        java.lang.String str42 = post39.toString();
        post39.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest45 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest45.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext48 = null;
        createPostRequestToPostMapper37.mapBtoA(post39, createPostRequest45, mappingContext48);
        com.vntu.marenko.ualearning.server.model.Post post50 = new com.vntu.marenko.ualearning.server.model.Post();
        post50.setText("");
        java.lang.String str53 = post50.toString();
        java.lang.Integer int54 = post50.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest55 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str56 = createPostRequest55.getUsername();
        java.lang.String str57 = createPostRequest55.toString();
        ma.glasnost.orika.MappingContext mappingContext58 = null;
        createPostRequestToPostMapper37.mapBtoA(post50, createPostRequest55, mappingContext58);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper60 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType61 = createPostRequestToPostMapper60.getBType();
        com.vntu.marenko.ualearning.server.model.Post post62 = new com.vntu.marenko.ualearning.server.model.Post();
        post62.setText("");
        java.lang.String str65 = post62.toString();
        post62.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest68 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest68.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext71 = null;
        createPostRequestToPostMapper60.mapBtoA(post62, createPostRequest68, mappingContext71);
        ma.glasnost.orika.MappingContext mappingContext73 = null;
        createPostRequestToPostMapper36.mapAtoB(createPostRequest55, post62, mappingContext73);
        ma.glasnost.orika.MappingContext mappingContext75 = null;
        createPostRequestToPostMapper18.mapBtoA(post29, createPostRequest55, mappingContext75);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper77 = null;
        ma.glasnost.orika.Mapper[] mapperArray79 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray80 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray79;
        objMapperArray80[0] = objMapper77;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper18.setUsedMappers(objMapperArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str32, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(postType38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str42, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str53, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str57, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str65, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNotNull(mapperArray79);
        org.junit.Assert.assertNotNull(objMapperArray80);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setAge((int) '4');
        user0.setEmail("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        user0.setPassword("Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
        java.lang.String str9 = user0.getInstitution();
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.Integer int9 = resultDescription4.getTestId();
        long long10 = resultDescription4.getMark();
        com.vntu.marenko.ualearning.server.model.Result result11 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int12 = result11.getId();
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int14 = test13.getId();
        java.lang.Integer int15 = test13.getId();
        result11.setTest(test13);
        boolean boolean17 = result11.isSubmitted();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription4, result11, mappingContext18);
        java.lang.Boolean boolean20 = resultToDescriptionMapper1.favorsExtension();
        ma.glasnost.orika.Mapper[] mapperArray22 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray23 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray22;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.setUsedMappers(objMapperArray23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNotNull(mapperArray22);
        org.junit.Assert.assertNotNull(objMapperArray23);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        testDto0.setId((int) (byte) 100);
        java.lang.Integer int4 = testDto0.getCompletedCounter();
        java.lang.String str5 = testDto0.getNameTest();
        java.lang.Class<?> wildcardClass6 = testDto0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto3 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto4 = null;
        resultDto3.setTest(testDto4);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto6 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean8 = answerDto6.equals((java.lang.Object) markComputerImpl7);
        int int9 = answerDto6.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto10 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto10.setText("hi!");
        java.lang.String str13 = answerDto10.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray20 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto6, answerDto10, answerDto14, answerDto17 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList21 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21, answerDtoArray20);
        resultDto3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        questionDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList21);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setEmail("hi!");
        user25.setSurname("hi!");
        user25.setInstitution("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        boolean boolean32 = questionDto0.equals((java.lang.Object) user25);
        java.lang.String str33 = user25.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(answerDtoArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)" + "'", str33, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        userRequest0.setPassword("Question(id=null, text=null, answers=null)");
        java.lang.Class<?> wildcardClass5 = userRequest0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository78 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl79 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository78);
        com.vntu.marenko.ualearning.server.controller.PostController postController80 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade75, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl79);
        com.vntu.marenko.ualearning.server.model.Post post81 = new com.vntu.marenko.ualearning.server.model.Post();
        post81.setText("");
        java.lang.String str84 = post81.toString();
        java.util.Date date85 = post81.getTimestamp();
        com.vntu.marenko.ualearning.server.model.Post post86 = new com.vntu.marenko.ualearning.server.model.Post();
        post86.setText("");
        java.lang.Integer int89 = post86.getId();
        post86.setUser("QuestionDto(id=0, text=null, answers=null)");
        boolean boolean92 = post81.equals((java.lang.Object) post86);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post93 = postServiceImpl79.savePost(post86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str84, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(date85);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController21 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType28 = submitResultRequestToDomainMapper25.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade29);
        com.vntu.marenko.ualearning.server.model.User user31 = new com.vntu.marenko.ualearning.server.model.User();
        user31.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository36 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper37 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository34, testRepository35, answerRepository36);
        ma.glasnost.orika.MapperFacade mapperFacade38 = null;
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade38);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType40 = submitResultRequestToDomainMapper37.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade41 = null;
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade41);
        boolean boolean43 = user31.equals((java.lang.Object) submitResultRequestToDomainMapper37);
        com.vntu.marenko.ualearning.server.model.Result result44 = new com.vntu.marenko.ualearning.server.model.Result();
        result44.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user47 = new com.vntu.marenko.ualearning.server.model.User();
        user47.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test50 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean51 = user47.equals((java.lang.Object) test50);
        user47.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result44.setUser(user47);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest55 = null;
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        submitResultRequestToDomainMapper37.mapBtoA(result44, submitResultRequest55, mappingContext56);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest58 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest58.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int61 = submitResultRequest58.getTestId();
        ma.glasnost.orika.MappingContext mappingContext62 = null;
        submitResultRequestToDomainMapper25.mapBtoA(result44, submitResultRequest58, mappingContext62);
        submitResultRequest58.setUserLogin("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto66 = resultController21.submitTest(submitResultRequest58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
        org.junit.Assert.assertNotNull(submitResultRequestType28);
        org.junit.Assert.assertNotNull(submitResultRequestType40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.lang.Integer int4 = post0.getId();
        java.util.List<java.lang.String> strList5 = null;
        post0.setLikes(strList5);
        post0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto9 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str10 = postDto9.getLogin();
        java.lang.String[] strArray15 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        postDto9.setLikes((java.util.List<java.lang.String>) strList16);
        post0.setLikes((java.util.List<java.lang.String>) strList16);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = userServiceImpl1.login("Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))", "QuestionDto(id=0, text=null, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.service.UserService userService23 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController40 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService23, mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController41 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList43 = resultController41.getResultsForUser("Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository8);
        boolean boolean10 = userRequest0.equals((java.lang.Object) postServiceImpl9);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig11 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository15 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper16 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository13, testRepository14, answerRepository15);
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        submitResultRequestToDomainMapper16.setMapperFacade(mapperFacade17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper16.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper20 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper21 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean22 = createPostRequestToPostMapper21.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper23 = null;
        ma.glasnost.orika.MapperFacade mapperFacade24 = mapperConfig11.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl12, submitResultRequestToDomainMapper16, resultToDescriptionMapper20, createPostRequestToPostMapper21, postToDtoMapper23);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest25 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest25.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post28 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        createPostRequestToPostMapper21.mapAtoB(createPostRequest25, post28, mappingContext29);
        java.util.List<java.lang.String> strList31 = post28.getLikes();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post32 = postServiceImpl9.savePost(post28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNotNull(mapperFacade24);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId(0);
        postDto0.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        java.lang.String str5 = postDto0.getLogin();
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType6 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper7 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        postToDtoMapper7.setMapperFacade(mapperFacade21);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade21);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean25 = createPostRequestToPostMapper24.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig26 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType34 = submitResultRequestToDomainMapper31.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper35 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean37 = createPostRequestToPostMapper36.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = null;
        ma.glasnost.orika.MapperFacade mapperFacade39 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27, submitResultRequestToDomainMapper31, resultToDescriptionMapper35, createPostRequestToPostMapper36, postToDtoMapper38);
        createPostRequestToPostMapper24.setMapperFacade(mapperFacade39);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository43 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper44 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository41, testRepository42, answerRepository43);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType45 = submitResultRequestToDomainMapper44.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper46 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig47 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl48 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository51 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper52 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository49, testRepository50, answerRepository51);
        ma.glasnost.orika.MapperFacade mapperFacade53 = null;
        submitResultRequestToDomainMapper52.setMapperFacade(mapperFacade53);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType55 = submitResultRequestToDomainMapper52.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper56 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper57 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean58 = createPostRequestToPostMapper57.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper59 = null;
        ma.glasnost.orika.MapperFacade mapperFacade60 = mapperConfig47.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl48, submitResultRequestToDomainMapper52, resultToDescriptionMapper56, createPostRequestToPostMapper57, postToDtoMapper59);
        postToDtoMapper46.setMapperFacade(mapperFacade60);
        submitResultRequestToDomainMapper44.setMapperFacade(mapperFacade60);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository63 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl64 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository63);
        com.vntu.marenko.ualearning.server.controller.PostController postController65 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade60, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        com.vntu.marenko.ualearning.server.controller.PostController postController66 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade39, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        com.vntu.marenko.ualearning.server.controller.PostController postController67 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade21, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl64);
        com.vntu.marenko.ualearning.server.model.Post post68 = new com.vntu.marenko.ualearning.server.model.Post();
        post68.setText("");
        java.lang.String str71 = post68.toString();
        java.util.Date date72 = null;
        post68.setTimestamp(date72);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post74 = postServiceImpl64.savePost(post68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType6);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(resultType34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(mapperFacade39);
        org.junit.Assert.assertNotNull(resultType45);
        org.junit.Assert.assertNotNull(resultType55);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(mapperFacade60);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str71, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList21 = testServiceImpl2.getTestsWithTag((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController21 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList23 = resultServiceImpl4.getResultsForUser("TagDto(id=1, name=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        com.vntu.marenko.ualearning.server.model.User user9 = new com.vntu.marenko.ualearning.server.model.User();
        user9.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType18 = submitResultRequestToDomainMapper15.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade19);
        boolean boolean21 = user9.equals((java.lang.Object) submitResultRequestToDomainMapper15);
        com.vntu.marenko.ualearning.server.model.Result result22 = new com.vntu.marenko.ualearning.server.model.Result();
        result22.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test28 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean29 = user25.equals((java.lang.Object) test28);
        user25.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result22.setUser(user25);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest33 = null;
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        submitResultRequestToDomainMapper15.mapBtoA(result22, submitResultRequest33, mappingContext34);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest36.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int39 = submitResultRequest36.getTestId();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result22, submitResultRequest36, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Question question42 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str43 = question42.getText();
        java.lang.Integer int44 = question42.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService45 = null;
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController47 = new com.vntu.marenko.ualearning.server.controller.TestController(testService45, mapperFacade46);
        boolean boolean48 = question42.equals((java.lang.Object) testController47);
        com.vntu.marenko.ualearning.server.model.Result result49 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int50 = result49.getId();
        com.vntu.marenko.ualearning.server.model.Test test51 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int52 = test51.getId();
        java.lang.Integer int53 = test51.getId();
        result49.setTest(test51);
        java.lang.Integer int55 = result49.getId();
        com.vntu.marenko.ualearning.server.model.Result result56 = new com.vntu.marenko.ualearning.server.model.Result();
        result56.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user59 = new com.vntu.marenko.ualearning.server.model.User();
        user59.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test62 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean63 = user59.equals((java.lang.Object) test62);
        user59.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result56.setUser(user59);
        com.vntu.marenko.ualearning.server.model.Question question67 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int68 = question67.getId();
        java.lang.Integer int69 = question67.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer70 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer71 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer71.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray74 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer70, answer71 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList75 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList75, answerArray74);
        question67.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        result56.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        result49.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        question42.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        result22.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        boolean boolean82 = result22.isSubmitted();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(submitResultRequestType18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(answerArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.model.Result result2 = new com.vntu.marenko.ualearning.server.model.Result();
        result2.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        user5.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test8 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean9 = user5.equals((java.lang.Object) test8);
        user5.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result2.setUser(user5);
        int int13 = user5.getAge();
        java.lang.String str14 = user5.getName();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = userServiceImpl1.register(user5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList21 = testServiceImpl2.getTestsWithTag(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController21 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade19);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest22 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest22.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest22.setTestId((int) (byte) 100);
        java.lang.String str27 = submitResultRequest22.getUserLogin();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto28 = resultServiceImpl4.submitResult(submitResultRequest22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str27, "QuestionDto(id=10, text=null, answers=null)");
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId(0);
        postDto0.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        int int5 = postDto0.getId();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        long long4 = user3.getRating();
        user3.setLogin("hi!");
        boolean boolean7 = tagDto0.equals((java.lang.Object) user3);
        user3.setRating(100L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository1);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository3 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper4 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig5 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl6 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository9 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper10 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository7, testRepository8, answerRepository9);
        ma.glasnost.orika.MapperFacade mapperFacade11 = null;
        submitResultRequestToDomainMapper10.setMapperFacade(mapperFacade11);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType13 = submitResultRequestToDomainMapper10.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper14 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper15 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean16 = createPostRequestToPostMapper15.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper17 = null;
        ma.glasnost.orika.MapperFacade mapperFacade18 = mapperConfig5.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl6, submitResultRequestToDomainMapper10, resultToDescriptionMapper14, createPostRequestToPostMapper15, postToDtoMapper17);
        postToDtoMapper4.setMapperFacade(mapperFacade18);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig21 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl22 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository25 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper26 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository23, testRepository24, answerRepository25);
        ma.glasnost.orika.MapperFacade mapperFacade27 = null;
        submitResultRequestToDomainMapper26.setMapperFacade(mapperFacade27);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType29 = submitResultRequestToDomainMapper26.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper30 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper31 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean32 = createPostRequestToPostMapper31.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper33 = null;
        ma.glasnost.orika.MapperFacade mapperFacade34 = mapperConfig21.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl22, submitResultRequestToDomainMapper26, resultToDescriptionMapper30, createPostRequestToPostMapper31, postToDtoMapper33);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl35 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository37 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository38 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper39 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository36, testRepository37, answerRepository38);
        ma.glasnost.orika.MapperFacade mapperFacade40 = null;
        submitResultRequestToDomainMapper39.setMapperFacade(mapperFacade40);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType42 = submitResultRequestToDomainMapper39.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper43 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig44 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl45 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository48 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper49 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository46, testRepository47, answerRepository48);
        ma.glasnost.orika.MapperFacade mapperFacade50 = null;
        submitResultRequestToDomainMapper49.setMapperFacade(mapperFacade50);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType52 = submitResultRequestToDomainMapper49.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper53 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper54 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean55 = createPostRequestToPostMapper54.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper56 = null;
        ma.glasnost.orika.MapperFacade mapperFacade57 = mapperConfig44.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl45, submitResultRequestToDomainMapper49, resultToDescriptionMapper53, createPostRequestToPostMapper54, postToDtoMapper56);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig21.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl35, submitResultRequestToDomainMapper39, resultToDescriptionMapper43, createPostRequestToPostMapper54, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl60 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository3, mapperFacade18, userRepository20, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl35);
        com.vntu.marenko.ualearning.server.controller.UserController userController61 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl2, mapperFacade18);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository62 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository63 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig64 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl65 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository67 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository68 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper69 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository66, testRepository67, answerRepository68);
        ma.glasnost.orika.MapperFacade mapperFacade70 = null;
        submitResultRequestToDomainMapper69.setMapperFacade(mapperFacade70);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType72 = submitResultRequestToDomainMapper69.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper73 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper74 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean75 = createPostRequestToPostMapper74.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper76 = null;
        ma.glasnost.orika.MapperFacade mapperFacade77 = mapperConfig64.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl65, submitResultRequestToDomainMapper69, resultToDescriptionMapper73, createPostRequestToPostMapper74, postToDtoMapper76);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository78 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository79 = null;
        ma.glasnost.orika.MapperFacade mapperFacade80 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository81 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto82 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl83 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean84 = answerDto82.equals((java.lang.Object) markComputerImpl83);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl85 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository79, mapperFacade80, userRepository81, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl83);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl86 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository63, mapperFacade77, userRepository78, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl83);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl87 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade18, userRepository62, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl83);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto89 = resultServiceImpl87.getResult((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType13);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(mapperFacade18);
        org.junit.Assert.assertNotNull(resultType29);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNotNull(mapperFacade34);
        org.junit.Assert.assertNotNull(resultType42);
        org.junit.Assert.assertNotNull(resultType52);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
        org.junit.Assert.assertNotNull(mapperFacade57);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(resultType72);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + false + "'", boolean75, false);
        org.junit.Assert.assertNotNull(mapperFacade77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType4 = resultToDescriptionMapper1.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType5 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.model.Result result6 = new com.vntu.marenko.ualearning.server.model.Result();
        result6.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest9 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str10 = userRequest9.getName();
        java.lang.String str11 = userRequest9.getName();
        boolean boolean12 = result6.equals((java.lang.Object) str11);
        boolean boolean13 = result6.isSubmitted();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription14 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription14.setId((java.lang.Integer) 0);
        resultDescription14.setMark(1L);
        java.lang.String str19 = resultDescription14.toString();
        java.lang.String str20 = resultDescription14.toString();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.mapAtoB(result6, resultDescription14, mappingContext21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNotNull(resultDescriptionType4);
        org.junit.Assert.assertNotNull(resultType5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str19, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str20, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto2 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto2.setId((int) '#');
        boolean boolean5 = userRequest0.equals((java.lang.Object) '#');
        userRequest0.setEmail("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository8 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository8);
        boolean boolean10 = userRequest0.equals((java.lang.Object) postServiceImpl9);
        userRequest0.setAge((int) (byte) 1);
        java.lang.String str13 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.Integer int1 = answer0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        test2.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        test2.setId((java.lang.Integer) 1);
        boolean boolean9 = answer0.equals((java.lang.Object) test2);
        java.lang.String str10 = test2.getNameTest();
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList11 = test2.getQuestions();
        test2.setId((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(questionList11);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        long long2 = resultDescription0.getMark();
        java.lang.Integer int3 = resultDescription0.getId();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(int3);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        com.vntu.marenko.ualearning.server.service.UserService userService81 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper82 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig83 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl84 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository85 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository86 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository87 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper88 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository85, testRepository86, answerRepository87);
        ma.glasnost.orika.MapperFacade mapperFacade89 = null;
        submitResultRequestToDomainMapper88.setMapperFacade(mapperFacade89);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType91 = submitResultRequestToDomainMapper88.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper92 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper93 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean94 = createPostRequestToPostMapper93.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper95 = null;
        ma.glasnost.orika.MapperFacade mapperFacade96 = mapperConfig83.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl84, submitResultRequestToDomainMapper88, resultToDescriptionMapper92, createPostRequestToPostMapper93, postToDtoMapper95);
        postToDtoMapper82.setMapperFacade(mapperFacade96);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController98 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService81, mapperFacade96);
        createPostRequestToPostMapper56.setMapperFacade(mapperFacade96);
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertNotNull(resultType91);
        org.junit.Assert.assertEquals("'" + boolean94 + "' != '" + false + "'", boolean94, false);
        org.junit.Assert.assertNotNull(mapperFacade96);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId((int) (byte) 100);
        java.lang.String str3 = postDto0.getTimestamp();
        postDto0.setLogin("AnswerDto(id=-1, text=Tag(id=null, name=null))");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = tag0.equals((java.lang.Object) createPostRequest23);
        createPostRequest23.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        createPostRequest23.setUsername("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str48 = createPostRequest23.getUsername();
        createPostRequest23.setText("TagDto(id=0, name=null)");
        java.lang.String str51 = createPostRequest23.getText();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str48, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "TagDto(id=0, name=null)" + "'", str51, "TagDto(id=0, name=null)");
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        java.lang.String str2 = userDto0.getLogin();
        int int3 = userDto0.getRating();
        java.lang.String str4 = userDto0.getName();
        int int5 = userDto0.getAge();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        long long4 = user3.getRating();
        user3.setLogin("hi!");
        boolean boolean7 = tagDto0.equals((java.lang.Object) user3);
        java.lang.String str8 = user3.getSurname();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.lang.Integer int4 = post0.getId();
        java.lang.String[] strArray29 = new java.lang.String[] { "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "LoginRequest(login=null, password=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))", "", "Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)", "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)", "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)", "Question(id=null, text=null, answers=null)", "ResultDescription(id=0, testId=null, testName=null, mark=1)", "Result(id=null, user=null, test=null, submitted=false, answers=null)", "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)", "ResultDescription(id=null, testId=100, testName=null, mark=0)", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)", "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))", "Post(id=null, text=, timestamp=null, user=null, likes=null)", "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)", "CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)", "Question(id=null, text=null, answers=null)", "CreatePostRequest(text=null, username=null)", "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)", "QuestionDto(id=10, text=null, answers=null)", "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        post0.setLikes((java.util.List<java.lang.String>) strList30);
        java.lang.String str33 = post0.getText();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.Integer int2 = resultDescription0.getId();
        resultDescription0.setTestName("QuestionDto(id=10, text=null, answers=null)");
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        int int5 = userDto0.getRating();
        userDto0.setSurname("");
        int int8 = userDto0.getAge();
        int int9 = userDto0.getAge();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        int int23 = resultDto0.getId();
        boolean boolean24 = resultDto0.isSubmitted();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto25 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str26 = testDto25.getDescriptionTest();
        resultDto0.setTest(testDto25);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto28 = resultDto0.getUser();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(userDto28);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        answer0.setId((java.lang.Integer) (-1));
        answer0.setText("TagDto(id=1, name=null)");
        answer0.setCorrect(false);
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        com.vntu.marenko.ualearning.server.model.Post post13 = new com.vntu.marenko.ualearning.server.model.Post();
        post13.setText("");
        java.lang.String str16 = post13.toString();
        java.lang.Integer int17 = post13.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest18 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str19 = createPostRequest18.getUsername();
        java.lang.String str20 = createPostRequest18.toString();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper0.mapBtoA(post13, createPostRequest18, mappingContext21);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType23 = createPostRequestToPostMapper0.getBType();
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper24 = null;
        ma.glasnost.orika.Mapper[] mapperArray26 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray27 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray26;
        objMapperArray27[0] = objMapper24;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper0.setUsedMappers(objMapperArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str16, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str20, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType23);
        org.junit.Assert.assertNotNull(mapperArray26);
        org.junit.Assert.assertNotNull(objMapperArray27);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.lang.Integer int4 = post0.getId();
        post0.setUser("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.service.UserService userService23 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController40 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService23, mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController41 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade38);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest42 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest42.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int45 = submitResultRequest42.getTestId();
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto46 = resultServiceImpl4.submitResult(submitResultRequest42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setLogin("TagDto(id=0, name=null)");
        int int3 = userDto0.getAge();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.model.Tag tag43 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str44 = tag43.toString();
        java.lang.String str45 = tag43.getName();
        java.lang.Integer int46 = tag43.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper47 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper48 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType49 = createPostRequestToPostMapper48.getBType();
        com.vntu.marenko.ualearning.server.model.Post post50 = new com.vntu.marenko.ualearning.server.model.Post();
        post50.setText("");
        java.lang.String str53 = post50.toString();
        post50.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest56 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest56.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext59 = null;
        createPostRequestToPostMapper48.mapBtoA(post50, createPostRequest56, mappingContext59);
        com.vntu.marenko.ualearning.server.model.Post post61 = new com.vntu.marenko.ualearning.server.model.Post();
        post61.setText("");
        java.lang.String str64 = post61.toString();
        java.lang.Integer int65 = post61.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest66 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str67 = createPostRequest66.getUsername();
        java.lang.String str68 = createPostRequest66.toString();
        ma.glasnost.orika.MappingContext mappingContext69 = null;
        createPostRequestToPostMapper48.mapBtoA(post61, createPostRequest66, mappingContext69);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper71 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType72 = createPostRequestToPostMapper71.getBType();
        com.vntu.marenko.ualearning.server.model.Post post73 = new com.vntu.marenko.ualearning.server.model.Post();
        post73.setText("");
        java.lang.String str76 = post73.toString();
        post73.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest79 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest79.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext82 = null;
        createPostRequestToPostMapper71.mapBtoA(post73, createPostRequest79, mappingContext82);
        ma.glasnost.orika.MappingContext mappingContext84 = null;
        createPostRequestToPostMapper47.mapAtoB(createPostRequest66, post73, mappingContext84);
        boolean boolean86 = tag43.equals((java.lang.Object) createPostRequest66);
        createPostRequest66.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        createPostRequest66.setUsername("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        createPostRequest66.setUsername("TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto93 = postController42.createPost(createPostRequest66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Tag(id=null, name=null)" + "'", str44, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(postType49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str53, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str64, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str68, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str76, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest24.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto27 = resultServiceImpl23.submitResult(submitResultRequest24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("TagDto(id=0, name=null)");
        java.lang.String str7 = testDescription0.toString();
        java.lang.String str8 = testDescription0.getNameTest();
        testDescription0.setId((int) (byte) 0);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest11 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str12 = loginRequest11.toString();
        java.lang.String str13 = loginRequest11.getLogin();
        loginRequest11.setPassword("hi!");
        loginRequest11.setLogin("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        boolean boolean18 = testDescription0.equals((java.lang.Object) loginRequest11);
        java.lang.String str19 = loginRequest11.getLogin();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str7, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "TagDto(id=0, name=null)" + "'", str8, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str12, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)" + "'", str19, "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto21 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl22 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean23 = answerDto21.equals((java.lang.Object) markComputerImpl22);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl24 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository18, mapperFacade19, userRepository20, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl22);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl25 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade16, userRepository17, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl22);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository27 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl28 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository26, tagRepository27);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper29 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig30 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl31 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository32 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository34 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper35 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository32, testRepository33, answerRepository34);
        ma.glasnost.orika.MapperFacade mapperFacade36 = null;
        submitResultRequestToDomainMapper35.setMapperFacade(mapperFacade36);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType38 = submitResultRequestToDomainMapper35.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper39 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper42 = null;
        ma.glasnost.orika.MapperFacade mapperFacade43 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl31, submitResultRequestToDomainMapper35, resultToDescriptionMapper39, createPostRequestToPostMapper40, postToDtoMapper42);
        postToDtoMapper29.setMapperFacade(mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.TestController testController45 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl28, mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController46 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl25, mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.UserController userController47 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.UserDto> userDtoList48 = userController47.rating();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(resultType38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(mapperFacade43);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer0.setCorrect(false);
        java.lang.Integer int3 = answer0.getId();
        answer0.setCorrect(false);
        java.lang.Integer int6 = answer0.getId();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository22 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository22);
        com.vntu.marenko.ualearning.server.controller.PostController postController24 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade19, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Post> postList26 = postServiceImpl23.getPostsForUser("Result(id=null, user=User(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null, rating=0), test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController8 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade7);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest9 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest9.setUserLogin("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 1, 1, 100, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList18 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        submitResultRequest9.setAnswers((java.util.List<java.lang.Integer>) intList18);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto21 = resultController8.submitTest(submitResultRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository22 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository22);
        com.vntu.marenko.ualearning.server.controller.PostController postController24 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade19, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl23);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post26 = postServiceImpl23.getPost(52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.Mapper[] mapperArray4 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray5 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray4;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.setUsedMappers(objMapperArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(mapperArray4);
        org.junit.Assert.assertNotNull(objMapperArray5);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        testDescription0.setId((int) (short) -1);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setInstitution("hi!");
        java.lang.String str3 = user0.getLogin();
        user0.setRating(0L);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        com.vntu.marenko.ualearning.server.model.Post post13 = new com.vntu.marenko.ualearning.server.model.Post();
        post13.setText("");
        java.lang.String str16 = post13.toString();
        java.lang.Integer int17 = post13.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest18 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str19 = createPostRequest18.getUsername();
        java.lang.String str20 = createPostRequest18.toString();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper0.mapBtoA(post13, createPostRequest18, mappingContext21);
        ma.glasnost.orika.Mapper[] mapperArray24 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray25 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray24;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper0.setUsedMappers(objMapperArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str16, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str20, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(mapperArray24);
        org.junit.Assert.assertNotNull(objMapperArray25);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.Result result1 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user2 = new com.vntu.marenko.ualearning.server.model.User();
        user2.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test5 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean6 = user2.equals((java.lang.Object) test5);
        result1.setUser(user2);
        result0.setUser(user2);
        user2.setRating((long) (short) 0);
        long long11 = user2.getRating();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository0);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post3 = postServiceImpl1.getPost((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.service.UserService userService23 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController40 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService23, mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController41 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade38);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto43 = resultController41.getResult((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        ma.glasnost.orika.Mapper[] mapperArray82 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray83 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray82;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper22.setUsedMappers(objMapperArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertNotNull(mapperArray82);
        org.junit.Assert.assertNotNull(objMapperArray83);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType24 = submitResultRequestToDomainMapper23.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper25 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig26 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType34 = submitResultRequestToDomainMapper31.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper35 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean37 = createPostRequestToPostMapper36.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = null;
        ma.glasnost.orika.MapperFacade mapperFacade39 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27, submitResultRequestToDomainMapper31, resultToDescriptionMapper35, createPostRequestToPostMapper36, postToDtoMapper38);
        postToDtoMapper25.setMapperFacade(mapperFacade39);
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade39);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository42 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl43 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository42);
        com.vntu.marenko.ualearning.server.controller.PostController postController44 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade39, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl43);
        com.vntu.marenko.ualearning.server.controller.PostController postController45 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade17, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl43);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper46 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType47 = createPostRequestToPostMapper46.getBType();
        com.vntu.marenko.ualearning.server.model.Post post48 = new com.vntu.marenko.ualearning.server.model.Post();
        post48.setText("");
        java.lang.String str51 = post48.toString();
        post48.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest54 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest54.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext57 = null;
        createPostRequestToPostMapper46.mapBtoA(post48, createPostRequest54, mappingContext57);
        com.vntu.marenko.ualearning.server.model.Post post59 = new com.vntu.marenko.ualearning.server.model.Post();
        post59.setText("");
        java.lang.String str62 = post59.toString();
        java.lang.Integer int63 = post59.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest64 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str65 = createPostRequest64.getUsername();
        java.lang.String str66 = createPostRequest64.toString();
        ma.glasnost.orika.MappingContext mappingContext67 = null;
        createPostRequestToPostMapper46.mapBtoA(post59, createPostRequest64, mappingContext67);
        createPostRequest64.setText("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto71 = postController45.createPost(createPostRequest64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType24);
        org.junit.Assert.assertNotNull(resultType34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(mapperFacade39);
        org.junit.Assert.assertNotNull(postType47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str51, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str62, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str66, "CreatePostRequest(text=null, username=null)");
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        java.lang.String str3 = tagDto0.getName();
        java.lang.String str4 = tagDto0.toString();
        tagDto0.setName("Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "TagDto(id=1, name=null)" + "'", str4, "TagDto(id=1, name=null)");
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType13 = createPostRequestToPostMapper0.getBType();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper0.favorsExtension();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNotNull(postType13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        resultDto0.setSubmitted(true);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto25 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto25.setRating((int) (short) 10);
        java.lang.String str28 = userDto25.toString();
        resultDto0.setUser(userDto25);
        java.lang.String str30 = userDto25.getName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)" + "'", str28, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.String str3 = post0.toString();
        java.lang.Integer int4 = post0.getId();
        java.util.Date date5 = null;
        post0.setTimestamp(date5);
        java.lang.String str7 = post0.getText();
        java.util.List<java.lang.String> strList8 = post0.getLikes();
        java.util.Date date9 = null;
        post0.setTimestamp(date9);
        java.lang.String str11 = post0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str3, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str11, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.Integer int54 = testDto0.getCompletedCounter();
        testDto0.setDescriptionTest("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        java.lang.String str57 = testDto0.getDescriptionTest();
        java.lang.String str58 = testDto0.getDescriptionTest();
        int int59 = testDto0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str57, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str58, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        java.lang.String str4 = userDto0.getInstitution();
        java.lang.String str5 = userDto0.getSurname();
        userDto0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository8 = null;
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer11 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl12 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository8, mapperFacade9, userRepository10, markComputer11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController14 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl12, mapperFacade13);
        boolean boolean15 = userDto0.equals((java.lang.Object) resultServiceImpl12);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType22 = submitResultRequestToDomainMapper19.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade23 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade23);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType34 = submitResultRequestToDomainMapper31.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade35 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade35);
        boolean boolean37 = user25.equals((java.lang.Object) submitResultRequestToDomainMapper31);
        com.vntu.marenko.ualearning.server.model.Result result38 = new com.vntu.marenko.ualearning.server.model.Result();
        result38.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user41 = new com.vntu.marenko.ualearning.server.model.User();
        user41.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test44 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean45 = user41.equals((java.lang.Object) test44);
        user41.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result38.setUser(user41);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest49 = null;
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        submitResultRequestToDomainMapper31.mapBtoA(result38, submitResultRequest49, mappingContext50);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest52 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest52.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int55 = submitResultRequest52.getTestId();
        ma.glasnost.orika.MappingContext mappingContext56 = null;
        submitResultRequestToDomainMapper19.mapBtoA(result38, submitResultRequest52, mappingContext56);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto58 = resultServiceImpl12.submitResult(submitResultRequest52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType22);
        org.junit.Assert.assertNotNull(submitResultRequestType34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        java.lang.String str3 = answerDto0.getText();
        answerDto0.setId((int) 'a');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        test3.setDescriptionTest("");
        test3.setDescriptionTest("");
        test3.setCompletedCounter((java.lang.Integer) 1);
        test3.setId((java.lang.Integer) 0);
        java.lang.String str13 = test3.toString();
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList14 = test3.getQuestions();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Test(id=0, nameTest=null, descriptionTest=, completedCounter=1, questions=null, tags=null)" + "'", str13, "Test(id=0, nameTest=null, descriptionTest=, completedCounter=1, questions=null, tags=null)");
        org.junit.Assert.assertNull(questionList14);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) (-1));
        java.lang.String str3 = resultDescription0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ResultDescription(id=-1, testId=null, testName=null, mark=0)" + "'", str3, "ResultDescription(id=-1, testId=null, testName=null, mark=0)");
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (byte) -1);
        int int3 = userDto0.getAge();
        userDto0.setAge((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = tag0.equals((java.lang.Object) createPostRequest23);
        createPostRequest23.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        createPostRequest23.setUsername("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str48 = createPostRequest23.getUsername();
        createPostRequest23.setText("TagDto(id=0, name=null)");
        java.lang.String str51 = createPostRequest23.getUsername();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str48, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str51, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user1 = new com.vntu.marenko.ualearning.server.model.User();
        user1.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean5 = user1.equals((java.lang.Object) test4);
        result0.setUser(user1);
        com.vntu.marenko.ualearning.server.model.User user7 = result0.getUser();
        user7.setPassword("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=[])");
        user7.setLogin("Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(user7);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        int int3 = userDto0.getRating();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        int int2 = testDto0.getId();
        java.lang.String str3 = testDto0.getDescriptionTest();
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int5 = test4.getId();
        java.lang.Integer int6 = test4.getId();
        test4.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository9 = null;
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository11 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer12 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl13 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository9, mapperFacade10, userRepository11, markComputer12);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig16 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl17 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository19 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository20 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper21 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository18, testRepository19, answerRepository20);
        ma.glasnost.orika.MapperFacade mapperFacade22 = null;
        submitResultRequestToDomainMapper21.setMapperFacade(mapperFacade22);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType24 = submitResultRequestToDomainMapper21.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper25 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper26 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean27 = createPostRequestToPostMapper26.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper28 = null;
        ma.glasnost.orika.MapperFacade mapperFacade29 = mapperConfig16.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl17, submitResultRequestToDomainMapper21, resultToDescriptionMapper25, createPostRequestToPostMapper26, postToDtoMapper28);
        createPostRequestToPostMapper14.setMapperFacade(mapperFacade29);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController31 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl13, mapperFacade29);
        boolean boolean32 = test4.equals((java.lang.Object) resultController31);
        java.util.List<com.vntu.marenko.ualearning.server.model.Question> questionList33 = test4.getQuestions();
        boolean boolean34 = testDto0.equals((java.lang.Object) test4);
        int int35 = testDto0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(resultType24);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(mapperFacade29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(questionList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.toString();
        java.lang.String str4 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str3, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        answer0.setId((java.lang.Integer) (-1));
        answer0.setId((java.lang.Integer) 0);
        answer0.setId((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig24 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl25 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository28 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper29 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository26, testRepository27, answerRepository28);
        ma.glasnost.orika.MapperFacade mapperFacade30 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType32 = submitResultRequestToDomainMapper29.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper33 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper34 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean35 = createPostRequestToPostMapper34.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper36 = null;
        ma.glasnost.orika.MapperFacade mapperFacade37 = mapperConfig24.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl25, submitResultRequestToDomainMapper29, resultToDescriptionMapper33, createPostRequestToPostMapper34, postToDtoMapper36);
        createPostRequestToPostMapper22.setMapperFacade(mapperFacade37);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository41 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper42 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository39, testRepository40, answerRepository41);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType43 = submitResultRequestToDomainMapper42.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper44 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig45 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl46 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository49 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper50 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository47, testRepository48, answerRepository49);
        ma.glasnost.orika.MapperFacade mapperFacade51 = null;
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType53 = submitResultRequestToDomainMapper50.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper54 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper55 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean56 = createPostRequestToPostMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = null;
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig45.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl46, submitResultRequestToDomainMapper50, resultToDescriptionMapper54, createPostRequestToPostMapper55, postToDtoMapper57);
        postToDtoMapper44.setMapperFacade(mapperFacade58);
        submitResultRequestToDomainMapper42.setMapperFacade(mapperFacade58);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository61 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl62 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository61);
        com.vntu.marenko.ualearning.server.controller.PostController postController63 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade58, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl62);
        com.vntu.marenko.ualearning.server.controller.PostController postController64 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade37, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl62);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList66 = testServiceImpl2.getAllTests();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(resultType32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNotNull(mapperFacade37);
        org.junit.Assert.assertNotNull(resultType43);
        org.junit.Assert.assertNotNull(resultType53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(mapperFacade58);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        java.lang.String str2 = loginRequest0.toString();
        java.lang.String str3 = loginRequest0.toString();
        java.lang.String str4 = loginRequest0.getLogin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str2, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str3, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        long long1 = user0.getRating();
        user0.setLogin("hi!");
        java.lang.Object obj4 = null;
        boolean boolean5 = user0.equals(obj4);
        user0.setEmail("AnswerDto(id=0, text=Tag(id=null, name=null))");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user1 = new com.vntu.marenko.ualearning.server.model.User();
        user1.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test4 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean5 = user1.equals((java.lang.Object) test4);
        result0.setUser(user1);
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int8 = test7.getId();
        java.lang.Integer int9 = test7.getId();
        test7.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        result0.setTest(test7);
        java.lang.String str13 = test7.getNameTest();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Test test4 = testServiceImpl2.getTest((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        com.vntu.marenko.ualearning.server.model.Post post2 = new com.vntu.marenko.ualearning.server.model.Post();
        post2.setText("");
        java.lang.String str5 = post2.toString();
        post2.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest8 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest8.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext11 = null;
        createPostRequestToPostMapper0.mapBtoA(post2, createPostRequest8, mappingContext11);
        com.vntu.marenko.ualearning.server.model.Post post13 = new com.vntu.marenko.ualearning.server.model.Post();
        post13.setText("");
        java.lang.String str16 = post13.toString();
        java.lang.Integer int17 = post13.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest18 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str19 = createPostRequest18.getUsername();
        java.lang.String str20 = createPostRequest18.toString();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper0.mapBtoA(post13, createPostRequest18, mappingContext21);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository23 = null;
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer26 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl27 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository23, mapperFacade24, userRepository25, markComputer26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean29 = createPostRequestToPostMapper28.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig30 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl31 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository32 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository34 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper35 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository32, testRepository33, answerRepository34);
        ma.glasnost.orika.MapperFacade mapperFacade36 = null;
        submitResultRequestToDomainMapper35.setMapperFacade(mapperFacade36);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType38 = submitResultRequestToDomainMapper35.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper39 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper42 = null;
        ma.glasnost.orika.MapperFacade mapperFacade43 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl31, submitResultRequestToDomainMapper35, resultToDescriptionMapper39, createPostRequestToPostMapper40, postToDtoMapper42);
        createPostRequestToPostMapper28.setMapperFacade(mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController45 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl27, mapperFacade43);
        com.vntu.marenko.ualearning.server.service.UserService userService46 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController63 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService46, mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController64 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl27, mapperFacade61);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade61);
        java.lang.Boolean boolean66 = createPostRequestToPostMapper0.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType67 = createPostRequestToPostMapper0.getAType();
        com.vntu.marenko.ualearning.server.model.Post post68 = new com.vntu.marenko.ualearning.server.model.Post();
        post68.setText("");
        java.lang.Integer int71 = post68.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest72 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        ma.glasnost.orika.MappingContext mappingContext73 = null;
        createPostRequestToPostMapper0.mapBtoA(post68, createPostRequest72, mappingContext73);
        java.lang.Boolean boolean75 = createPostRequestToPostMapper0.favorsExtension();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str16, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str20, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(resultType38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(mapperFacade43);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(createPostRequestType67);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + false + "'", boolean75, false);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig24 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl25 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository28 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper29 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository26, testRepository27, answerRepository28);
        ma.glasnost.orika.MapperFacade mapperFacade30 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType32 = submitResultRequestToDomainMapper29.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper33 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper34 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean35 = createPostRequestToPostMapper34.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper36 = null;
        ma.glasnost.orika.MapperFacade mapperFacade37 = mapperConfig24.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl25, submitResultRequestToDomainMapper29, resultToDescriptionMapper33, createPostRequestToPostMapper34, postToDtoMapper36);
        createPostRequestToPostMapper22.setMapperFacade(mapperFacade37);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository41 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper42 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository39, testRepository40, answerRepository41);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType43 = submitResultRequestToDomainMapper42.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper44 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig45 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl46 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository49 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper50 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository47, testRepository48, answerRepository49);
        ma.glasnost.orika.MapperFacade mapperFacade51 = null;
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType53 = submitResultRequestToDomainMapper50.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper54 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper55 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean56 = createPostRequestToPostMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = null;
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig45.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl46, submitResultRequestToDomainMapper50, resultToDescriptionMapper54, createPostRequestToPostMapper55, postToDtoMapper57);
        postToDtoMapper44.setMapperFacade(mapperFacade58);
        submitResultRequestToDomainMapper42.setMapperFacade(mapperFacade58);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository61 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl62 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository61);
        com.vntu.marenko.ualearning.server.controller.PostController postController63 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade58, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl62);
        com.vntu.marenko.ualearning.server.controller.PostController postController64 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade37, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl62);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList66 = testController65.getTestDescriptions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(resultType32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNotNull(mapperFacade37);
        org.junit.Assert.assertNotNull(resultType43);
        org.junit.Assert.assertNotNull(resultType53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(mapperFacade58);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = user0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        com.vntu.marenko.ualearning.server.model.Result result13 = new com.vntu.marenko.ualearning.server.model.Result();
        result13.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user16 = new com.vntu.marenko.ualearning.server.model.User();
        user16.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean20 = user16.equals((java.lang.Object) test19);
        user16.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result13.setUser(user16);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = null;
        ma.glasnost.orika.MappingContext mappingContext25 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result13, submitResultRequest24, mappingContext25);
        com.vntu.marenko.ualearning.server.model.User user27 = result13.getUser();
        java.lang.String str28 = user27.getInstitution();
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType24 = submitResultRequestToDomainMapper23.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper25 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig26 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository29 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository30 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper31 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository28, testRepository29, answerRepository30);
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        submitResultRequestToDomainMapper31.setMapperFacade(mapperFacade32);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType34 = submitResultRequestToDomainMapper31.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper35 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean37 = createPostRequestToPostMapper36.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper38 = null;
        ma.glasnost.orika.MapperFacade mapperFacade39 = mapperConfig26.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27, submitResultRequestToDomainMapper31, resultToDescriptionMapper35, createPostRequestToPostMapper36, postToDtoMapper38);
        postToDtoMapper25.setMapperFacade(mapperFacade39);
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade39);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository42 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl43 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository42);
        com.vntu.marenko.ualearning.server.controller.PostController postController44 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade39, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl43);
        com.vntu.marenko.ualearning.server.controller.PostController postController45 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade17, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoList47 = postController45.getPostsForUser("Question(id=null, text=null, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType24);
        org.junit.Assert.assertNotNull(resultType34);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(mapperFacade39);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        java.lang.Boolean boolean2 = resultToDescriptionMapper1.favorsExtension();
        com.vntu.marenko.ualearning.server.model.Result result3 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user4 = new com.vntu.marenko.ualearning.server.model.User();
        user4.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean8 = user4.equals((java.lang.Object) test7);
        result3.setUser(user4);
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList10 = result3.getAnswers();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription11 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription11.setId((java.lang.Integer) 0);
        resultDescription11.setTestName("hi!");
        java.lang.String str16 = resultDescription11.getTestName();
        java.lang.Integer int17 = resultDescription11.getTestId();
        java.lang.String str18 = resultDescription11.getTestName();
        resultDescription11.setTestName("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=10)");
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.mapAtoB(result3, resultDescription11, mappingContext21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + false + "'", boolean2, false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(answerList10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList5 = test3.getTags();
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int7 = test6.getId();
        java.lang.Integer int8 = test6.getId();
        test6.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository11 = null;
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository13 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer14 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl15 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository11, mapperFacade12, userRepository13, markComputer14);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig18 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl19 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper23.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper27 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean29 = createPostRequestToPostMapper28.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper30 = null;
        ma.glasnost.orika.MapperFacade mapperFacade31 = mapperConfig18.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl19, submitResultRequestToDomainMapper23, resultToDescriptionMapper27, createPostRequestToPostMapper28, postToDtoMapper30);
        createPostRequestToPostMapper16.setMapperFacade(mapperFacade31);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController33 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl15, mapperFacade31);
        boolean boolean34 = test6.equals((java.lang.Object) resultController33);
        boolean boolean35 = test3.equals((java.lang.Object) test6);
        test6.setDescriptionTest("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(tagList5);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(mapperFacade31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        testDto0.setDescriptionTest("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList4 = testDto0.getTags();
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto5 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto6 = null;
        resultDto5.setTest(testDto6);
        int int8 = resultDto5.getId();
        long long9 = resultDto5.getMark();
        boolean boolean10 = testDto0.equals((java.lang.Object) resultDto5);
        java.lang.Integer int11 = testDto0.getCompletedCounter();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(tagDtoList4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        com.vntu.marenko.ualearning.server.service.UserService userService0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController17 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService0, mapperFacade15);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest18 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str19 = loginRequest18.toString();
        java.lang.String str20 = loginRequest18.getLogin();
        loginRequest18.setPassword("hi!");
        loginRequest18.setLogin("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto25 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str26 = testDto25.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto27 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str28 = tagDto27.toString();
        java.lang.String str29 = tagDto27.getName();
        com.vntu.marenko.ualearning.server.model.User user30 = new com.vntu.marenko.ualearning.server.model.User();
        long long31 = user30.getRating();
        user30.setLogin("hi!");
        boolean boolean34 = tagDto27.equals((java.lang.Object) user30);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto37 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto37.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto40 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str41 = tagDto40.toString();
        java.lang.String str42 = tagDto40.getName();
        com.vntu.marenko.ualearning.server.model.Test test43 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int44 = test43.getId();
        java.lang.Integer int45 = test43.getId();
        test43.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList48 = test43.getTags();
        boolean boolean49 = tagDto40.equals((java.lang.Object) tagList48);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto50 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto50.setId(1);
        boolean boolean54 = tagDto50.equals((java.lang.Object) (-1L));
        int int55 = tagDto50.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto56 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto56.setId(1);
        java.lang.String str59 = tagDto56.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto60 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str61 = tagDto60.toString();
        java.lang.String str62 = tagDto60.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto63 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str64 = tagDto63.toString();
        java.lang.String str65 = tagDto63.getName();
        com.vntu.marenko.ualearning.server.model.Test test66 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int67 = test66.getId();
        java.lang.Integer int68 = test66.getId();
        test66.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList71 = test66.getTags();
        boolean boolean72 = tagDto63.equals((java.lang.Object) tagList71);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray73 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto27, tagDto35, tagDto37, tagDto40, tagDto50, tagDto56, tagDto60, tagDto63 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList74 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList74, tagDtoArray73);
        testDto25.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList74);
        int int77 = testDto25.getId();
        boolean boolean78 = loginRequest18.equals((java.lang.Object) testDto25);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str79 = authorisationController17.login(loginRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str19, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str26, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "TagDto(id=0, name=null)" + "'", str28, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "TagDto(id=0, name=null)" + "'", str41, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(tagList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "TagDto(id=0, name=null)" + "'", str61, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "TagDto(id=0, name=null)" + "'", str64, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(tagList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(tagDtoArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        int int5 = userDto0.getRating();
        userDto0.setSurname("");
        int int8 = userDto0.getAge();
        userDto0.setAge(0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        int int23 = resultDto0.getId();
        boolean boolean24 = resultDto0.isSubmitted();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto25 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str26 = testDto25.getDescriptionTest();
        resultDto0.setTest(testDto25);
        resultDto0.setSubmitted(true);
        int int30 = resultDto0.getId();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("hi!");
        long long5 = user0.getRating();
        java.lang.String str6 = user0.getLogin();
        int int7 = user0.getAge();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int8 = test3.getCompletedCounter();
        result0.setTest(test3);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository11 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl12 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository10, tagRepository11);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig14 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType22 = submitResultRequestToDomainMapper19.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper23 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean25 = createPostRequestToPostMapper24.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper26 = null;
        ma.glasnost.orika.MapperFacade mapperFacade27 = mapperConfig14.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl15, submitResultRequestToDomainMapper19, resultToDescriptionMapper23, createPostRequestToPostMapper24, postToDtoMapper26);
        postToDtoMapper13.setMapperFacade(mapperFacade27);
        com.vntu.marenko.ualearning.server.controller.TestController testController29 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl12, mapperFacade27);
        boolean boolean30 = result0.equals((java.lang.Object) testController29);
        java.lang.Object obj31 = null;
        boolean boolean32 = result0.equals(obj31);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(resultType22);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(mapperFacade27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList20 = testServiceImpl2.getAllTests();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        int int1 = answerDto0.getId();
        com.vntu.marenko.ualearning.server.model.Question question2 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int3 = question2.getId();
        java.lang.Integer int4 = question2.getId();
        question2.setId((java.lang.Integer) (-1));
        boolean boolean7 = answerDto0.equals((java.lang.Object) (-1));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        userRequest0.setEmail("AnswerDto(id=0, text=null)");
        userRequest0.setPassword("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.String str6 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        userDto0.setSurname("hi!");
        userDto0.setRating((int) ' ');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.getDescriptionTest();
        java.lang.Integer int2 = testDto0.getCompletedCounter();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int2);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.toString();
        userRequest0.setName("Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
        java.lang.String str6 = userRequest0.getSurname();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str3, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        java.lang.String str4 = userDto0.getInstitution();
        java.lang.String str5 = userDto0.getSurname();
        userDto0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository8 = null;
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer11 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl12 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository8, mapperFacade9, userRepository10, markComputer11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController14 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl12, mapperFacade13);
        boolean boolean15 = userDto0.equals((java.lang.Object) resultServiceImpl12);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto17 = resultServiceImpl12.getResult((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        userRequest0.setEmail("AnswerDto(id=0, text=null)");
        java.lang.String str4 = userRequest0.getInstitution();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.Integer int2 = question0.getId();
        boolean boolean4 = question0.equals((java.lang.Object) 1L);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int1 = question0.getId();
        java.lang.Integer int2 = question0.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer3 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer4 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer4.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray7 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer3, answer4 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList8 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList8, answerArray7);
        question0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList8);
        java.lang.Integer int11 = question0.getId();
        java.lang.String str12 = question0.toString();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(answerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])" + "'", str12, "Question(id=null, text=null, answers=[Answer(id=null, text=null, correct=false), Answer(id=null, text=null, correct=false)])");
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setRating((long) (short) -1);
        java.lang.String str5 = user0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)" + "'", str5, "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)");
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.getName();
        java.lang.Integer int3 = tag0.getId();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper4 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType6 = createPostRequestToPostMapper5.getBType();
        com.vntu.marenko.ualearning.server.model.Post post7 = new com.vntu.marenko.ualearning.server.model.Post();
        post7.setText("");
        java.lang.String str10 = post7.toString();
        post7.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest13 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest13.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext16 = null;
        createPostRequestToPostMapper5.mapBtoA(post7, createPostRequest13, mappingContext16);
        com.vntu.marenko.ualearning.server.model.Post post18 = new com.vntu.marenko.ualearning.server.model.Post();
        post18.setText("");
        java.lang.String str21 = post18.toString();
        java.lang.Integer int22 = post18.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str24 = createPostRequest23.getUsername();
        java.lang.String str25 = createPostRequest23.toString();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper5.mapBtoA(post18, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = createPostRequestToPostMapper28.getBType();
        com.vntu.marenko.ualearning.server.model.Post post30 = new com.vntu.marenko.ualearning.server.model.Post();
        post30.setText("");
        java.lang.String str33 = post30.toString();
        post30.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest36 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest36.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext39 = null;
        createPostRequestToPostMapper28.mapBtoA(post30, createPostRequest36, mappingContext39);
        ma.glasnost.orika.MappingContext mappingContext41 = null;
        createPostRequestToPostMapper4.mapAtoB(createPostRequest23, post30, mappingContext41);
        boolean boolean43 = tag0.equals((java.lang.Object) createPostRequest23);
        createPostRequest23.setText("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str46 = createPostRequest23.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(postType6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str10, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str21, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str25, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str33, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=null)" + "'", str46, "CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=null)");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.Integer int3 = post0.getId();
        java.util.Date date4 = post0.getTimestamp();
        java.lang.String str5 = post0.toString();
        java.lang.String str6 = post0.getUser();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(date4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str5, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = testController19.getTest((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId((int) (byte) 100);
        java.lang.String str3 = postDto0.getText();
        int int4 = postDto0.getId();
        postDto0.setLogin("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        java.lang.String str7 = postDto0.getLogin();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)" + "'", str7, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setRating((int) (short) 10);
        userDto0.setSurname("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        boolean boolean5 = userDto0.equals((java.lang.Object) (byte) -1);
        java.lang.String str6 = userDto0.getInstitution();
        userDto0.setRating(0);
        java.lang.String str9 = userDto0.getEmail();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        com.vntu.marenko.ualearning.server.model.User user9 = new com.vntu.marenko.ualearning.server.model.User();
        user9.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository12 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository14 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper15 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository12, testRepository13, answerRepository14);
        ma.glasnost.orika.MapperFacade mapperFacade16 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade16);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType18 = submitResultRequestToDomainMapper15.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper15.setMapperFacade(mapperFacade19);
        boolean boolean21 = user9.equals((java.lang.Object) submitResultRequestToDomainMapper15);
        com.vntu.marenko.ualearning.server.model.Result result22 = new com.vntu.marenko.ualearning.server.model.Result();
        result22.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user25 = new com.vntu.marenko.ualearning.server.model.User();
        user25.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test28 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean29 = user25.equals((java.lang.Object) test28);
        user25.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result22.setUser(user25);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest33 = null;
        ma.glasnost.orika.MappingContext mappingContext34 = null;
        submitResultRequestToDomainMapper15.mapBtoA(result22, submitResultRequest33, mappingContext34);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest36.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int39 = submitResultRequest36.getTestId();
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result22, submitResultRequest36, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Question question42 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str43 = question42.getText();
        java.lang.Integer int44 = question42.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService45 = null;
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController47 = new com.vntu.marenko.ualearning.server.controller.TestController(testService45, mapperFacade46);
        boolean boolean48 = question42.equals((java.lang.Object) testController47);
        com.vntu.marenko.ualearning.server.model.Result result49 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int50 = result49.getId();
        com.vntu.marenko.ualearning.server.model.Test test51 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int52 = test51.getId();
        java.lang.Integer int53 = test51.getId();
        result49.setTest(test51);
        java.lang.Integer int55 = result49.getId();
        com.vntu.marenko.ualearning.server.model.Result result56 = new com.vntu.marenko.ualearning.server.model.Result();
        result56.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user59 = new com.vntu.marenko.ualearning.server.model.User();
        user59.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test62 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean63 = user59.equals((java.lang.Object) test62);
        user59.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result56.setUser(user59);
        com.vntu.marenko.ualearning.server.model.Question question67 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int68 = question67.getId();
        java.lang.Integer int69 = question67.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer70 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer71 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer71.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray74 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer70, answer71 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList75 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList75, answerArray74);
        question67.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        result56.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        result49.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        question42.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        result22.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList75);
        com.vntu.marenko.ualearning.server.model.User user82 = null;
        result22.setUser(user82);
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(submitResultRequestType18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(answerArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        questionDto0.setId(10);
        java.lang.String str5 = questionDto0.toString();
        java.lang.String str6 = questionDto0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str5, "QuestionDto(id=10, text=null, answers=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str6, "QuestionDto(id=10, text=null, answers=null)");
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        questionDto0.setId(10);
        questionDto0.setText("CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str1 = createPostRequest0.getUsername();
        createPostRequest0.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str4 = createPostRequest0.getUsername();
        createPostRequest0.setUsername("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        answer0.setText("Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest7 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int8 = submitResultRequest7.getTestId();
        com.vntu.marenko.ualearning.server.model.Result result9 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int10 = result9.getId();
        com.vntu.marenko.ualearning.server.model.Test test11 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int12 = test11.getId();
        java.lang.Integer int13 = test11.getId();
        result9.setTest(test11);
        java.lang.Integer int15 = result9.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList16 = result9.getAnswers();
        ma.glasnost.orika.MappingContext mappingContext17 = null;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.mapAtoB(submitResultRequest7, result9, mappingContext17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(answerList16);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        tag0.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str3 = tag0.getName();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto4 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str5 = postDto4.getLogin();
        java.lang.String[] strArray10 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        postDto4.setLikes((java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = postDto4.getText();
        boolean boolean15 = tag0.equals((java.lang.Object) str14);
        java.lang.Integer int16 = tag0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str3, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.lang.Integer int3 = post0.getId();
        post0.setUser("QuestionDto(id=0, text=null, answers=null)");
        java.lang.String str6 = post0.getUser();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "QuestionDto(id=0, text=null, answers=null)" + "'", str6, "QuestionDto(id=0, text=null, answers=null)");
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.util.Date date3 = null;
        post0.setTimestamp(date3);
        java.util.Date date5 = post0.getTimestamp();
        java.util.Date date6 = null;
        post0.setTimestamp(date6);
        org.junit.Assert.assertNull(date5);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.toString();
        answer0.setId((java.lang.Integer) 1);
        java.lang.String str4 = answer0.getText();
        answer0.setCorrect(false);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Answer(id=null, text=null, correct=false)" + "'", str1, "Answer(id=null, text=null, correct=false)");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription4 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription4.setId((java.lang.Integer) 0);
        resultDescription4.setMark(1L);
        java.lang.Integer int9 = resultDescription4.getTestId();
        long long10 = resultDescription4.getMark();
        com.vntu.marenko.ualearning.server.model.Result result11 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int12 = result11.getId();
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int14 = test13.getId();
        java.lang.Integer int15 = test13.getId();
        result11.setTest(test13);
        boolean boolean17 = result11.isSubmitted();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        resultToDescriptionMapper1.mapBtoA(resultDescription4, result11, mappingContext18);
        java.lang.Boolean boolean20 = resultToDescriptionMapper1.favorsExtension();
        ma.glasnost.orika.Mapper[] mapperArray22 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray23 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray22;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNotNull(mapperArray22);
        org.junit.Assert.assertNotNull(objMapperArray23);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto0.setText("PostDto(id=0, text=UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null), timestamp=null, login=null, likes=null)");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest0 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest0.setText("Result(id=null, user=null, test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList24 = resultServiceImpl4.getResultsForUser("TagDto(id=0, name=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        java.lang.Boolean boolean7 = submitResultRequestToDomainMapper3.favorsExtension();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getName();
        userRequest0.setSurname("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        java.lang.String str6 = userRequest0.getPassword();
        java.lang.String str7 = userRequest0.getSurname();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ResultDescription(id=0, testId=null, testName=null, mark=1)" + "'", str7, "ResultDescription(id=0, testId=null, testName=null, mark=1)");
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        java.lang.String str2 = loginRequest0.getLogin();
        loginRequest0.setPassword("hi!");
        loginRequest0.setLogin("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        java.lang.String str7 = loginRequest0.getPassword();
        java.lang.String str8 = loginRequest0.getPassword();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository5 = null;
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer8 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository5, mapperFacade6, userRepository7, markComputer8);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig12 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl13 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository16 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper17 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository14, testRepository15, answerRepository16);
        ma.glasnost.orika.MapperFacade mapperFacade18 = null;
        submitResultRequestToDomainMapper17.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper17.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper21 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = null;
        ma.glasnost.orika.MapperFacade mapperFacade25 = mapperConfig12.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl13, submitResultRequestToDomainMapper17, resultToDescriptionMapper21, createPostRequestToPostMapper22, postToDtoMapper24);
        createPostRequestToPostMapper10.setMapperFacade(mapperFacade25);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController27 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl9, mapperFacade25);
        boolean boolean28 = test0.equals((java.lang.Object) resultController27);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest29 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int30 = submitResultRequest29.getTestId();
        submitResultRequest29.setTestId((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto33 = resultController27.submitTest(submitResultRequest29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(mapperFacade25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository22 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository22);
        com.vntu.marenko.ualearning.server.controller.PostController postController24 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade19, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoList26 = postController24.getPostsForUser("SubmitResultRequest(userLogin=QuestionDto(id=10, text=null, answers=null), testId=0, answers=null)");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.toString();
        java.lang.String str2 = loginRequest0.toString();
        loginRequest0.setLogin("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        java.lang.String str5 = loginRequest0.getLogin();
        loginRequest0.setLogin("Tag(id=null, name=null)");
        java.lang.String str8 = loginRequest0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str1, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str2, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Result(id=null, user=null, test=null, submitted=false, answers=null)" + "'", str5, "Result(id=null, user=null, test=null, submitted=false, answers=null)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoginRequest(login=Tag(id=null, name=null), password=null)" + "'", str8, "LoginRequest(login=Tag(id=null, name=null), password=null)");
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.Integer int54 = testDto0.getCompletedCounter();
        testDto0.setDescriptionTest("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        java.lang.String str57 = testDto0.getDescriptionTest();
        testDto0.setCompletedCounter((java.lang.Integer) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str57, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = user0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        com.vntu.marenko.ualearning.server.model.Result result13 = new com.vntu.marenko.ualearning.server.model.Result();
        result13.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user16 = new com.vntu.marenko.ualearning.server.model.User();
        user16.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean20 = user16.equals((java.lang.Object) test19);
        user16.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result13.setUser(user16);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = null;
        ma.glasnost.orika.MappingContext mappingContext25 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result13, submitResultRequest24, mappingContext25);
        com.vntu.marenko.ualearning.server.model.User user27 = result13.getUser();
        com.vntu.marenko.ualearning.server.model.User user28 = result13.getUser();
        result13.setId((java.lang.Integer) 100);
        result13.setSubmitted(false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertNotNull(user28);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        user0.setAge((int) '4');
        user0.setEmail("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        user0.setPassword("Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null)");
        java.lang.String str9 = user0.toString();
        user0.setLogin("CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=null)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)" + "'", str9, "User(login=null, password=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), name=null, surname=, age=52, institution=null, email=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), rating=0)");
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setNameTest("hi!");
        testDescription0.setId((int) (short) 1);
        testDescription0.setId(100);
        java.lang.String str9 = testDescription0.getNameTest();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper10 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig11 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository13 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository15 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper16 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository13, testRepository14, answerRepository15);
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        submitResultRequestToDomainMapper16.setMapperFacade(mapperFacade17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper16.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper20 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper21 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean22 = createPostRequestToPostMapper21.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper23 = null;
        ma.glasnost.orika.MapperFacade mapperFacade24 = mapperConfig11.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl12, submitResultRequestToDomainMapper16, resultToDescriptionMapper20, createPostRequestToPostMapper21, postToDtoMapper23);
        postToDtoMapper10.setMapperFacade(mapperFacade24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType26 = postToDtoMapper10.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType27 = postToDtoMapper10.getBType();
        boolean boolean28 = testDescription0.equals((java.lang.Object) postDtoType27);
        int int29 = testDescription0.getId();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNotNull(mapperFacade24);
        org.junit.Assert.assertNotNull(postDtoType26);
        org.junit.Assert.assertNotNull(postDtoType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.service.UserService userService23 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController40 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService23, mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController41 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade38);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto43 = resultController41.getResult(10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer0.setCorrect(false);
        java.lang.Integer int3 = answer0.getId();
        answer0.setId((java.lang.Integer) 100);
        java.lang.String str6 = answer0.toString();
        java.lang.String str7 = answer0.toString();
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Answer(id=100, text=null, correct=false)" + "'", str6, "Answer(id=100, text=null, correct=false)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Answer(id=100, text=null, correct=false)" + "'", str7, "Answer(id=100, text=null, correct=false)");
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType4 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository22 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository22);
        com.vntu.marenko.ualearning.server.controller.PostController postController24 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade19, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl23);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.Post post26 = postServiceImpl23.getPost((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType4);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest14 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest14.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post17 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext18 = null;
        createPostRequestToPostMapper10.mapAtoB(createPostRequest14, post17, mappingContext18);
        java.lang.String str20 = createPostRequest14.toString();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str20, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = user0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        com.vntu.marenko.ualearning.server.model.Result result13 = new com.vntu.marenko.ualearning.server.model.Result();
        result13.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user16 = new com.vntu.marenko.ualearning.server.model.User();
        user16.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean20 = user16.equals((java.lang.Object) test19);
        user16.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result13.setUser(user16);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = null;
        ma.glasnost.orika.MappingContext mappingContext25 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result13, submitResultRequest24, mappingContext25);
        com.vntu.marenko.ualearning.server.model.User user27 = result13.getUser();
        com.vntu.marenko.ualearning.server.model.Question question28 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str29 = question28.getText();
        java.lang.Integer int30 = question28.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService31 = null;
        ma.glasnost.orika.MapperFacade mapperFacade32 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController33 = new com.vntu.marenko.ualearning.server.controller.TestController(testService31, mapperFacade32);
        boolean boolean34 = question28.equals((java.lang.Object) testController33);
        com.vntu.marenko.ualearning.server.model.Result result35 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int36 = result35.getId();
        com.vntu.marenko.ualearning.server.model.Test test37 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int38 = test37.getId();
        java.lang.Integer int39 = test37.getId();
        result35.setTest(test37);
        java.lang.Integer int41 = result35.getId();
        com.vntu.marenko.ualearning.server.model.Result result42 = new com.vntu.marenko.ualearning.server.model.Result();
        result42.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user45 = new com.vntu.marenko.ualearning.server.model.User();
        user45.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test48 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean49 = user45.equals((java.lang.Object) test48);
        user45.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result42.setUser(user45);
        com.vntu.marenko.ualearning.server.model.Question question53 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int54 = question53.getId();
        java.lang.Integer int55 = question53.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer56 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer57 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer57.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray60 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer56, answer57 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList61 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList61, answerArray60);
        question53.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList61);
        result42.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList61);
        result35.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList61);
        question28.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList61);
        result13.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList61);
        result13.setSubmitted(true);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(answerArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        test0.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository5 = null;
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository7 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer8 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl9 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository5, mapperFacade6, userRepository7, markComputer8);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig12 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl13 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository14 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository16 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper17 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository14, testRepository15, answerRepository16);
        ma.glasnost.orika.MapperFacade mapperFacade18 = null;
        submitResultRequestToDomainMapper17.setMapperFacade(mapperFacade18);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper17.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper21 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = null;
        ma.glasnost.orika.MapperFacade mapperFacade25 = mapperConfig12.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl13, submitResultRequestToDomainMapper17, resultToDescriptionMapper21, createPostRequestToPostMapper22, postToDtoMapper24);
        createPostRequestToPostMapper10.setMapperFacade(mapperFacade25);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController27 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl9, mapperFacade25);
        boolean boolean28 = test0.equals((java.lang.Object) resultController27);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest29 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest29.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest29.setTestId((int) (byte) 100);
        submitResultRequest29.setUserLogin("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto36 = resultController27.submitTest(submitResultRequest29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(mapperFacade25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper1 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        postToDtoMapper1.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig18 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl19 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository22 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper23 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository20, testRepository21, answerRepository22);
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        submitResultRequestToDomainMapper23.setMapperFacade(mapperFacade24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper23.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper27 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper28 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean29 = createPostRequestToPostMapper28.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper30 = null;
        ma.glasnost.orika.MapperFacade mapperFacade31 = mapperConfig18.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl19, submitResultRequestToDomainMapper23, resultToDescriptionMapper27, createPostRequestToPostMapper28, postToDtoMapper30);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl32 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository35 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper36 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository33, testRepository34, answerRepository35);
        ma.glasnost.orika.MapperFacade mapperFacade37 = null;
        submitResultRequestToDomainMapper36.setMapperFacade(mapperFacade37);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType39 = submitResultRequestToDomainMapper36.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper40 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig41 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl42 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository44 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository45 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper46 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository43, testRepository44, answerRepository45);
        ma.glasnost.orika.MapperFacade mapperFacade47 = null;
        submitResultRequestToDomainMapper46.setMapperFacade(mapperFacade47);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType49 = submitResultRequestToDomainMapper46.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper50 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper51 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean52 = createPostRequestToPostMapper51.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper53 = null;
        ma.glasnost.orika.MapperFacade mapperFacade54 = mapperConfig41.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl42, submitResultRequestToDomainMapper46, resultToDescriptionMapper50, createPostRequestToPostMapper51, postToDtoMapper53);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig18.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl32, submitResultRequestToDomainMapper36, resultToDescriptionMapper40, createPostRequestToPostMapper51, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl57 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade15, userRepository17, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl32);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest58 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int59 = submitResultRequest58.getTestId();
        java.lang.Integer[] intArray64 = new java.lang.Integer[] { 52, 10, 10, 100 };
        java.util.ArrayList<java.lang.Integer> intList65 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList65, intArray64);
        submitResultRequest58.setAnswers((java.util.List<java.lang.Integer>) intList65);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto68 = resultServiceImpl57.submitResult(submitResultRequest58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(mapperFacade31);
        org.junit.Assert.assertNotNull(resultType39);
        org.junit.Assert.assertNotNull(resultType49);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + false + "'", boolean52, false);
        org.junit.Assert.assertNotNull(mapperFacade54);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository78 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl79 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository78);
        com.vntu.marenko.ualearning.server.controller.PostController postController80 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade75, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl79);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto82 = postController80.getPost((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.Mapper[] mapperArray10 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray11 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray10;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(mapperArray10);
        org.junit.Assert.assertNotNull(objMapperArray11);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setInstitution("hi!");
        java.lang.String str3 = user0.toString();
        java.lang.String str4 = user0.getEmail();
        user0.setPassword("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        user0.setLogin("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=-1)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str3, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList4 = testServiceImpl2.getTestsWithTag(1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest0 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str1 = loginRequest0.getPassword();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        ma.glasnost.orika.MapperFacade mapperFacade3 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto5 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl6 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean7 = answerDto5.equals((java.lang.Object) markComputerImpl6);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl8 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade3, userRepository4, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl6);
        boolean boolean9 = loginRequest0.equals((java.lang.Object) resultServiceImpl8);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl11 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository10);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = resultToDescriptionMapper13.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = resultToDescriptionMapper13.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType16 = resultToDescriptionMapper13.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType17 = resultToDescriptionMapper13.getAType();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        createPostRequestToPostMapper18.setMapperFacade(mapperFacade33);
        resultToDescriptionMapper13.setMapperFacade(mapperFacade33);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController36 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl11, mapperFacade33);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController37 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl8, mapperFacade33);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto39 = resultController37.getResult((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertNotNull(resultDescriptionType16);
        org.junit.Assert.assertNotNull(resultType17);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        boolean boolean3 = testDto0.equals((java.lang.Object) 0.0d);
        testDto0.setId((int) (byte) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto0.setText("hi!");
        answerDto0.setText("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=-1)");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper3.getBType();
        java.lang.Boolean boolean27 = submitResultRequestToDomainMapper3.favorsExtension();
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList2 = questionDto0.getAnswers();
        java.lang.String str3 = questionDto0.getText();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(answerDtoList2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        userRequest0.setSurname("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        java.lang.String str5 = userRequest0.getSurname();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str5, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType81 = resultToDescriptionMapper22.getBType();
        java.lang.Boolean boolean82 = resultToDescriptionMapper22.favorsExtension();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertNotNull(resultDescriptionType81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        resultDescription0.setId((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        resultDto0.setSubmitted(true);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto25 = resultDto0.getTest();
        resultDto0.setMark((long) (short) 10);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto28 = resultDto0.getTest();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(testDto25);
        org.junit.Assert.assertNull(testDto28);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        resultDto0.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto5 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto5.setRating((int) (byte) -1);
        userDto5.setLogin("LoginRequest(login=null, password=null)");
        resultDto0.setUser(userDto5);
        resultDto0.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig14 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository18 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper19 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository16, testRepository17, answerRepository18);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        submitResultRequestToDomainMapper19.setMapperFacade(mapperFacade20);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType22 = submitResultRequestToDomainMapper19.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper23 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean25 = createPostRequestToPostMapper24.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper26 = null;
        ma.glasnost.orika.MapperFacade mapperFacade27 = mapperConfig14.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl15, submitResultRequestToDomainMapper19, resultToDescriptionMapper23, createPostRequestToPostMapper24, postToDtoMapper26);
        postToDtoMapper13.setMapperFacade(mapperFacade27);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType29 = postToDtoMapper13.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType30 = postToDtoMapper13.getBType();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository31 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig32 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl33 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository36 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper37 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository34, testRepository35, answerRepository36);
        ma.glasnost.orika.MapperFacade mapperFacade38 = null;
        submitResultRequestToDomainMapper37.setMapperFacade(mapperFacade38);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType40 = submitResultRequestToDomainMapper37.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper41 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper42 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean43 = createPostRequestToPostMapper42.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper44 = null;
        ma.glasnost.orika.MapperFacade mapperFacade45 = mapperConfig32.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl33, submitResultRequestToDomainMapper37, resultToDescriptionMapper41, createPostRequestToPostMapper42, postToDtoMapper44);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository47 = null;
        ma.glasnost.orika.MapperFacade mapperFacade48 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository49 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto50 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl51 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean52 = answerDto50.equals((java.lang.Object) markComputerImpl51);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl53 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository47, mapperFacade48, userRepository49, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl51);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl54 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository31, mapperFacade45, userRepository46, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl51);
        postToDtoMapper13.setMapperFacade(mapperFacade45);
        boolean boolean56 = resultDto0.equals((java.lang.Object) postToDtoMapper13);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto57 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str58 = postDto57.getLogin();
        postDto57.setTimestamp("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.model.Post post61 = new com.vntu.marenko.ualearning.server.model.Post();
        post61.setText("");
        java.lang.String str64 = post61.toString();
        post61.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str67 = post61.getUser();
        ma.glasnost.orika.MappingContext mappingContext68 = null;
        postToDtoMapper13.mapBtoA(postDto57, post61, mappingContext68);
        java.lang.Boolean boolean70 = postToDtoMapper13.favorsExtension();
        org.junit.Assert.assertNotNull(resultType22);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + false + "'", boolean25, false);
        org.junit.Assert.assertNotNull(mapperFacade27);
        org.junit.Assert.assertNotNull(postType29);
        org.junit.Assert.assertNotNull(postDtoType30);
        org.junit.Assert.assertNotNull(resultType40);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + false + "'", boolean43, false);
        org.junit.Assert.assertNotNull(mapperFacade45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str64, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str67, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + false + "'", boolean70, false);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        java.lang.Integer[] intArray8 = new java.lang.Integer[] { 1, 1, 100, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList9 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList9, intArray8);
        submitResultRequest0.setAnswers((java.util.List<java.lang.Integer>) intList9);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest12 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int13 = submitResultRequest12.getTestId();
        java.lang.Integer[] intArray17 = new java.lang.Integer[] { 1, 10, (-1) };
        java.util.ArrayList<java.lang.Integer> intList18 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
        submitResultRequest12.setAnswers((java.util.List<java.lang.Integer>) intList18);
        submitResultRequest0.setAnswers((java.util.List<java.lang.Integer>) intList18);
        java.util.List<java.lang.Integer> intList22 = submitResultRequest0.getAnswers();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(intList22);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto1 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str2 = postDto1.getLogin();
        java.lang.String[] strArray7 = new java.lang.String[] { "LoginRequest(login=null, password=null)", "CreatePostRequest(text=null, username=null)", "Answer(id=null, text=null, correct=false)", "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        postDto1.setLikes((java.util.List<java.lang.String>) strList8);
        java.lang.String str11 = postDto1.getText();
        postDto1.setText("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        java.lang.String str14 = postDto1.getTimestamp();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper15 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = createPostRequestToPostMapper15.getBType();
        com.vntu.marenko.ualearning.server.model.Post post17 = new com.vntu.marenko.ualearning.server.model.Post();
        post17.setText("");
        java.lang.String str20 = post17.toString();
        post17.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest23 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest23.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper15.mapBtoA(post17, createPostRequest23, mappingContext26);
        com.vntu.marenko.ualearning.server.model.Post post28 = new com.vntu.marenko.ualearning.server.model.Post();
        post28.setText("");
        java.lang.String str31 = post28.toString();
        java.lang.Integer int32 = post28.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest33 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str34 = createPostRequest33.getUsername();
        java.lang.String str35 = createPostRequest33.toString();
        ma.glasnost.orika.MappingContext mappingContext36 = null;
        createPostRequestToPostMapper15.mapBtoA(post28, createPostRequest33, mappingContext36);
        post28.setText("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        postToDtoMapper0.mapBtoA(postDto1, post28, mappingContext40);
        int int42 = postDto1.getId();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str20, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str31, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str35, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getEmail();
        userDto0.setAge((int) '#');
        int int6 = userDto0.getAge();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 35 + "'", int6 == 35);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto3 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto3.setInstitution("");
        java.lang.String str6 = userDto3.getInstitution();
        userDto3.setAge((int) (byte) 10);
        int int9 = userDto3.getRating();
        resultDto0.setUser(userDto3);
        userDto3.setName("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper81 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2);
        ma.glasnost.orika.Mapper[] mapperArray83 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray84 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray83;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper81.setUsedMappers(objMapperArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertNotNull(mapperArray83);
        org.junit.Assert.assertNotNull(objMapperArray84);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList4 = testServiceImpl2.getTestsWithTag((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType3 = resultToDescriptionMapper1.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionType4 = resultToDescriptionMapper1.getBType();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType11 = submitResultRequestToDomainMapper8.getAType();
        com.vntu.marenko.ualearning.server.model.Result result12 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int13 = result12.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        result12.setTest(test14);
        java.lang.Integer int18 = result12.getId();
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int20 = test19.getId();
        java.lang.Integer int21 = test19.getId();
        test19.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int24 = test19.getCompletedCounter();
        java.lang.Integer int25 = test19.getCompletedCounter();
        result12.setTest(test19);
        com.vntu.marenko.ualearning.server.model.User user27 = result12.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest28 = null;
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        submitResultRequestToDomainMapper8.mapBtoA(result12, submitResultRequest28, mappingContext29);
        java.lang.String str31 = result12.toString();
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription32 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription32.setId((java.lang.Integer) 0);
        resultDescription32.setTestName("hi!");
        java.lang.String str37 = resultDescription32.getTestName();
        java.lang.Integer int38 = resultDescription32.getTestId();
        long long39 = resultDescription32.getMark();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig40 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl41 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository42 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository43 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository44 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper45 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository42, testRepository43, answerRepository44);
        ma.glasnost.orika.MapperFacade mapperFacade46 = null;
        submitResultRequestToDomainMapper45.setMapperFacade(mapperFacade46);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType48 = submitResultRequestToDomainMapper45.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper49 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper50 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean51 = createPostRequestToPostMapper50.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper52 = null;
        ma.glasnost.orika.MapperFacade mapperFacade53 = mapperConfig40.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl41, submitResultRequestToDomainMapper45, resultToDescriptionMapper49, createPostRequestToPostMapper50, postToDtoMapper52);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest54 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest54.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post57 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext58 = null;
        createPostRequestToPostMapper50.mapAtoB(createPostRequest54, post57, mappingContext58);
        boolean boolean60 = resultDescription32.equals((java.lang.Object) createPostRequestToPostMapper50);
        ma.glasnost.orika.MappingContext mappingContext61 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.mapAtoB(result12, resultDescription32, mappingContext61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertNotNull(resultType3);
        org.junit.Assert.assertNotNull(resultDescriptionType4);
        org.junit.Assert.assertNotNull(submitResultRequestType11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(user27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Result(id=null, user=null, test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)" + "'", str31, "Result(id=null, user=null, test=Test(id=null, nameTest=null, descriptionTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0), completedCounter=null, questions=null, tags=null), submitted=false, answers=null)");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(resultType48);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(mapperFacade53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int1 = submitResultRequest0.getTestId();
        java.lang.String str2 = submitResultRequest0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "SubmitResultRequest(userLogin=null, testId=0, answers=null)" + "'", str2, "SubmitResultRequest(userLogin=null, testId=0, answers=null)");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType81 = submitResultRequestToDomainMapper18.getBType();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertNotNull(resultType81);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper22 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean23 = createPostRequestToPostMapper22.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig24 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl25 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository28 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper29 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository26, testRepository27, answerRepository28);
        ma.glasnost.orika.MapperFacade mapperFacade30 = null;
        submitResultRequestToDomainMapper29.setMapperFacade(mapperFacade30);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType32 = submitResultRequestToDomainMapper29.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper33 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper34 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean35 = createPostRequestToPostMapper34.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper36 = null;
        ma.glasnost.orika.MapperFacade mapperFacade37 = mapperConfig24.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl25, submitResultRequestToDomainMapper29, resultToDescriptionMapper33, createPostRequestToPostMapper34, postToDtoMapper36);
        createPostRequestToPostMapper22.setMapperFacade(mapperFacade37);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository41 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper42 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository39, testRepository40, answerRepository41);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType43 = submitResultRequestToDomainMapper42.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper44 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig45 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl46 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository49 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper50 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository47, testRepository48, answerRepository49);
        ma.glasnost.orika.MapperFacade mapperFacade51 = null;
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType53 = submitResultRequestToDomainMapper50.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper54 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper55 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean56 = createPostRequestToPostMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = null;
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig45.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl46, submitResultRequestToDomainMapper50, resultToDescriptionMapper54, createPostRequestToPostMapper55, postToDtoMapper57);
        postToDtoMapper44.setMapperFacade(mapperFacade58);
        submitResultRequestToDomainMapper42.setMapperFacade(mapperFacade58);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository61 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl62 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository61);
        com.vntu.marenko.ualearning.server.controller.PostController postController63 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade58, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl62);
        com.vntu.marenko.ualearning.server.controller.PostController postController64 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade37, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl62);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.TestDescription> testDescriptionList67 = testController65.getTestDescriptionsForTag((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNotNull(resultType32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNotNull(mapperFacade37);
        org.junit.Assert.assertNotNull(resultType43);
        org.junit.Assert.assertNotNull(resultType53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(mapperFacade58);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int8 = test7.getId();
        java.lang.Integer int9 = test7.getId();
        test7.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int12 = test7.getCompletedCounter();
        java.lang.Integer int13 = test7.getCompletedCounter();
        result0.setTest(test7);
        com.vntu.marenko.ualearning.server.model.User user15 = result0.getUser();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList16 = null;
        result0.setAnswers(answerList16);
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(user15);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("");
        user0.setLogin("Result(id=null, user=null, test=null, submitted=false, answers=null)");
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto3 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto3.setInstitution("");
        java.lang.String str6 = userDto3.getInstitution();
        userDto3.setAge((int) (byte) 10);
        int int9 = userDto3.getRating();
        resultDto0.setUser(userDto3);
        resultDto0.setSubmitted(false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto21 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl22 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean23 = answerDto21.equals((java.lang.Object) markComputerImpl22);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl24 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository18, mapperFacade19, userRepository20, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl22);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl25 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade16, userRepository17, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl22);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository27 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl28 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository26, tagRepository27);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper29 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig30 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl31 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository32 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository34 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper35 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository32, testRepository33, answerRepository34);
        ma.glasnost.orika.MapperFacade mapperFacade36 = null;
        submitResultRequestToDomainMapper35.setMapperFacade(mapperFacade36);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType38 = submitResultRequestToDomainMapper35.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper39 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper42 = null;
        ma.glasnost.orika.MapperFacade mapperFacade43 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl31, submitResultRequestToDomainMapper35, resultToDescriptionMapper39, createPostRequestToPostMapper40, postToDtoMapper42);
        postToDtoMapper29.setMapperFacade(mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.TestController testController45 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl28, mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController46 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl25, mapperFacade43);
        com.vntu.marenko.ualearning.server.controller.UserController userController47 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade43);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.model.User user49 = userServiceImpl1.getUser("Question(id=-1, text=null, answers=[Answer(id=null, text=null, correct=false)])");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(resultType38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(mapperFacade43);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        ma.glasnost.orika.MapperFacade mapperFacade24 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController25 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl23, mapperFacade24);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto27 = resultController25.getResult((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        postDto0.setTimestamp("");
        postDto0.setId((int) (byte) 0);
        postDto0.setLogin("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        java.lang.String str8 = postDto0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)" + "'", str8, "User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl0 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper1 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl0);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType2 = resultToDescriptionMapper1.getAType();
        com.vntu.marenko.ualearning.server.model.Result result3 = new com.vntu.marenko.ualearning.server.model.Result();
        com.vntu.marenko.ualearning.server.model.User user4 = new com.vntu.marenko.ualearning.server.model.User();
        user4.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean8 = user4.equals((java.lang.Object) test7);
        result3.setUser(user4);
        com.vntu.marenko.ualearning.server.model.User user10 = result3.getUser();
        com.vntu.marenko.ualearning.server.model.Question question11 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str12 = question11.getText();
        java.lang.Integer int13 = question11.getId();
        com.vntu.marenko.ualearning.server.service.TestService testService14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController16 = new com.vntu.marenko.ualearning.server.controller.TestController(testService14, mapperFacade15);
        boolean boolean17 = question11.equals((java.lang.Object) testController16);
        com.vntu.marenko.ualearning.server.model.Result result18 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int19 = result18.getId();
        com.vntu.marenko.ualearning.server.model.Test test20 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int21 = test20.getId();
        java.lang.Integer int22 = test20.getId();
        result18.setTest(test20);
        java.lang.Integer int24 = result18.getId();
        com.vntu.marenko.ualearning.server.model.Result result25 = new com.vntu.marenko.ualearning.server.model.Result();
        result25.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user28 = new com.vntu.marenko.ualearning.server.model.User();
        user28.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test31 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean32 = user28.equals((java.lang.Object) test31);
        user28.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result25.setUser(user28);
        com.vntu.marenko.ualearning.server.model.Question question36 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int37 = question36.getId();
        java.lang.Integer int38 = question36.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer39 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer40 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer40.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray43 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer39, answer40 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList44 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList44, answerArray43);
        question36.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList44);
        result25.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList44);
        result18.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList44);
        question11.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList44);
        result3.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList44);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription51 = null;
        ma.glasnost.orika.MappingContext mappingContext52 = null;
        // The following exception was thrown during execution in test generation
        try {
            resultToDescriptionMapper1.mapAtoB(result3, resultDescription51, mappingContext52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(answerArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = postToDtoMapper0.getAType();
        java.lang.Boolean boolean2 = postToDtoMapper0.favorsExtension();
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + false + "'", boolean2, false);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        com.vntu.marenko.ualearning.server.model.User user12 = new com.vntu.marenko.ualearning.server.model.User();
        user12.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType21 = submitResultRequestToDomainMapper18.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade22 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade22);
        boolean boolean24 = user12.equals((java.lang.Object) submitResultRequestToDomainMapper18);
        com.vntu.marenko.ualearning.server.model.Result result25 = new com.vntu.marenko.ualearning.server.model.Result();
        result25.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user28 = new com.vntu.marenko.ualearning.server.model.User();
        user28.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test31 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean32 = user28.equals((java.lang.Object) test31);
        user28.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result25.setUser(user28);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = null;
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        submitResultRequestToDomainMapper18.mapBtoA(result25, submitResultRequest36, mappingContext37);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest39 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest39.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int42 = submitResultRequest39.getTestId();
        ma.glasnost.orika.MappingContext mappingContext43 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result25, submitResultRequest39, mappingContext43);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl46 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository45);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.UserController userController63 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl46, mapperFacade61);
        boolean boolean64 = submitResultRequest39.equals((java.lang.Object) mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade61);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.TestDto testDto67 = testController65.getTest(0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertNotNull(submitResultRequestType21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        java.lang.String str5 = testDescription0.getNameTest();
        boolean boolean7 = testDescription0.equals((java.lang.Object) "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        java.lang.String str8 = testDescription0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str5, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))" + "'", str8, "TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))");
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str1 = question0.getText();
        java.lang.Integer int2 = question0.getId();
        java.lang.Integer int3 = question0.getId();
        java.lang.String str4 = question0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Question(id=null, text=null, answers=null)" + "'", str4, "Question(id=null, text=null, answers=null)");
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        postDto0.setId(0);
        postDto0.setText("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        java.lang.String str5 = postDto0.getText();
        java.lang.String str6 = postDto0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str5, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PostDto(id=0, text=UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null), timestamp=null, login=null, likes=null)" + "'", str6, "PostDto(id=0, text=UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null), timestamp=null, login=null, likes=null)");
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        userDto0.setSurname("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto0.setLogin("Tag(id=null, name=null)");
        int int7 = userDto0.getAge();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.toString();
        java.lang.String str2 = tagDto0.getName();
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int4 = test3.getId();
        java.lang.Integer int5 = test3.getId();
        test3.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList8 = test3.getTags();
        boolean boolean9 = tagDto0.equals((java.lang.Object) tagList8);
        tagDto0.setName("");
        tagDto0.setName("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        int int14 = tagDto0.getId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TagDto(id=0, name=null)" + "'", str1, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(tagList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto0.setInstitution("");
        java.lang.String str3 = userDto0.getInstitution();
        userDto0.setEmail("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        userDto0.setSurname("UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
        java.lang.String str8 = userDto0.getSurname();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)" + "'", str8, "UserDto(login=null, name=null, surname=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), age=0, institution=, email=null, rating=0)");
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        com.vntu.marenko.ualearning.server.model.User user12 = new com.vntu.marenko.ualearning.server.model.User();
        user12.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.MapperFacade mapperFacade19 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType21 = submitResultRequestToDomainMapper18.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade22 = null;
        submitResultRequestToDomainMapper18.setMapperFacade(mapperFacade22);
        boolean boolean24 = user12.equals((java.lang.Object) submitResultRequestToDomainMapper18);
        com.vntu.marenko.ualearning.server.model.Result result25 = new com.vntu.marenko.ualearning.server.model.Result();
        result25.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user28 = new com.vntu.marenko.ualearning.server.model.User();
        user28.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test31 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean32 = user28.equals((java.lang.Object) test31);
        user28.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result25.setUser(user28);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest36 = null;
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        submitResultRequestToDomainMapper18.mapBtoA(result25, submitResultRequest36, mappingContext37);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest39 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest39.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        int int42 = submitResultRequest39.getTestId();
        ma.glasnost.orika.MappingContext mappingContext43 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result25, submitResultRequest39, mappingContext43);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl46 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository45);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper47 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig48 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl49 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository50 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository51 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository52 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper53 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository50, testRepository51, answerRepository52);
        ma.glasnost.orika.MapperFacade mapperFacade54 = null;
        submitResultRequestToDomainMapper53.setMapperFacade(mapperFacade54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = submitResultRequestToDomainMapper53.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper57 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper58 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean59 = createPostRequestToPostMapper58.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = null;
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig48.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl49, submitResultRequestToDomainMapper53, resultToDescriptionMapper57, createPostRequestToPostMapper58, postToDtoMapper60);
        postToDtoMapper47.setMapperFacade(mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.UserController userController63 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl46, mapperFacade61);
        boolean boolean64 = submitResultRequest39.equals((java.lang.Object) mapperFacade61);
        com.vntu.marenko.ualearning.server.controller.TestController testController65 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade61);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList66 = testServiceImpl2.getAllTests();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertNotNull(submitResultRequestType21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + false + "'", boolean59, false);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        test3.setDescriptionTest("");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription7 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription7.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        testDescription7.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        boolean boolean12 = test3.equals((java.lang.Object) "Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper5 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig6 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl7 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository8 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository10 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper11 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository8, testRepository9, answerRepository10);
        ma.glasnost.orika.MapperFacade mapperFacade12 = null;
        submitResultRequestToDomainMapper11.setMapperFacade(mapperFacade12);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType14 = submitResultRequestToDomainMapper11.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper15 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper16 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean17 = createPostRequestToPostMapper16.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper18 = null;
        ma.glasnost.orika.MapperFacade mapperFacade19 = mapperConfig6.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl7, submitResultRequestToDomainMapper11, resultToDescriptionMapper15, createPostRequestToPostMapper16, postToDtoMapper18);
        postToDtoMapper5.setMapperFacade(mapperFacade19);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController21 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade19);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest22 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        int int23 = submitResultRequest22.getTestId();
        submitResultRequest22.setTestId((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto26 = resultController21.submitTest(submitResultRequest22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNotNull(mapperFacade19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper5 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean6 = createPostRequestToPostMapper5.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl8 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository9 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository11 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper12 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository9, testRepository10, answerRepository11);
        ma.glasnost.orika.MapperFacade mapperFacade13 = null;
        submitResultRequestToDomainMapper12.setMapperFacade(mapperFacade13);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType15 = submitResultRequestToDomainMapper12.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper16 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper17 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean18 = createPostRequestToPostMapper17.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper19 = null;
        ma.glasnost.orika.MapperFacade mapperFacade20 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl8, submitResultRequestToDomainMapper12, resultToDescriptionMapper16, createPostRequestToPostMapper17, postToDtoMapper19);
        createPostRequestToPostMapper5.setMapperFacade(mapperFacade20);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController22 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade20);
        com.vntu.marenko.ualearning.server.service.UserService userService23 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper24 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        postToDtoMapper24.setMapperFacade(mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController40 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController(userService23, mapperFacade38);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController41 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.dto.ResultDescription> resultDescriptionList43 = resultServiceImpl4.getResultsForUser("Tag(id=null, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0))");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(resultType15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(mapperFacade20);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        boolean boolean4 = tagDto0.equals((java.lang.Object) (-1L));
        tagDto0.setId((int) (short) 0);
        java.lang.String str7 = tagDto0.getName();
        tagDto0.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setMark((long) (short) 0);
        com.vntu.marenko.ualearning.server.dto.UserDto userDto6 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto6.setInstitution("");
        java.lang.String str9 = userDto6.getInstitution();
        userDto6.setAge((int) (byte) 10);
        userDto6.setLogin("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        resultDto0.setUser(userDto6);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest15 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str16 = userRequest15.getInstitution();
        userRequest15.setEmail("AnswerDto(id=0, text=null)");
        boolean boolean19 = resultDto0.equals((java.lang.Object) "AnswerDto(id=0, text=null)");
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getPassword();
        userRequest0.setLogin("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        userRequest0.setPassword("QuestionDto(id=10, text=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0), answers=null)");
        java.lang.String str8 = userRequest0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper14 = null;
        ma.glasnost.orika.Mapper[] mapperArray16 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray17 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray16;
        objMapperArray17[0] = objMapper14;
        // The following exception was thrown during execution in test generation
        try {
            createPostRequestToPostMapper10.setUsedMappers(objMapperArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(mapperArray16);
        org.junit.Assert.assertNotNull(objMapperArray17);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription6 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription6.setId((java.lang.Integer) 0);
        resultDescription6.setTestName("hi!");
        java.lang.String str11 = resultDescription6.getTestName();
        boolean boolean12 = resultDto0.equals((java.lang.Object) str11);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto13 = resultDto0.getTest();
        java.lang.String str14 = resultDto0.toString();
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(testDto13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ResultDto(id=100, user=null, test=null, submitted=false, answers=null, mark=0)" + "'", str14, "ResultDto(id=100, user=null, test=null, submitted=false, answers=null, mark=0)");
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setNameTest("hi!");
        testDescription0.setId((int) (short) 1);
        int int7 = testDescription0.getId();
        java.lang.String str8 = testDescription0.getNameTest();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto0 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        java.lang.String str1 = userDto0.toString();
        java.lang.String str2 = userDto0.getLogin();
        int int3 = userDto0.getRating();
        userDto0.setInstitution("UserDto(login=null, name=null, surname=null, age=0, institution=, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)" + "'", str1, "UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = user0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        com.vntu.marenko.ualearning.server.model.Result result13 = new com.vntu.marenko.ualearning.server.model.Result();
        result13.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user16 = new com.vntu.marenko.ualearning.server.model.User();
        user16.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test19 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean20 = user16.equals((java.lang.Object) test19);
        user16.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result13.setUser(user16);
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest24 = null;
        ma.glasnost.orika.MappingContext mappingContext25 = null;
        submitResultRequestToDomainMapper6.mapBtoA(result13, submitResultRequest24, mappingContext25);
        com.vntu.marenko.ualearning.server.model.User user27 = result13.getUser();
        user27.setRating(0L);
        com.vntu.marenko.ualearning.server.dto.PostDto postDto30 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str31 = postDto30.getLogin();
        java.lang.String str32 = postDto30.getLogin();
        boolean boolean33 = user27.equals((java.lang.Object) str32);
        java.lang.String str34 = user27.getEmail();
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str34, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = answerDto0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        answerDto0.setText("Tag(id=null, name=null)");
        int int15 = answerDto0.getId();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest16 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str17 = userRequest16.getName();
        java.lang.String str18 = userRequest16.getName();
        java.lang.String str19 = userRequest16.getName();
        boolean boolean20 = answerDto0.equals((java.lang.Object) userRequest16);
        java.lang.String str21 = userRequest16.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)" + "'", str21, "UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str1 = user0.getEmail();
        user0.setPassword("CreatePostRequest(text=User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0), username=null)");
        user0.setInstitution("QuestionDto(id=0, text=null, answers=null)");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        java.lang.Integer int1 = resultDescription0.getId();
        java.lang.String str2 = resultDescription0.getTestName();
        resultDescription0.setTestId((java.lang.Integer) 100);
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getId();
        java.lang.String str7 = resultDescription0.toString();
        java.lang.String str8 = resultDescription0.toString();
        java.lang.String str9 = resultDescription0.getTestName();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str7, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ResultDescription(id=null, testId=100, testName=null, mark=0)" + "'", str8, "ResultDescription(id=null, testId=100, testName=null, mark=0)");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList3 = resultDto0.getAnswers();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription6 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription6.setId((java.lang.Integer) 0);
        resultDescription6.setTestName("hi!");
        java.lang.String str11 = resultDescription6.getTestName();
        boolean boolean12 = resultDto0.equals((java.lang.Object) str11);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto13 = resultDto0.getTest();
        resultDto0.setSubmitted(false);
        org.junit.Assert.assertNull(answerDtoList3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(testDto13);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        result0.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test6 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean7 = user3.equals((java.lang.Object) test6);
        user3.setEmail("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        result0.setUser(user3);
        com.vntu.marenko.ualearning.server.model.Question question11 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int12 = question11.getId();
        java.lang.Integer int13 = question11.getId();
        com.vntu.marenko.ualearning.server.model.Answer answer14 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.model.Answer answer15 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer15.setCorrect(false);
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray18 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer14, answer15 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList19 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList19, answerArray18);
        question11.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList19);
        result0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList19);
        com.vntu.marenko.ualearning.server.model.Test test23 = result0.getTest();
        com.vntu.marenko.ualearning.server.model.User user24 = result0.getUser();
        user24.setInstitution("TestDescription(id=-1, nameTest=User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0))");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(answerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(test23);
        org.junit.Assert.assertNotNull(user24);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper0 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        postToDtoMapper0.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType16 = postToDtoMapper0.getAType();
        java.lang.Boolean boolean17 = postToDtoMapper0.favorsExtension();
        java.lang.Boolean boolean18 = postToDtoMapper0.favorsExtension();
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(postType16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer14 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig15 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl16 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.MapperFacade mapperFacade21 = null;
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade21);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType23 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper24 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper25 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean26 = createPostRequestToPostMapper25.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper27 = null;
        ma.glasnost.orika.MapperFacade mapperFacade28 = mapperConfig15.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl16, submitResultRequestToDomainMapper20, resultToDescriptionMapper24, createPostRequestToPostMapper25, postToDtoMapper27);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType36 = submitResultRequestToDomainMapper33.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper37 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig38 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl39 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository40 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository41 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository42 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper43 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository40, testRepository41, answerRepository42);
        ma.glasnost.orika.MapperFacade mapperFacade44 = null;
        submitResultRequestToDomainMapper43.setMapperFacade(mapperFacade44);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType46 = submitResultRequestToDomainMapper43.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper47 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper48 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean49 = createPostRequestToPostMapper48.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper50 = null;
        ma.glasnost.orika.MapperFacade mapperFacade51 = mapperConfig38.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl39, submitResultRequestToDomainMapper43, resultToDescriptionMapper47, createPostRequestToPostMapper48, postToDtoMapper50);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper52 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade53 = mapperConfig15.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl29, submitResultRequestToDomainMapper33, resultToDescriptionMapper37, createPostRequestToPostMapper48, postToDtoMapper52);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl54 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl54);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType56 = resultToDescriptionMapper55.getAType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType57 = resultToDescriptionMapper55.getAType();
        java.lang.Boolean boolean58 = resultToDescriptionMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper59 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType60 = createPostRequestToPostMapper59.getBType();
        com.vntu.marenko.ualearning.server.model.Post post61 = new com.vntu.marenko.ualearning.server.model.Post();
        post61.setText("");
        java.lang.String str64 = post61.toString();
        post61.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest67 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest67.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext70 = null;
        createPostRequestToPostMapper59.mapBtoA(post61, createPostRequest67, mappingContext70);
        com.vntu.marenko.ualearning.server.model.Post post72 = new com.vntu.marenko.ualearning.server.model.Post();
        post72.setText("");
        java.lang.String str75 = post72.toString();
        java.lang.Integer int76 = post72.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest77 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str78 = createPostRequest77.getUsername();
        java.lang.String str79 = createPostRequest77.toString();
        ma.glasnost.orika.MappingContext mappingContext80 = null;
        createPostRequestToPostMapper59.mapBtoA(post72, createPostRequest77, mappingContext80);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType82 = createPostRequestToPostMapper59.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper83 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig84 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl85 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository86 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository87 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository88 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper89 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository86, testRepository87, answerRepository88);
        ma.glasnost.orika.MapperFacade mapperFacade90 = null;
        submitResultRequestToDomainMapper89.setMapperFacade(mapperFacade90);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType92 = submitResultRequestToDomainMapper89.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper93 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper94 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean95 = createPostRequestToPostMapper94.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper96 = null;
        ma.glasnost.orika.MapperFacade mapperFacade97 = mapperConfig84.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl85, submitResultRequestToDomainMapper89, resultToDescriptionMapper93, createPostRequestToPostMapper94, postToDtoMapper96);
        postToDtoMapper83.setMapperFacade(mapperFacade97);
        ma.glasnost.orika.MapperFacade mapperFacade99 = mapperConfig0.createMapper(markComputer14, submitResultRequestToDomainMapper33, resultToDescriptionMapper55, createPostRequestToPostMapper59, postToDtoMapper83);
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertNotNull(resultType23);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
        org.junit.Assert.assertNotNull(mapperFacade28);
        org.junit.Assert.assertNotNull(resultType36);
        org.junit.Assert.assertNotNull(resultType46);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
        org.junit.Assert.assertNotNull(mapperFacade51);
        org.junit.Assert.assertNotNull(mapperFacade53);
        org.junit.Assert.assertNotNull(resultType56);
        org.junit.Assert.assertNotNull(resultType57);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(postType60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str64, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str75, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str79, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType82);
        org.junit.Assert.assertNotNull(resultType92);
        org.junit.Assert.assertEquals("'" + boolean95 + "' != '" + false + "'", boolean95, false);
        org.junit.Assert.assertNotNull(mapperFacade97);
        org.junit.Assert.assertNotNull(mapperFacade99);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        ma.glasnost.orika.MapperFacade mapperFacade0 = null;
        com.vntu.marenko.ualearning.server.service.PostService postService1 = null;
        com.vntu.marenko.ualearning.server.controller.PostController postController2 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade0, postService1);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto4 = postController2.getPost((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper1 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType2 = createPostRequestToPostMapper1.getBType();
        com.vntu.marenko.ualearning.server.model.Post post3 = new com.vntu.marenko.ualearning.server.model.Post();
        post3.setText("");
        java.lang.String str6 = post3.toString();
        post3.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest9 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest9.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext12 = null;
        createPostRequestToPostMapper1.mapBtoA(post3, createPostRequest9, mappingContext12);
        com.vntu.marenko.ualearning.server.model.Post post14 = new com.vntu.marenko.ualearning.server.model.Post();
        post14.setText("");
        java.lang.String str17 = post14.toString();
        java.lang.Integer int18 = post14.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest19 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str20 = createPostRequest19.getUsername();
        java.lang.String str21 = createPostRequest19.toString();
        ma.glasnost.orika.MappingContext mappingContext22 = null;
        createPostRequestToPostMapper1.mapBtoA(post14, createPostRequest19, mappingContext22);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper24 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType25 = createPostRequestToPostMapper24.getBType();
        com.vntu.marenko.ualearning.server.model.Post post26 = new com.vntu.marenko.ualearning.server.model.Post();
        post26.setText("");
        java.lang.String str29 = post26.toString();
        post26.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest32 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest32.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext35 = null;
        createPostRequestToPostMapper24.mapBtoA(post26, createPostRequest32, mappingContext35);
        ma.glasnost.orika.MappingContext mappingContext37 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest19, post26, mappingContext37);
        com.vntu.marenko.ualearning.server.model.User user39 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str40 = user39.getEmail();
        java.lang.String str41 = user39.getSurname();
        user39.setEmail("Answer(id=null, text=null, correct=false)");
        boolean boolean45 = user39.equals((java.lang.Object) (byte) -1);
        boolean boolean46 = createPostRequest19.equals((java.lang.Object) user39);
        java.lang.String str47 = user39.getLogin();
        org.junit.Assert.assertNotNull(postType2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str6, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str17, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str21, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str29, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository18 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto19 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl20 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean21 = answerDto19.equals((java.lang.Object) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl22 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository16, mapperFacade17, userRepository18, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl23 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade14, userRepository15, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl20);
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository25 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl26 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository24, tagRepository25);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper27 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig28 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl29 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository30 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository31 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository32 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper33 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository30, testRepository31, answerRepository32);
        ma.glasnost.orika.MapperFacade mapperFacade34 = null;
        submitResultRequestToDomainMapper33.setMapperFacade(mapperFacade34);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType36 = submitResultRequestToDomainMapper33.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper37 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper38 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean39 = createPostRequestToPostMapper38.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper40 = null;
        ma.glasnost.orika.MapperFacade mapperFacade41 = mapperConfig28.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl29, submitResultRequestToDomainMapper33, resultToDescriptionMapper37, createPostRequestToPostMapper38, postToDtoMapper40);
        postToDtoMapper27.setMapperFacade(mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.TestController testController43 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl26, mapperFacade41);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController44 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl23, mapperFacade41);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto46 = resultController44.getResult((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(resultType36);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(mapperFacade41);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.Mapper[] mapperArray10 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray11 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray10;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers(objMapperArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNotNull(mapperArray10);
        org.junit.Assert.assertNotNull(objMapperArray11);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setNameTest("hi!");
        testDescription0.setId((int) (short) 1);
        testDescription0.setId(100);
        java.lang.String str9 = testDescription0.getNameTest();
        java.lang.String str10 = testDescription0.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "TestDescription(id=100, nameTest=hi!)" + "'", str10, "TestDescription(id=100, nameTest=hi!)");
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest0.setTestId((int) (byte) 100);
        java.lang.String str5 = submitResultRequest0.getUserLogin();
        com.vntu.marenko.ualearning.server.model.Answer answer6 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str7 = answer6.getText();
        answer6.setId((java.lang.Integer) (-1));
        answer6.setId((java.lang.Integer) 0);
        java.lang.String str12 = answer6.toString();
        boolean boolean13 = submitResultRequest0.equals((java.lang.Object) str12);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "QuestionDto(id=10, text=null, answers=null)" + "'", str5, "QuestionDto(id=10, text=null, answers=null)");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Answer(id=0, text=null, correct=false)" + "'", str12, "Answer(id=0, text=null, correct=false)");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        java.lang.String str1 = user0.getEmail();
        java.lang.String str2 = user0.getSurname();
        user0.setSurname("Tag(id=null, name=null)");
        int int5 = user0.getAge();
        user0.setAge((int) (short) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository20 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl21 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository20);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.UserController userController38 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl21, mapperFacade36);
        com.vntu.marenko.ualearning.server.controller.TestController testController39 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList40 = testServiceImpl2.getAllTests();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer3 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl4 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, markComputer3);
        ma.glasnost.orika.MapperFacade mapperFacade5 = null;
        com.vntu.marenko.ualearning.server.controller.ResultController resultController6 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade5);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig7 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper25.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType27 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl28 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl28);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig30 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl31 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository32 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository34 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper35 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository32, testRepository33, answerRepository34);
        ma.glasnost.orika.MapperFacade mapperFacade36 = null;
        submitResultRequestToDomainMapper35.setMapperFacade(mapperFacade36);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType38 = submitResultRequestToDomainMapper35.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper39 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper40 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean41 = createPostRequestToPostMapper40.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper42 = null;
        ma.glasnost.orika.MapperFacade mapperFacade43 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl31, submitResultRequestToDomainMapper35, resultToDescriptionMapper39, createPostRequestToPostMapper40, postToDtoMapper42);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig53 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl54 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository55 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository56 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository57 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper58 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository55, testRepository56, answerRepository57);
        ma.glasnost.orika.MapperFacade mapperFacade59 = null;
        submitResultRequestToDomainMapper58.setMapperFacade(mapperFacade59);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType61 = submitResultRequestToDomainMapper58.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper62 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper63 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean64 = createPostRequestToPostMapper63.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper65 = null;
        ma.glasnost.orika.MapperFacade mapperFacade66 = mapperConfig53.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl54, submitResultRequestToDomainMapper58, resultToDescriptionMapper62, createPostRequestToPostMapper63, postToDtoMapper65);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper67 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade68 = mapperConfig30.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper63, postToDtoMapper67);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper69 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig70 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl71 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository72 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository73 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository74 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper75 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository72, testRepository73, answerRepository74);
        ma.glasnost.orika.MapperFacade mapperFacade76 = null;
        submitResultRequestToDomainMapper75.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType78 = submitResultRequestToDomainMapper75.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper79 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper80 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean81 = createPostRequestToPostMapper80.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper82 = null;
        ma.glasnost.orika.MapperFacade mapperFacade83 = mapperConfig70.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl71, submitResultRequestToDomainMapper75, resultToDescriptionMapper79, createPostRequestToPostMapper80, postToDtoMapper82);
        postToDtoMapper69.setMapperFacade(mapperFacade83);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType85 = postToDtoMapper69.getBType();
        java.lang.Boolean boolean86 = postToDtoMapper69.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade87 = mapperConfig7.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper63, postToDtoMapper69);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController88 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl4, mapperFacade87);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertNotNull(resultType27);
        org.junit.Assert.assertNotNull(resultType38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNotNull(mapperFacade43);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertNotNull(resultType61);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNotNull(mapperFacade66);
        org.junit.Assert.assertNotNull(mapperFacade68);
        org.junit.Assert.assertNotNull(resultType78);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
        org.junit.Assert.assertNotNull(mapperFacade83);
        org.junit.Assert.assertNotNull(postDtoType85);
        org.junit.Assert.assertEquals("'" + boolean86 + "' != '" + false + "'", boolean86, false);
        org.junit.Assert.assertNotNull(mapperFacade87);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        boolean boolean4 = user0.equals((java.lang.Object) test3);
        user0.setAge(0);
        java.lang.String str7 = user0.getInstitution();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean1 = createPostRequestToPostMapper0.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        createPostRequestToPostMapper0.setMapperFacade(mapperFacade15);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType21 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper22 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        postToDtoMapper22.setMapperFacade(mapperFacade36);
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade36);
        com.vntu.marenko.ualearning.server.repository.PostRepository postRepository39 = null;
        com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl postServiceImpl40 = new com.vntu.marenko.ualearning.server.service.impl.PostServiceImpl(postRepository39);
        com.vntu.marenko.ualearning.server.controller.PostController postController41 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade36, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        com.vntu.marenko.ualearning.server.controller.PostController postController42 = new com.vntu.marenko.ualearning.server.controller.PostController(mapperFacade15, (com.vntu.marenko.ualearning.server.service.PostService) postServiceImpl40);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.PostDto postDto44 = postController42.getPost((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean1 + "' != '" + false + "'", boolean1, false);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType21);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        com.vntu.marenko.ualearning.server.dto.TestDescription testDescription0 = new com.vntu.marenko.ualearning.server.dto.TestDescription();
        testDescription0.setNameTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        testDescription0.setId((-1));
        testDescription0.setNameTest("TagDto(id=0, name=null)");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto7 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto7.setId(100);
        resultDto7.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.UserDto userDto12 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto12.setRating((int) (byte) -1);
        userDto12.setLogin("LoginRequest(login=null, password=null)");
        resultDto7.setUser(userDto12);
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto18 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto18.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto21 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto22 = null;
        resultDto21.setTest(testDto22);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto24 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl25 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean26 = answerDto24.equals((java.lang.Object) markComputerImpl25);
        int int27 = answerDto24.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto28 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto28.setText("hi!");
        java.lang.String str31 = answerDto28.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto32 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl33 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean34 = answerDto32.equals((java.lang.Object) markComputerImpl33);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto35 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl36 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean37 = answerDto35.equals((java.lang.Object) markComputerImpl36);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray38 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto24, answerDto28, answerDto32, answerDto35 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList39 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList39, answerDtoArray38);
        resultDto21.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList39);
        questionDto18.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList39);
        com.vntu.marenko.ualearning.server.model.User user43 = new com.vntu.marenko.ualearning.server.model.User();
        user43.setEmail("hi!");
        user43.setSurname("hi!");
        user43.setInstitution("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        boolean boolean50 = questionDto18.equals((java.lang.Object) user43);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList51 = questionDto18.getAnswers();
        resultDto7.setAnswers(answerDtoList51);
        boolean boolean53 = testDescription0.equals((java.lang.Object) answerDtoList51);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(answerDtoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(answerDtoList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getTestId();
        long long7 = resultDescription0.getMark();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest22 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest22.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper18.mapAtoB(createPostRequest22, post25, mappingContext26);
        boolean boolean28 = resultDescription0.equals((java.lang.Object) createPostRequestToPostMapper18);
        com.vntu.marenko.ualearning.server.model.Post post29 = new com.vntu.marenko.ualearning.server.model.Post();
        post29.setText("");
        java.lang.String str32 = post29.toString();
        java.lang.Integer int33 = post29.getId();
        post29.setText("Answer(id=null, text=null, correct=false)");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper37 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType38 = createPostRequestToPostMapper37.getBType();
        com.vntu.marenko.ualearning.server.model.Post post39 = new com.vntu.marenko.ualearning.server.model.Post();
        post39.setText("");
        java.lang.String str42 = post39.toString();
        post39.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest45 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest45.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext48 = null;
        createPostRequestToPostMapper37.mapBtoA(post39, createPostRequest45, mappingContext48);
        com.vntu.marenko.ualearning.server.model.Post post50 = new com.vntu.marenko.ualearning.server.model.Post();
        post50.setText("");
        java.lang.String str53 = post50.toString();
        java.lang.Integer int54 = post50.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest55 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str56 = createPostRequest55.getUsername();
        java.lang.String str57 = createPostRequest55.toString();
        ma.glasnost.orika.MappingContext mappingContext58 = null;
        createPostRequestToPostMapper37.mapBtoA(post50, createPostRequest55, mappingContext58);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper60 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType61 = createPostRequestToPostMapper60.getBType();
        com.vntu.marenko.ualearning.server.model.Post post62 = new com.vntu.marenko.ualearning.server.model.Post();
        post62.setText("");
        java.lang.String str65 = post62.toString();
        post62.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest68 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest68.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext71 = null;
        createPostRequestToPostMapper60.mapBtoA(post62, createPostRequest68, mappingContext71);
        ma.glasnost.orika.MappingContext mappingContext73 = null;
        createPostRequestToPostMapper36.mapAtoB(createPostRequest55, post62, mappingContext73);
        ma.glasnost.orika.MappingContext mappingContext75 = null;
        createPostRequestToPostMapper18.mapBtoA(post29, createPostRequest55, mappingContext75);
        java.lang.Boolean boolean77 = createPostRequestToPostMapper18.favorsExtension();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType78 = createPostRequestToPostMapper18.getAType();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str32, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(postType38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str42, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str53, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str57, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str65, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + boolean77 + "' != '" + false + "'", boolean77, false);
        org.junit.Assert.assertNotNull(createPostRequestType78);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        int int1 = testDto0.getId();
        int int2 = testDto0.getId();
        testDto0.setCompletedCounter((java.lang.Integer) 0);
        java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList5 = testDto0.getTags();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto6 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str7 = testDto6.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto8 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str9 = tagDto8.toString();
        java.lang.String str10 = tagDto8.getName();
        com.vntu.marenko.ualearning.server.model.User user11 = new com.vntu.marenko.ualearning.server.model.User();
        long long12 = user11.getRating();
        user11.setLogin("hi!");
        boolean boolean15 = tagDto8.equals((java.lang.Object) user11);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto16 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str17 = tagDto16.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto18 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto18.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto21 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str22 = tagDto21.toString();
        java.lang.String str23 = tagDto21.getName();
        com.vntu.marenko.ualearning.server.model.Test test24 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int25 = test24.getId();
        java.lang.Integer int26 = test24.getId();
        test24.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList29 = test24.getTags();
        boolean boolean30 = tagDto21.equals((java.lang.Object) tagList29);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        boolean boolean35 = tagDto31.equals((java.lang.Object) (-1L));
        int int36 = tagDto31.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto37 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto37.setId(1);
        java.lang.String str40 = tagDto37.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto41 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str42 = tagDto41.toString();
        java.lang.String str43 = tagDto41.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto44 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str45 = tagDto44.toString();
        java.lang.String str46 = tagDto44.getName();
        com.vntu.marenko.ualearning.server.model.Test test47 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int48 = test47.getId();
        java.lang.Integer int49 = test47.getId();
        test47.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList52 = test47.getTags();
        boolean boolean53 = tagDto44.equals((java.lang.Object) tagList52);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray54 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto8, tagDto16, tagDto18, tagDto21, tagDto31, tagDto37, tagDto41, tagDto44 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList55 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList55, tagDtoArray54);
        testDto6.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList55);
        testDto6.setCompletedCounter((java.lang.Integer) 100);
        java.lang.String str60 = testDto6.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto61 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto61.setId(1);
        int int64 = tagDto61.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto65 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto65.setId(1);
        java.lang.String str68 = tagDto65.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto69 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str70 = tagDto69.toString();
        java.lang.String str71 = tagDto69.getName();
        com.vntu.marenko.ualearning.server.model.Test test72 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int73 = test72.getId();
        java.lang.Integer int74 = test72.getId();
        test72.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList77 = test72.getTags();
        boolean boolean78 = tagDto69.equals((java.lang.Object) tagList77);
        tagDto69.setName("User(login=null, password=null, name=null, surname=, age=0, institution=null, email=null, rating=0)");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto81 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str82 = tagDto81.toString();
        java.lang.String str83 = tagDto81.getName();
        java.lang.String str84 = tagDto81.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto85 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str86 = tagDto85.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray87 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto61, tagDto65, tagDto69, tagDto81, tagDto85 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList88 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList88, tagDtoArray87);
        testDto6.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList88);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList88);
        java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList92 = testDto0.getTags();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(tagDtoList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str7, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "TagDto(id=0, name=null)" + "'", str9, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "TagDto(id=0, name=null)" + "'", str17, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "TagDto(id=0, name=null)" + "'", str22, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(tagList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "TagDto(id=0, name=null)" + "'", str42, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "TagDto(id=0, name=null)" + "'", str45, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(tagList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(tagDtoArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])" + "'", str60, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=100, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "TagDto(id=0, name=null)" + "'", str70, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(tagList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "TagDto(id=0, name=null)" + "'", str82, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "TagDto(id=0, name=null)" + "'", str86, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNotNull(tagDtoArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(tagDtoList92);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setEmail("hi!");
        user0.setSurname("hi!");
        user0.setRating((long) '#');
        user0.setEmail("UserRequest(login=null, password=null, name=null, surname=null, age=0, institution=null, email=null)");
        java.lang.String str9 = user0.getSurname();
        java.lang.String str10 = user0.getLogin();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        com.vntu.marenko.ualearning.server.dto.ResultDescription resultDescription0 = new com.vntu.marenko.ualearning.server.dto.ResultDescription();
        resultDescription0.setId((java.lang.Integer) 0);
        resultDescription0.setTestName("hi!");
        java.lang.String str5 = resultDescription0.getTestName();
        java.lang.Integer int6 = resultDescription0.getTestId();
        long long7 = resultDescription0.getMark();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest22 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest22.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post25 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext26 = null;
        createPostRequestToPostMapper18.mapAtoB(createPostRequest22, post25, mappingContext26);
        boolean boolean28 = resultDescription0.equals((java.lang.Object) createPostRequestToPostMapper18);
        com.vntu.marenko.ualearning.server.model.Post post29 = new com.vntu.marenko.ualearning.server.model.Post();
        post29.setText("");
        java.lang.String str32 = post29.toString();
        java.lang.Integer int33 = post29.getId();
        post29.setText("Answer(id=null, text=null, correct=false)");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper36 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper37 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType38 = createPostRequestToPostMapper37.getBType();
        com.vntu.marenko.ualearning.server.model.Post post39 = new com.vntu.marenko.ualearning.server.model.Post();
        post39.setText("");
        java.lang.String str42 = post39.toString();
        post39.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest45 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest45.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext48 = null;
        createPostRequestToPostMapper37.mapBtoA(post39, createPostRequest45, mappingContext48);
        com.vntu.marenko.ualearning.server.model.Post post50 = new com.vntu.marenko.ualearning.server.model.Post();
        post50.setText("");
        java.lang.String str53 = post50.toString();
        java.lang.Integer int54 = post50.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest55 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str56 = createPostRequest55.getUsername();
        java.lang.String str57 = createPostRequest55.toString();
        ma.glasnost.orika.MappingContext mappingContext58 = null;
        createPostRequestToPostMapper37.mapBtoA(post50, createPostRequest55, mappingContext58);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper60 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType61 = createPostRequestToPostMapper60.getBType();
        com.vntu.marenko.ualearning.server.model.Post post62 = new com.vntu.marenko.ualearning.server.model.Post();
        post62.setText("");
        java.lang.String str65 = post62.toString();
        post62.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest68 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest68.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext71 = null;
        createPostRequestToPostMapper60.mapBtoA(post62, createPostRequest68, mappingContext71);
        ma.glasnost.orika.MappingContext mappingContext73 = null;
        createPostRequestToPostMapper36.mapAtoB(createPostRequest55, post62, mappingContext73);
        ma.glasnost.orika.MappingContext mappingContext75 = null;
        createPostRequestToPostMapper18.mapBtoA(post29, createPostRequest55, mappingContext75);
        java.lang.String str77 = post29.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str32, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(postType38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str42, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str53, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str57, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertNotNull(postType61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str65, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Post(id=null, text=Answer(id=null, text=null, correct=false), timestamp=null, user=null, likes=null)" + "'", str77, "Post(id=null, text=Answer(id=null, text=null, correct=false), timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        java.lang.Integer int2 = test0.getId();
        com.vntu.marenko.ualearning.server.model.Test test3 = new com.vntu.marenko.ualearning.server.model.Test();
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray4 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList5 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList5, tagArray4);
        test3.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList5);
        com.vntu.marenko.ualearning.server.model.Tag[] tagArray8 = new com.vntu.marenko.ualearning.server.model.Tag[] {};
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag> tagList9 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Tag>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Tag>) tagList9, tagArray8);
        test3.setTags((java.util.List<com.vntu.marenko.ualearning.server.model.Tag>) tagList9);
        java.lang.String str12 = test3.getNameTest();
        com.vntu.marenko.ualearning.server.model.Test test13 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int14 = test13.getId();
        java.lang.Integer int15 = test13.getId();
        test13.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int18 = test13.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question19 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int20 = question19.getId();
        java.lang.Integer int21 = question19.getId();
        question19.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.model.Question question24 = new com.vntu.marenko.ualearning.server.model.Question();
        question24.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.Integer int27 = question24.getId();
        com.vntu.marenko.ualearning.server.model.Question question28 = new com.vntu.marenko.ualearning.server.model.Question();
        question28.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        java.lang.String str31 = question28.getText();
        com.vntu.marenko.ualearning.server.model.Question question32 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int33 = question32.getId();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList34 = null;
        question32.setAnswers(answerList34);
        com.vntu.marenko.ualearning.server.model.Test test36 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int37 = test36.getId();
        java.lang.Integer int38 = test36.getId();
        test36.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int41 = test36.getCompletedCounter();
        java.lang.Integer int42 = test36.getCompletedCounter();
        java.lang.Integer int43 = test36.getCompletedCounter();
        com.vntu.marenko.ualearning.server.model.Question question44 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str45 = question44.getText();
        java.lang.Integer int46 = question44.getId();
        boolean boolean47 = test36.equals((java.lang.Object) question44);
        java.lang.String str48 = question44.toString();
        com.vntu.marenko.ualearning.server.model.Question question49 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int50 = question49.getId();
        java.lang.Integer int51 = question49.getId();
        com.vntu.marenko.ualearning.server.model.Question question52 = new com.vntu.marenko.ualearning.server.model.Question();
        question52.setText("User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        com.vntu.marenko.ualearning.server.model.Question question55 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.String str56 = question55.getText();
        java.lang.Integer int57 = question55.getId();
        com.vntu.marenko.ualearning.server.model.Question[] questionArray58 = new com.vntu.marenko.ualearning.server.model.Question[] { question19, question24, question28, question32, question44, question49, question52, question55 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Question> questionList59 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Question>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Question>) questionList59, questionArray58);
        test13.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList59);
        test3.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList59);
        test0.setQuestions((java.util.List<com.vntu.marenko.ualearning.server.model.Question>) questionList59);
        java.lang.String str64 = test0.getDescriptionTest();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(tagArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(tagArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)" + "'", str31, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=null, email=hi!, rating=0)");
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Question(id=null, text=null, answers=null)" + "'", str48, "Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(questionArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        java.lang.String str3 = tagDto0.getName();
        tagDto0.setName("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        tagDto0.setId(0);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest0 = new com.vntu.marenko.ualearning.server.dto.SubmitResultRequest();
        submitResultRequest0.setUserLogin("QuestionDto(id=10, text=null, answers=null)");
        submitResultRequest0.setTestId((int) (byte) 100);
        boolean boolean6 = submitResultRequest0.equals((java.lang.Object) "CreatePostRequest(text=ResultDescription(id=0, testId=null, testName=null, mark=1), username=ResultDescription(id=0, testId=null, testName=null, mark=1))");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository1 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl2 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository0, tagRepository1);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.controller.TestController testController19 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade17);
        ma.glasnost.orika.MapperFacade mapperFacade20 = null;
        com.vntu.marenko.ualearning.server.controller.TestController testController21 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade20);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig22 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl23 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository24 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository26 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper27 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository24, testRepository25, answerRepository26);
        ma.glasnost.orika.MapperFacade mapperFacade28 = null;
        submitResultRequestToDomainMapper27.setMapperFacade(mapperFacade28);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType30 = submitResultRequestToDomainMapper27.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper31 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper32 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean33 = createPostRequestToPostMapper32.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper34 = null;
        ma.glasnost.orika.MapperFacade mapperFacade35 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl23, submitResultRequestToDomainMapper27, resultToDescriptionMapper31, createPostRequestToPostMapper32, postToDtoMapper34);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl36 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository37 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository39 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper40 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository37, testRepository38, answerRepository39);
        ma.glasnost.orika.MapperFacade mapperFacade41 = null;
        submitResultRequestToDomainMapper40.setMapperFacade(mapperFacade41);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType43 = submitResultRequestToDomainMapper40.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper44 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig45 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl46 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository47 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository49 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper50 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository47, testRepository48, answerRepository49);
        ma.glasnost.orika.MapperFacade mapperFacade51 = null;
        submitResultRequestToDomainMapper50.setMapperFacade(mapperFacade51);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType53 = submitResultRequestToDomainMapper50.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper54 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper55 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean56 = createPostRequestToPostMapper55.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = null;
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig45.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl46, submitResultRequestToDomainMapper50, resultToDescriptionMapper54, createPostRequestToPostMapper55, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper59 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade60 = mapperConfig22.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl36, submitResultRequestToDomainMapper40, resultToDescriptionMapper44, createPostRequestToPostMapper55, postToDtoMapper59);
        com.vntu.marenko.ualearning.server.controller.TestController testController61 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl2, mapperFacade60);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.vntu.marenko.ualearning.server.model.Test> testList63 = testServiceImpl2.getTestsWithTag((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType30);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNotNull(mapperFacade35);
        org.junit.Assert.assertNotNull(resultType43);
        org.junit.Assert.assertNotNull(resultType53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(mapperFacade60);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object> objMapper6 = null;
        ma.glasnost.orika.Mapper[] mapperArray8 = new ma.glasnost.orika.Mapper[1];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray9 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray8;
        objMapperArray9[0] = objMapper6;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers(objMapperArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mapperArray8);
        org.junit.Assert.assertNotNull(objMapperArray9);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        java.lang.String str2 = userRequest0.getPassword();
        java.lang.String str3 = userRequest0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository1 = null;
        ma.glasnost.orika.MapperFacade mapperFacade2 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer4 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl5 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository1, mapperFacade2, userRepository3, markComputer4);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper6 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean7 = createPostRequestToPostMapper6.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig8 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl9 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository10 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository11 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository12 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper13 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository10, testRepository11, answerRepository12);
        ma.glasnost.orika.MapperFacade mapperFacade14 = null;
        submitResultRequestToDomainMapper13.setMapperFacade(mapperFacade14);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType16 = submitResultRequestToDomainMapper13.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper17 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper18 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean19 = createPostRequestToPostMapper18.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper20 = null;
        ma.glasnost.orika.MapperFacade mapperFacade21 = mapperConfig8.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl9, submitResultRequestToDomainMapper13, resultToDescriptionMapper17, createPostRequestToPostMapper18, postToDtoMapper20);
        createPostRequestToPostMapper6.setMapperFacade(mapperFacade21);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController23 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl5, mapperFacade21);
        boolean boolean24 = answer0.equals((java.lang.Object) resultServiceImpl5);
        // The following exception was thrown during execution in test generation
        try {
            com.vntu.marenko.ualearning.server.dto.ResultDto resultDto26 = resultServiceImpl5.getResult((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNotNull(resultType16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(mapperFacade21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl userServiceImpl1 = new com.vntu.marenko.ualearning.server.service.impl.UserServiceImpl(userRepository0);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper3 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig4 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl5 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository7 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository8 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper9 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository6, testRepository7, answerRepository8);
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper9.setMapperFacade(mapperFacade10);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType12 = submitResultRequestToDomainMapper9.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper13 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper14 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean15 = createPostRequestToPostMapper14.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper16 = null;
        ma.glasnost.orika.MapperFacade mapperFacade17 = mapperConfig4.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl5, submitResultRequestToDomainMapper9, resultToDescriptionMapper13, createPostRequestToPostMapper14, postToDtoMapper16);
        postToDtoMapper3.setMapperFacade(mapperFacade17);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig20 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository23 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository24 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper25 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository22, testRepository23, answerRepository24);
        ma.glasnost.orika.MapperFacade mapperFacade26 = null;
        submitResultRequestToDomainMapper25.setMapperFacade(mapperFacade26);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType28 = submitResultRequestToDomainMapper25.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper29 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper30 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean31 = createPostRequestToPostMapper30.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper32 = null;
        ma.glasnost.orika.MapperFacade mapperFacade33 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21, submitResultRequestToDomainMapper25, resultToDescriptionMapper29, createPostRequestToPostMapper30, postToDtoMapper32);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl34 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository35 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository36 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository37 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper38 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository35, testRepository36, answerRepository37);
        ma.glasnost.orika.MapperFacade mapperFacade39 = null;
        submitResultRequestToDomainMapper38.setMapperFacade(mapperFacade39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType41 = submitResultRequestToDomainMapper38.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper42 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig43 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl44 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository45 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository46 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository47 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper48 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository45, testRepository46, answerRepository47);
        ma.glasnost.orika.MapperFacade mapperFacade49 = null;
        submitResultRequestToDomainMapper48.setMapperFacade(mapperFacade49);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType51 = submitResultRequestToDomainMapper48.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper52 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper53 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean54 = createPostRequestToPostMapper53.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper55 = null;
        ma.glasnost.orika.MapperFacade mapperFacade56 = mapperConfig43.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl44, submitResultRequestToDomainMapper48, resultToDescriptionMapper52, createPostRequestToPostMapper53, postToDtoMapper55);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper57 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade58 = mapperConfig20.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34, submitResultRequestToDomainMapper38, resultToDescriptionMapper42, createPostRequestToPostMapper53, postToDtoMapper57);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl59 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository2, mapperFacade17, userRepository19, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl34);
        com.vntu.marenko.ualearning.server.controller.UserController userController60 = new com.vntu.marenko.ualearning.server.controller.UserController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade17);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper61 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig62 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl63 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository64 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository66 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper67 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository64, testRepository65, answerRepository66);
        ma.glasnost.orika.MapperFacade mapperFacade68 = null;
        submitResultRequestToDomainMapper67.setMapperFacade(mapperFacade68);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType70 = submitResultRequestToDomainMapper67.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper71 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper72 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean73 = createPostRequestToPostMapper72.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper74 = null;
        ma.glasnost.orika.MapperFacade mapperFacade75 = mapperConfig62.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl63, submitResultRequestToDomainMapper67, resultToDescriptionMapper71, createPostRequestToPostMapper72, postToDtoMapper74);
        postToDtoMapper61.setMapperFacade(mapperFacade75);
        com.vntu.marenko.ualearning.server.controller.AuthorisationController authorisationController77 = new com.vntu.marenko.ualearning.server.controller.AuthorisationController((com.vntu.marenko.ualearning.server.service.UserService) userServiceImpl1, mapperFacade75);
        com.vntu.marenko.ualearning.server.dto.LoginRequest loginRequest78 = new com.vntu.marenko.ualearning.server.dto.LoginRequest();
        java.lang.String str79 = loginRequest78.toString();
        java.lang.String str80 = loginRequest78.toString();
        loginRequest78.setLogin("Result(id=null, user=null, test=null, submitted=false, answers=null)");
        java.lang.String str83 = loginRequest78.getLogin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str84 = authorisationController77.login(loginRequest78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(mapperFacade17);
        org.junit.Assert.assertNotNull(resultType28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(mapperFacade33);
        org.junit.Assert.assertNotNull(resultType41);
        org.junit.Assert.assertNotNull(resultType51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + false + "'", boolean54, false);
        org.junit.Assert.assertNotNull(mapperFacade56);
        org.junit.Assert.assertNotNull(mapperFacade58);
        org.junit.Assert.assertNotNull(resultType70);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
        org.junit.Assert.assertNotNull(mapperFacade75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str79, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "LoginRequest(login=null, password=null)" + "'", str80, "LoginRequest(login=null, password=null)");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Result(id=null, user=null, test=null, submitted=false, answers=null)" + "'", str83, "Result(id=null, user=null, test=null, submitted=false, answers=null)");
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        userRequest0.setPassword("Question(id=null, text=null, answers=null)");
        int int5 = userRequest0.getAge();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        com.vntu.marenko.ualearning.server.model.Post post0 = new com.vntu.marenko.ualearning.server.model.Post();
        post0.setText("");
        java.util.Date date3 = post0.getTimestamp();
        org.junit.Assert.assertNull(date3);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setSurname("");
        java.lang.String str3 = user0.getEmail();
        long long4 = user0.getRating();
        user0.setRating((long) (short) 100);
        java.lang.String str7 = user0.getEmail();
        user0.setName("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        java.lang.String str10 = user0.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        com.vntu.marenko.ualearning.server.dto.TestDto testDto0 = new com.vntu.marenko.ualearning.server.dto.TestDto();
        java.lang.String str1 = testDto0.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto2 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str3 = tagDto2.toString();
        java.lang.String str4 = tagDto2.getName();
        com.vntu.marenko.ualearning.server.model.User user5 = new com.vntu.marenko.ualearning.server.model.User();
        long long6 = user5.getRating();
        user5.setLogin("hi!");
        boolean boolean9 = tagDto2.equals((java.lang.Object) user5);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto10 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str11 = tagDto10.toString();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto12 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto12.setId(1);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto15 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str16 = tagDto15.toString();
        java.lang.String str17 = tagDto15.getName();
        com.vntu.marenko.ualearning.server.model.Test test18 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int19 = test18.getId();
        java.lang.Integer int20 = test18.getId();
        test18.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList23 = test18.getTags();
        boolean boolean24 = tagDto15.equals((java.lang.Object) tagList23);
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto25 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto25.setId(1);
        boolean boolean29 = tagDto25.equals((java.lang.Object) (-1L));
        int int30 = tagDto25.getId();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto31 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto31.setId(1);
        java.lang.String str34 = tagDto31.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto35 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str36 = tagDto35.toString();
        java.lang.String str37 = tagDto35.getName();
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto38 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str39 = tagDto38.toString();
        java.lang.String str40 = tagDto38.getName();
        com.vntu.marenko.ualearning.server.model.Test test41 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int42 = test41.getId();
        java.lang.Integer int43 = test41.getId();
        test41.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.util.List<com.vntu.marenko.ualearning.server.model.Tag> tagList46 = test41.getTags();
        boolean boolean47 = tagDto38.equals((java.lang.Object) tagList46);
        com.vntu.marenko.ualearning.server.dto.TagDto[] tagDtoArray48 = new com.vntu.marenko.ualearning.server.dto.TagDto[] { tagDto2, tagDto10, tagDto12, tagDto15, tagDto25, tagDto31, tagDto35, tagDto38 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto> tagDtoList49 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.TagDto>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49, tagDtoArray48);
        testDto0.setTags((java.util.List<com.vntu.marenko.ualearning.server.dto.TagDto>) tagDtoList49);
        testDto0.setNameTest("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        java.lang.Integer int54 = testDto0.getCompletedCounter();
        testDto0.setDescriptionTest("CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
        java.lang.String str57 = testDto0.getDescriptionTest();
        testDto0.setDescriptionTest("TestDescription(id=-1, nameTest=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null))");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)" + "'", str1, "TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "TagDto(id=0, name=null)" + "'", str3, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "TagDto(id=0, name=null)" + "'", str11, "TagDto(id=0, name=null)");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "TagDto(id=0, name=null)" + "'", str16, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(tagList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "TagDto(id=0, name=null)" + "'", str36, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "TagDto(id=0, name=null)" + "'", str39, "TagDto(id=0, name=null)");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(tagList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(tagDtoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)" + "'", str57, "CreatePostRequest(text=Post(id=null, text=, timestamp=null, user=null, likes=null), username=null)");
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean2 = answerDto0.equals((java.lang.Object) markComputerImpl1);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType9 = submitResultRequestToDomainMapper6.getAType();
        ma.glasnost.orika.MapperFacade mapperFacade10 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade10);
        boolean boolean12 = answerDto0.equals((java.lang.Object) submitResultRequestToDomainMapper6);
        answerDto0.setText("Tag(id=null, name=null)");
        answerDto0.setId((int) (short) -1);
        java.lang.String str17 = answerDto0.toString();
        java.lang.String str18 = answerDto0.getText();
        answerDto0.setId(10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(submitResultRequestType9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "AnswerDto(id=-1, text=Tag(id=null, name=null))" + "'", str17, "AnswerDto(id=-1, text=Tag(id=null, name=null))");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Tag(id=null, name=null)" + "'", str18, "Tag(id=null, name=null)");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto1 = null;
        resultDto0.setTest(testDto1);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        int int6 = answerDto3.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto7 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto7.setText("hi!");
        java.lang.String str10 = answerDto7.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto11 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl12 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean13 = answerDto11.equals((java.lang.Object) markComputerImpl12);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto14 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl15 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean16 = answerDto14.equals((java.lang.Object) markComputerImpl15);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto3, answerDto7, answerDto11, answerDto14 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList18 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18, answerDtoArray17);
        resultDto0.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList18);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto21 = resultDto0.getTest();
        int int22 = resultDto0.getId();
        resultDto0.setSubmitted(true);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto25 = resultDto0.getTest();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList26 = resultDto0.getAnswers();
        resultDto0.setId((int) '4');
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(answerDtoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(testDto21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(testDto25);
        org.junit.Assert.assertNotNull(answerDtoList26);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        com.vntu.marenko.ualearning.server.dto.PostDto postDto0 = new com.vntu.marenko.ualearning.server.dto.PostDto();
        java.lang.String str1 = postDto0.getLogin();
        postDto0.setTimestamp("");
        postDto0.setId((int) (byte) 0);
        postDto0.setLogin("UserDto(login=null, name=null, surname=null, age=0, institution=null, email=null, rating=0)");
        int int8 = postDto0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        test0.setId((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int1);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getName();
        java.lang.String str2 = userRequest0.getName();
        java.lang.String str3 = userRequest0.getPassword();
        userRequest0.setLogin("TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        java.lang.String str6 = userRequest0.getLogin();
        userRequest0.setName("ResultDescription(id=0, testId=null, testName=null, mark=1)");
        com.vntu.marenko.ualearning.server.dto.UserDto userDto9 = new com.vntu.marenko.ualearning.server.dto.UserDto();
        userDto9.setInstitution("");
        java.lang.String str12 = userDto9.getInstitution();
        boolean boolean14 = userDto9.equals((java.lang.Object) (byte) -1);
        userDto9.setSurname("Result(id=100, user=null, test=null, submitted=false, answers=null)");
        boolean boolean17 = userRequest0.equals((java.lang.Object) "Result(id=100, user=null, test=null, submitted=false, answers=null)");
        userRequest0.setPassword("Test(id=0, nameTest=null, descriptionTest=, completedCounter=1, questions=null, tags=null)");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))" + "'", str6, "TestDescription(id=-1, nameTest=TagDto(id=0, name=null))");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        java.lang.String str1 = tagDto0.getName();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig2 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl3 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository6 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper7 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository4, testRepository5, answerRepository6);
        ma.glasnost.orika.MapperFacade mapperFacade8 = null;
        submitResultRequestToDomainMapper7.setMapperFacade(mapperFacade8);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType10 = submitResultRequestToDomainMapper7.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper11 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper12 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean13 = createPostRequestToPostMapper12.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl3, submitResultRequestToDomainMapper7, resultToDescriptionMapper11, createPostRequestToPostMapper12, postToDtoMapper14);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl16 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository17 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository18 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository19 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper20 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository17, testRepository18, answerRepository19);
        ma.glasnost.orika.MapperFacade mapperFacade21 = null;
        submitResultRequestToDomainMapper20.setMapperFacade(mapperFacade21);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType23 = submitResultRequestToDomainMapper20.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper24 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig25 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl26 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository28 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository29 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper30 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository27, testRepository28, answerRepository29);
        ma.glasnost.orika.MapperFacade mapperFacade31 = null;
        submitResultRequestToDomainMapper30.setMapperFacade(mapperFacade31);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType33 = submitResultRequestToDomainMapper30.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper34 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper35 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean36 = createPostRequestToPostMapper35.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper37 = null;
        ma.glasnost.orika.MapperFacade mapperFacade38 = mapperConfig25.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl26, submitResultRequestToDomainMapper30, resultToDescriptionMapper34, createPostRequestToPostMapper35, postToDtoMapper37);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper39 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade40 = mapperConfig2.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl16, submitResultRequestToDomainMapper20, resultToDescriptionMapper24, createPostRequestToPostMapper35, postToDtoMapper39);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType41 = postToDtoMapper39.getAType();
        com.vntu.marenko.ualearning.server.dto.PostDto postDto42 = null;
        com.vntu.marenko.ualearning.server.model.Post post43 = new com.vntu.marenko.ualearning.server.model.Post();
        post43.setText("");
        java.lang.String str46 = post43.toString();
        post43.setUser("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        java.lang.String str49 = post43.getUser();
        java.lang.Integer int50 = post43.getId();
        java.util.Date date51 = null;
        post43.setTimestamp(date51);
        ma.glasnost.orika.MappingContext mappingContext53 = null;
        postToDtoMapper39.mapBtoA(postDto42, post43, mappingContext53);
        boolean boolean55 = tagDto0.equals((java.lang.Object) postDto42);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(resultType10);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(mapperFacade15);
        org.junit.Assert.assertNotNull(resultType23);
        org.junit.Assert.assertNotNull(resultType33);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(mapperFacade38);
        org.junit.Assert.assertNotNull(mapperFacade40);
        org.junit.Assert.assertNotNull(postType41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str46, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str49, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        com.vntu.marenko.ualearning.server.model.Result result0 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int1 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test2 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int3 = test2.getId();
        java.lang.Integer int4 = test2.getId();
        result0.setTest(test2);
        java.lang.Integer int6 = result0.getId();
        com.vntu.marenko.ualearning.server.model.Test test7 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int8 = test7.getId();
        java.lang.Integer int9 = test7.getId();
        test7.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int12 = test7.getCompletedCounter();
        java.lang.Integer int13 = test7.getCompletedCounter();
        result0.setTest(test7);
        com.vntu.marenko.ualearning.server.model.User user15 = result0.getUser();
        com.vntu.marenko.ualearning.server.model.Test test16 = result0.getTest();
        com.vntu.marenko.ualearning.server.model.Test test17 = result0.getTest();
        java.lang.Integer int18 = result0.getId();
        java.lang.Integer int19 = result0.getId();
        org.junit.Assert.assertNull(int1);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(user15);
        org.junit.Assert.assertNotNull(test16);
        org.junit.Assert.assertNotNull(test17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig1 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl2 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository4 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository5 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper6 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository3, testRepository4, answerRepository5);
        ma.glasnost.orika.MapperFacade mapperFacade7 = null;
        submitResultRequestToDomainMapper6.setMapperFacade(mapperFacade7);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType9 = submitResultRequestToDomainMapper6.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper10 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper11 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean12 = createPostRequestToPostMapper11.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper13 = null;
        ma.glasnost.orika.MapperFacade mapperFacade14 = mapperConfig1.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper6, resultToDescriptionMapper10, createPostRequestToPostMapper11, postToDtoMapper13);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository15 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository16 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository17 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper18 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository15, testRepository16, answerRepository17);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType19 = submitResultRequestToDomainMapper18.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType20 = submitResultRequestToDomainMapper18.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl21 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper22 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl21);
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig23 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl24 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository25 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository26 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository27 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper28 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository25, testRepository26, answerRepository27);
        ma.glasnost.orika.MapperFacade mapperFacade29 = null;
        submitResultRequestToDomainMapper28.setMapperFacade(mapperFacade29);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType31 = submitResultRequestToDomainMapper28.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper32 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper33 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean34 = createPostRequestToPostMapper33.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper35 = null;
        ma.glasnost.orika.MapperFacade mapperFacade36 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl24, submitResultRequestToDomainMapper28, resultToDescriptionMapper32, createPostRequestToPostMapper33, postToDtoMapper35);
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl37 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository38 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository39 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository40 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper41 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository38, testRepository39, answerRepository40);
        ma.glasnost.orika.MapperFacade mapperFacade42 = null;
        submitResultRequestToDomainMapper41.setMapperFacade(mapperFacade42);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType44 = submitResultRequestToDomainMapper41.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper45 = null;
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig46 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository48 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository49 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository50 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper51 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository48, testRepository49, answerRepository50);
        ma.glasnost.orika.MapperFacade mapperFacade52 = null;
        submitResultRequestToDomainMapper51.setMapperFacade(mapperFacade52);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType54 = submitResultRequestToDomainMapper51.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper55 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper56 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean57 = createPostRequestToPostMapper56.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper58 = null;
        ma.glasnost.orika.MapperFacade mapperFacade59 = mapperConfig46.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl47, submitResultRequestToDomainMapper51, resultToDescriptionMapper55, createPostRequestToPostMapper56, postToDtoMapper58);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper60 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        ma.glasnost.orika.MapperFacade mapperFacade61 = mapperConfig23.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl37, submitResultRequestToDomainMapper41, resultToDescriptionMapper45, createPostRequestToPostMapper56, postToDtoMapper60);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper62 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig63 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl64 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository65 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository66 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository67 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper68 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository65, testRepository66, answerRepository67);
        ma.glasnost.orika.MapperFacade mapperFacade69 = null;
        submitResultRequestToDomainMapper68.setMapperFacade(mapperFacade69);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType71 = submitResultRequestToDomainMapper68.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper72 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper73 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean74 = createPostRequestToPostMapper73.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper75 = null;
        ma.glasnost.orika.MapperFacade mapperFacade76 = mapperConfig63.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl64, submitResultRequestToDomainMapper68, resultToDescriptionMapper72, createPostRequestToPostMapper73, postToDtoMapper75);
        postToDtoMapper62.setMapperFacade(mapperFacade76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType78 = postToDtoMapper62.getBType();
        java.lang.Boolean boolean79 = postToDtoMapper62.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade80 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl2, submitResultRequestToDomainMapper18, resultToDescriptionMapper22, createPostRequestToPostMapper56, postToDtoMapper62);
        com.vntu.marenko.ualearning.server.model.Result result81 = new com.vntu.marenko.ualearning.server.model.Result();
        result81.setId((java.lang.Integer) 100);
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest84 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str85 = userRequest84.getName();
        java.lang.String str86 = userRequest84.getName();
        boolean boolean87 = result81.equals((java.lang.Object) str86);
        // The following exception was thrown during execution in test generation
        try {
            long long88 = markComputerImpl2.compute(result81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resultType9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(mapperFacade14);
        org.junit.Assert.assertNotNull(resultType19);
        org.junit.Assert.assertNotNull(resultType20);
        org.junit.Assert.assertNotNull(resultType31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(mapperFacade36);
        org.junit.Assert.assertNotNull(resultType44);
        org.junit.Assert.assertNotNull(resultType54);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + false + "'", boolean57, false);
        org.junit.Assert.assertNotNull(mapperFacade59);
        org.junit.Assert.assertNotNull(mapperFacade61);
        org.junit.Assert.assertNotNull(resultType71);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNotNull(mapperFacade76);
        org.junit.Assert.assertNotNull(postDtoType78);
        org.junit.Assert.assertEquals("'" + boolean79 + "' != '" + false + "'", boolean79, false);
        org.junit.Assert.assertNotNull(mapperFacade80);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto0 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto0.setId((int) (byte) -1);
        answerDto0.setId((int) (short) 10);
        java.lang.String str5 = answerDto0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "AnswerDto(id=10, text=null)" + "'", str5, "AnswerDto(id=10, text=null)");
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig0 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl1 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository3 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository4 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper5 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository2, testRepository3, answerRepository4);
        ma.glasnost.orika.MapperFacade mapperFacade6 = null;
        submitResultRequestToDomainMapper5.setMapperFacade(mapperFacade6);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType8 = submitResultRequestToDomainMapper5.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper9 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper10 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean11 = createPostRequestToPostMapper10.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper12 = null;
        ma.glasnost.orika.MapperFacade mapperFacade13 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl1, submitResultRequestToDomainMapper5, resultToDescriptionMapper9, createPostRequestToPostMapper10, postToDtoMapper12);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository14 = null;
        ma.glasnost.orika.MapperFacade mapperFacade15 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository16 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto17 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl18 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean19 = answerDto17.equals((java.lang.Object) markComputerImpl18);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl20 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository14, mapperFacade15, userRepository16, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18);
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository21 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository22 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository23 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper24 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository21, testRepository22, answerRepository23);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType25 = submitResultRequestToDomainMapper24.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper24.getBType();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper28 = new com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl27);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper29 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType30 = createPostRequestToPostMapper29.getBType();
        com.vntu.marenko.ualearning.server.model.Post post31 = new com.vntu.marenko.ualearning.server.model.Post();
        post31.setText("");
        java.lang.String str34 = post31.toString();
        post31.setId((java.lang.Integer) 10);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest37 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest37.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        ma.glasnost.orika.MappingContext mappingContext40 = null;
        createPostRequestToPostMapper29.mapBtoA(post31, createPostRequest37, mappingContext40);
        com.vntu.marenko.ualearning.server.model.Post post42 = new com.vntu.marenko.ualearning.server.model.Post();
        post42.setText("");
        java.lang.String str45 = post42.toString();
        java.lang.Integer int46 = post42.getId();
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest47 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        java.lang.String str48 = createPostRequest47.getUsername();
        java.lang.String str49 = createPostRequest47.toString();
        ma.glasnost.orika.MappingContext mappingContext50 = null;
        createPostRequestToPostMapper29.mapBtoA(post42, createPostRequest47, mappingContext50);
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository52 = null;
        ma.glasnost.orika.MapperFacade mapperFacade53 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository54 = null;
        com.vntu.marenko.ualearning.server.component.MarkComputer markComputer55 = null;
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl56 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository52, mapperFacade53, userRepository54, markComputer55);
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper57 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean58 = createPostRequestToPostMapper57.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig59 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl60 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository61 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository62 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository63 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper64 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository61, testRepository62, answerRepository63);
        ma.glasnost.orika.MapperFacade mapperFacade65 = null;
        submitResultRequestToDomainMapper64.setMapperFacade(mapperFacade65);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType67 = submitResultRequestToDomainMapper64.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper68 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper69 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean70 = createPostRequestToPostMapper69.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper71 = null;
        ma.glasnost.orika.MapperFacade mapperFacade72 = mapperConfig59.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl60, submitResultRequestToDomainMapper64, resultToDescriptionMapper68, createPostRequestToPostMapper69, postToDtoMapper71);
        createPostRequestToPostMapper57.setMapperFacade(mapperFacade72);
        com.vntu.marenko.ualearning.server.controller.ResultController resultController74 = new com.vntu.marenko.ualearning.server.controller.ResultController((com.vntu.marenko.ualearning.server.service.ResultService) resultServiceImpl56, mapperFacade72);
        createPostRequestToPostMapper29.setMapperFacade(mapperFacade72);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper76 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig77 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl78 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository79 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository80 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository81 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper82 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository79, testRepository80, answerRepository81);
        ma.glasnost.orika.MapperFacade mapperFacade83 = null;
        submitResultRequestToDomainMapper82.setMapperFacade(mapperFacade83);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType85 = submitResultRequestToDomainMapper82.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper86 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper87 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean88 = createPostRequestToPostMapper87.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper89 = null;
        ma.glasnost.orika.MapperFacade mapperFacade90 = mapperConfig77.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl78, submitResultRequestToDomainMapper82, resultToDescriptionMapper86, createPostRequestToPostMapper87, postToDtoMapper89);
        postToDtoMapper76.setMapperFacade(mapperFacade90);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.PostDto> postDtoType92 = postToDtoMapper76.getBType();
        java.lang.Boolean boolean93 = postToDtoMapper76.favorsExtension();
        ma.glasnost.orika.MapperFacade mapperFacade94 = mapperConfig0.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl18, submitResultRequestToDomainMapper24, resultToDescriptionMapper28, createPostRequestToPostMapper29, postToDtoMapper76);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType95 = resultToDescriptionMapper28.getAType();
        org.junit.Assert.assertNotNull(resultType8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(mapperFacade13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(resultType25);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertNotNull(postType30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str34, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str45, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "CreatePostRequest(text=null, username=null)" + "'", str49, "CreatePostRequest(text=null, username=null)");
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + false + "'", boolean58, false);
        org.junit.Assert.assertNotNull(resultType67);
        org.junit.Assert.assertEquals("'" + boolean70 + "' != '" + false + "'", boolean70, false);
        org.junit.Assert.assertNotNull(mapperFacade72);
        org.junit.Assert.assertNotNull(resultType85);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
        org.junit.Assert.assertNotNull(mapperFacade90);
        org.junit.Assert.assertNotNull(postDtoType92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
        org.junit.Assert.assertNotNull(mapperFacade94);
        org.junit.Assert.assertNotNull(resultType95);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        com.vntu.marenko.ualearning.server.model.Question question0 = new com.vntu.marenko.ualearning.server.model.Question();
        com.vntu.marenko.ualearning.server.model.Answer answer1 = new com.vntu.marenko.ualearning.server.model.Answer();
        answer1.setText("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        boolean boolean4 = answer1.isCorrect();
        boolean boolean5 = question0.equals((java.lang.Object) answer1);
        java.lang.String str6 = question0.toString();
        com.vntu.marenko.ualearning.server.model.Question question7 = new com.vntu.marenko.ualearning.server.model.Question();
        java.lang.Integer int8 = question7.getId();
        java.lang.Integer int9 = question7.getId();
        question7.setId((java.lang.Integer) (-1));
        com.vntu.marenko.ualearning.server.model.Answer answer12 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str13 = answer12.getText();
        java.lang.String str14 = answer12.getText();
        com.vntu.marenko.ualearning.server.model.Answer[] answerArray15 = new com.vntu.marenko.ualearning.server.model.Answer[] { answer12 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer> answerList16 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.model.Answer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.model.Answer>) answerList16, answerArray15);
        question7.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.model.Answer>) answerList16);
        java.lang.String str19 = question7.toString();
        java.util.List<com.vntu.marenko.ualearning.server.model.Answer> answerList20 = question7.getAnswers();
        question0.setAnswers(answerList20);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Question(id=null, text=null, answers=null)" + "'", str6, "Question(id=null, text=null, answers=null)");
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(answerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Question(id=-1, text=null, answers=[Answer(id=null, text=null, correct=false)])" + "'", str19, "Question(id=-1, text=null, answers=[Answer(id=null, text=null, correct=false)])");
        org.junit.Assert.assertNotNull(answerList20);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest0 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str1 = userRequest0.getInstitution();
        java.lang.String str2 = userRequest0.getSurname();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        com.vntu.marenko.ualearning.server.model.User user0 = new com.vntu.marenko.ualearning.server.model.User();
        user0.setInstitution("hi!");
        java.lang.String str3 = user0.toString();
        java.lang.String str4 = user0.getEmail();
        java.lang.String str5 = user0.getEmail();
        long long6 = user0.getRating();
        java.lang.String str7 = user0.getInstitution();
        user0.setAge((-1));
        user0.setSurname("UserDto(login=null, name=null, surname=null, age=0, institution=, email=null, rating=0)");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str3, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        com.vntu.marenko.ualearning.server.model.Tag tag0 = new com.vntu.marenko.ualearning.server.model.Tag();
        java.lang.String str1 = tag0.toString();
        java.lang.String str2 = tag0.toString();
        com.vntu.marenko.ualearning.server.dto.UserRequest userRequest3 = new com.vntu.marenko.ualearning.server.dto.UserRequest();
        java.lang.String str4 = userRequest3.getInstitution();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto5 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto5.setId((int) '#');
        boolean boolean8 = userRequest3.equals((java.lang.Object) '#');
        boolean boolean9 = tag0.equals((java.lang.Object) boolean8);
        tag0.setName("ResultDescription(id=null, testId=100, testName=null, mark=0)");
        tag0.setName("ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        com.vntu.marenko.ualearning.server.model.User user14 = new com.vntu.marenko.ualearning.server.model.User();
        user14.setInstitution("hi!");
        java.lang.String str17 = user14.toString();
        java.lang.String str18 = user14.getEmail();
        java.lang.String str19 = user14.getEmail();
        java.lang.String str20 = user14.getInstitution();
        boolean boolean21 = tag0.equals((java.lang.Object) str20);
        java.lang.String str22 = tag0.getName();
        java.lang.String str23 = tag0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Tag(id=null, name=null)" + "'", str1, "Tag(id=null, name=null)");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Tag(id=null, name=null)" + "'", str2, "Tag(id=null, name=null)");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str17, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)" + "'", str22, "ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0)");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))" + "'", str23, "Tag(id=null, name=ResultDto(id=0, user=null, test=null, submitted=false, answers=[AnswerDto(id=0, text=null), AnswerDto(id=0, text=hi!), AnswerDto(id=0, text=null), AnswerDto(id=0, text=null)], mark=0))");
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper0 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Post> postType1 = createPostRequestToPostMapper0.getBType();
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.CreatePostRequest> createPostRequestType2 = createPostRequestToPostMapper0.getAType();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig3 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository5 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository6 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository7 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper8 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository5, testRepository6, answerRepository7);
        ma.glasnost.orika.MapperFacade mapperFacade9 = null;
        submitResultRequestToDomainMapper8.setMapperFacade(mapperFacade9);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType11 = submitResultRequestToDomainMapper8.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper12 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper13 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean14 = createPostRequestToPostMapper13.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper15 = null;
        ma.glasnost.orika.MapperFacade mapperFacade16 = mapperConfig3.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4, submitResultRequestToDomainMapper8, resultToDescriptionMapper12, createPostRequestToPostMapper13, postToDtoMapper15);
        com.vntu.marenko.ualearning.server.dto.CreatePostRequest createPostRequest17 = new com.vntu.marenko.ualearning.server.dto.CreatePostRequest();
        createPostRequest17.setText("Post(id=null, text=, timestamp=null, user=null, likes=null)");
        com.vntu.marenko.ualearning.server.model.Post post20 = new com.vntu.marenko.ualearning.server.model.Post();
        ma.glasnost.orika.MappingContext mappingContext21 = null;
        createPostRequestToPostMapper13.mapAtoB(createPostRequest17, post20, mappingContext21);
        com.vntu.marenko.ualearning.server.model.Post post23 = new com.vntu.marenko.ualearning.server.model.Post();
        post23.setText("");
        java.lang.String str26 = post23.toString();
        java.util.Date date27 = null;
        post23.setTimestamp(date27);
        ma.glasnost.orika.MappingContext mappingContext29 = null;
        createPostRequestToPostMapper0.mapAtoB(createPostRequest17, post23, mappingContext29);
        post23.setUser("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        org.junit.Assert.assertNotNull(postType1);
        org.junit.Assert.assertNotNull(createPostRequestType2);
        org.junit.Assert.assertNotNull(resultType11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(mapperFacade16);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Post(id=null, text=, timestamp=null, user=null, likes=null)" + "'", str26, "Post(id=null, text=, timestamp=null, user=null, likes=null)");
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository0 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository1 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository2 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper3 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository0, testRepository1, answerRepository2);
        ma.glasnost.orika.MapperFacade mapperFacade4 = null;
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade4);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.dto.SubmitResultRequest> submitResultRequestType6 = submitResultRequestToDomainMapper3.getAType();
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test14 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int15 = test14.getId();
        java.lang.Integer int16 = test14.getId();
        test14.setDescriptionTest("User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        java.lang.Integer int19 = test14.getCompletedCounter();
        java.lang.Integer int20 = test14.getCompletedCounter();
        result7.setTest(test14);
        com.vntu.marenko.ualearning.server.model.User user22 = result7.getUser();
        com.vntu.marenko.ualearning.server.dto.SubmitResultRequest submitResultRequest23 = null;
        ma.glasnost.orika.MappingContext mappingContext24 = null;
        submitResultRequestToDomainMapper3.mapBtoA(result7, submitResultRequest23, mappingContext24);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType26 = submitResultRequestToDomainMapper3.getBType();
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository27 = null;
        com.vntu.marenko.ualearning.server.repository.TagRepository tagRepository28 = null;
        com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl testServiceImpl29 = new com.vntu.marenko.ualearning.server.service.impl.TestServiceImpl(testRepository27, tagRepository28);
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper30 = new com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper();
        com.vntu.marenko.ualearning.server.mapper.MapperConfig mapperConfig31 = new com.vntu.marenko.ualearning.server.mapper.MapperConfig();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl32 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository33 = null;
        com.vntu.marenko.ualearning.server.repository.TestRepository testRepository34 = null;
        com.vntu.marenko.ualearning.server.repository.AnswerRepository answerRepository35 = null;
        com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper submitResultRequestToDomainMapper36 = new com.vntu.marenko.ualearning.server.mapper.SubmitResultRequestToDomainMapper(userRepository33, testRepository34, answerRepository35);
        ma.glasnost.orika.MapperFacade mapperFacade37 = null;
        submitResultRequestToDomainMapper36.setMapperFacade(mapperFacade37);
        ma.glasnost.orika.metadata.Type<com.vntu.marenko.ualearning.server.model.Result> resultType39 = submitResultRequestToDomainMapper36.getBType();
        com.vntu.marenko.ualearning.server.mapper.ResultToDescriptionMapper resultToDescriptionMapper40 = null;
        com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper createPostRequestToPostMapper41 = new com.vntu.marenko.ualearning.server.mapper.CreatePostRequestToPostMapper();
        java.lang.Boolean boolean42 = createPostRequestToPostMapper41.favorsExtension();
        com.vntu.marenko.ualearning.server.mapper.PostToDtoMapper postToDtoMapper43 = null;
        ma.glasnost.orika.MapperFacade mapperFacade44 = mapperConfig31.createMapper((com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl32, submitResultRequestToDomainMapper36, resultToDescriptionMapper40, createPostRequestToPostMapper41, postToDtoMapper43);
        postToDtoMapper30.setMapperFacade(mapperFacade44);
        com.vntu.marenko.ualearning.server.controller.TestController testController46 = new com.vntu.marenko.ualearning.server.controller.TestController((com.vntu.marenko.ualearning.server.service.TestService) testServiceImpl29, mapperFacade44);
        submitResultRequestToDomainMapper3.setMapperFacade(mapperFacade44);
        ma.glasnost.orika.Mapper[] mapperArray49 = new ma.glasnost.orika.Mapper[0];
        @SuppressWarnings("unchecked")
        ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[] objMapperArray50 = (ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray49;
        // The following exception was thrown during execution in test generation
        try {
            submitResultRequestToDomainMapper3.setUsedMappers((ma.glasnost.orika.Mapper<java.lang.Object, java.lang.Object>[]) mapperArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Should not be called for a user custom mapper.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(submitResultRequestType6);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(user22);
        org.junit.Assert.assertNotNull(resultType26);
        org.junit.Assert.assertNotNull(resultType39);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
        org.junit.Assert.assertNotNull(mapperFacade44);
        org.junit.Assert.assertNotNull(mapperArray49);
        org.junit.Assert.assertNotNull(objMapperArray50);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        com.vntu.marenko.ualearning.server.model.Test test0 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int1 = test0.getId();
        test0.setCompletedCounter((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int1);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto0 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        java.lang.String str1 = questionDto0.getText();
        int int2 = questionDto0.getId();
        com.vntu.marenko.ualearning.server.model.User user3 = new com.vntu.marenko.ualearning.server.model.User();
        user3.setInstitution("hi!");
        java.lang.String str6 = user3.toString();
        java.lang.String str7 = user3.getEmail();
        java.lang.String str8 = user3.getEmail();
        boolean boolean9 = questionDto0.equals((java.lang.Object) str8);
        int int10 = questionDto0.getId();
        questionDto0.setId((int) (short) 0);
        java.lang.String str13 = questionDto0.getText();
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList14 = questionDto0.getAnswers();
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto15 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto15.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto18 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl19 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean20 = answerDto18.equals((java.lang.Object) markComputerImpl19);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto21 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto22 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl23 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean24 = answerDto22.equals((java.lang.Object) markComputerImpl23);
        int int25 = answerDto22.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto26 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl27 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean28 = answerDto26.equals((java.lang.Object) markComputerImpl27);
        int int29 = answerDto26.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto30 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto30.setText("hi!");
        java.lang.String str33 = answerDto30.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray34 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto18, answerDto21, answerDto22, answerDto26, answerDto30 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList35 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList35, answerDtoArray34);
        questionDto15.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList35);
        questionDto15.setId((int) (short) -1);
        com.vntu.marenko.ualearning.server.dto.QuestionDto questionDto40 = new com.vntu.marenko.ualearning.server.dto.QuestionDto();
        questionDto40.setId((int) '#');
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto43 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        com.vntu.marenko.ualearning.server.dto.TestDto testDto44 = null;
        resultDto43.setTest(testDto44);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto46 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl47 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean48 = answerDto46.equals((java.lang.Object) markComputerImpl47);
        int int49 = answerDto46.getId();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto50 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        answerDto50.setText("hi!");
        java.lang.String str53 = answerDto50.getText();
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto54 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl55 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean56 = answerDto54.equals((java.lang.Object) markComputerImpl55);
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto57 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl58 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean59 = answerDto57.equals((java.lang.Object) markComputerImpl58);
        com.vntu.marenko.ualearning.server.dto.AnswerDto[] answerDtoArray60 = new com.vntu.marenko.ualearning.server.dto.AnswerDto[] { answerDto46, answerDto50, answerDto54, answerDto57 };
        java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList61 = new java.util.ArrayList<com.vntu.marenko.ualearning.server.dto.AnswerDto>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList61, answerDtoArray60);
        resultDto43.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList61);
        questionDto40.setAnswers((java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto>) answerDtoList61);
        com.vntu.marenko.ualearning.server.model.User user65 = new com.vntu.marenko.ualearning.server.model.User();
        user65.setEmail("hi!");
        user65.setSurname("hi!");
        user65.setInstitution("Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null)");
        boolean boolean72 = questionDto40.equals((java.lang.Object) user65);
        java.util.List<com.vntu.marenko.ualearning.server.dto.AnswerDto> answerDtoList73 = questionDto40.getAnswers();
        questionDto15.setAnswers(answerDtoList73);
        questionDto0.setAnswers(answerDtoList73);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)" + "'", str6, "User(login=null, password=null, name=null, surname=null, age=0, institution=hi!, email=null, rating=0)");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(answerDtoList14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(answerDtoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(answerDtoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(answerDtoList73);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        com.vntu.marenko.ualearning.server.dto.ResultDto resultDto0 = new com.vntu.marenko.ualearning.server.dto.ResultDto();
        resultDto0.setId(100);
        com.vntu.marenko.ualearning.server.dto.TestDto testDto3 = resultDto0.getTest();
        org.junit.Assert.assertNull(testDto3);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        com.vntu.marenko.ualearning.server.model.Answer answer0 = new com.vntu.marenko.ualearning.server.model.Answer();
        java.lang.String str1 = answer0.getText();
        answer0.setId((java.lang.Integer) 100);
        boolean boolean4 = answer0.isCorrect();
        answer0.setText("TestDto(id=0, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=[TagDto(id=0, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=1, name=null), TagDto(id=1, name=null), TagDto(id=0, name=null), TagDto(id=0, name=null)])");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        com.vntu.marenko.ualearning.server.dto.TagDto tagDto0 = new com.vntu.marenko.ualearning.server.dto.TagDto();
        tagDto0.setId(1);
        tagDto0.setName("User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        java.lang.String str5 = tagDto0.getName();
        java.lang.String str6 = tagDto0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)" + "'", str5, "User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0)");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "TagDto(id=1, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0))" + "'", str6, "TagDto(id=1, name=User(login=null, password=null, name=null, surname=hi!, age=0, institution=Test(id=null, nameTest=null, descriptionTest=null, completedCounter=null, questions=null, tags=null), email=hi!, rating=0))");
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        com.vntu.marenko.ualearning.server.repository.ResultRepository resultRepository0 = null;
        ma.glasnost.orika.MapperFacade mapperFacade1 = null;
        com.vntu.marenko.ualearning.server.repository.UserRepository userRepository2 = null;
        com.vntu.marenko.ualearning.server.dto.AnswerDto answerDto3 = new com.vntu.marenko.ualearning.server.dto.AnswerDto();
        com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl markComputerImpl4 = new com.vntu.marenko.ualearning.server.component.impl.MarkComputerImpl();
        boolean boolean5 = answerDto3.equals((java.lang.Object) markComputerImpl4);
        com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl resultServiceImpl6 = new com.vntu.marenko.ualearning.server.service.impl.ResultServiceImpl(resultRepository0, mapperFacade1, userRepository2, (com.vntu.marenko.ualearning.server.component.MarkComputer) markComputerImpl4);
        com.vntu.marenko.ualearning.server.model.Result result7 = new com.vntu.marenko.ualearning.server.model.Result();
        java.lang.Integer int8 = result7.getId();
        com.vntu.marenko.ualearning.server.model.Test test9 = new com.vntu.marenko.ualearning.server.model.Test();
        java.lang.Integer int10 = test9.getId();
        java.lang.Integer int11 = test9.getId();
        result7.setTest(test9);
        java.lang.Integer int13 = result7.getId();
        com.vntu.marenko.ualearning.server.model.User user14 = new com.vntu.marenko.ualearning.server.model.User();
        user14.setSurname("");
        result7.setUser(user14);
        // The following exception was thrown during execution in test generation
        try {
            long long18 = markComputerImpl4.compute(result7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int13);
    }
}

